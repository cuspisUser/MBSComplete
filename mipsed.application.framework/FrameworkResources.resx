<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NotActivated" xml:space="preserve">
    <value>Molimo aktivirajte aplikaciju u administrativnim alatima.</value>
  </data>
  <data name="SelectUserKorisnik" xml:space="preserve">
    <value>SELECT     dbo.KORISNIK.PROFILECATALOG, dbo.USERS.IDUSER, dbo.USERS.KORISNIKUSERIDKORISNIK, dbo.USERS.PWDUSER, 
                      dbo.KORISNIK.KORISNIK1NAZIV, dbo.KORISNIK.KORISNIK1ADRESA, dbo.KORISNIK.KORISNIK1MJESTO, dbo.KORISNIK.MBKORISNIK, 
                      dbo.KORISNIK.MBKORISNIKJEDINICA, dbo.KORISNIK.JMBGKORISNIK, dbo.KORISNIK.KONTAKTOSOBA, dbo.KORISNIK.KONTAKTTELEFON, 
                      dbo.KORISNIK.KONTAKTFAX, dbo.KORISNIK.EMAIL, dbo.KORISNIK.NADLEZNAPU, dbo.KORISNIK.STAZUKOEFICIJENTU, dbo.KORISNIK.RKP, 
                      dbo.USERS.NAZIVUSER
FROM         dbo.KORISNIK INNER JOIN
                      dbo.USERS ON dbo.KORISNIK.IDKORISNIK = dbo.USERS.KORISNIKUSERIDKORISNIK where iduser = @iduser</value>
  </data>
  <data name="dd_module" xml:space="preserve">
    <value>update porez set moporez = '68'
go
update doprinos set modoprinos = '68'
go
update krizniporez set mokrizni = '68'
go
update DDKATEGORIJALevel1 set ddmoporez = '68'
go
if not exists (select  top 1 ddidizdatak from ddizdatak where ddidizdatak = 1)
begin
INSERT INTO [dbo].[DDIZDATAK] ([DDIDIZDATAK], [DDNAZIVIZDATKA], [DDPOSTOTAKIZDATKA]) VALUES (1, N'priznati troškovi 30%', 30.0000)
end
if not exists (select  top 1 ddidizdatak from ddizdatak where ddidizdatak = 2)
begin
INSERT INTO [dbo].[DDIZDATAK] ([DDIDIZDATAK], [DDNAZIVIZDATKA], [DDPOSTOTAKIZDATKA]) VALUES (2, N'olakšice 25 &amp;', 25.0000)
end
if not exists (select  top 1 IDKOLONAIDD from DDKOLONAIDD where IDKOLONAIDD = 3)
begin
INSERT INTO [dbo].[DDKOLONAIDD] ([IDKOLONAIDD], [NAZIVKOLONAIDD]) VALUES (3, N'KOLONA 3')
end
if not exists (select  top 1 IDKOLONAIDD from DDKOLONAIDD where IDKOLONAIDD = 4)
begin
INSERT INTO [dbo].[DDKOLONAIDD] ([IDKOLONAIDD], [NAZIVKOLONAIDD]) VALUES (4, N'KOLONA 4')
end
if not exists (select  top 1 IDKOLONAIDD from DDKOLONAIDD where IDKOLONAIDD = 5)
begin
INSERT INTO [dbo].[DDKOLONAIDD] ([IDKOLONAIDD], [NAZIVKOLONAIDD]) VALUES (5, N'KOLONA 5')
end
if not exists (select  top 1 IDKOLONAIDD from DDKOLONAIDD where IDKOLONAIDD = 6)
begin
INSERT INTO [dbo].[DDKOLONAIDD] ([IDKOLONAIDD], [NAZIVKOLONAIDD]) VALUES (6, N'KOLONA 6')
end

if not exists (select  top 1 iddoprinos from doprinos where iddoprinos = 8)
begin
INSERT INTO [dbo].[DOPRINOS] ([IDDOPRINOS], [NAZIVDOPRINOS], [IDVRSTADOPRINOS], [STOPA], [MODOPRINOS], [PODOPRINOS], [MZDOPRINOS], [PZDOPRINOS], [PRIMATELJDOPRINOS1], [PRIMATELJDOPRINOS2], [SIFRAOPISAPLACANJADOPRINOS], [OPISPLACANJADOPRINOS], [VBDIDOPRINOS], [ZRNDOPRINOS], [MINDOPRINOS], [MAXDOPRINOS]) VALUES (8, N'Mirovinsko osiguranje I stup - DRUGI DOHODAK', 2, 15.0000, N'21', N'8290-', N'34', N'311116-5790001-11111', N'Državni proračun RH', N'Doprinos za MIO I', N'08', N'Uplata doprinosa za MIO I stup', N'1001005', N'1863000160', 0.0000, 0.0000)
end
if not exists (select  top 1 iddoprinos from doprinos where iddoprinos = 9)
begin
INSERT INTO [dbo].[DOPRINOS] ([IDDOPRINOS], [NAZIVDOPRINOS], [IDVRSTADOPRINOS], [STOPA], [MODOPRINOS], [PODOPRINOS], [MZDOPRINOS], [PZDOPRINOS], [PRIMATELJDOPRINOS1], [PRIMATELJDOPRINOS2], [SIFRAOPISAPLACANJADOPRINOS], [OPISPLACANJADOPRINOS], [VBDIDOPRINOS], [ZRNDOPRINOS], [MINDOPRINOS], [MAXDOPRINOS]) VALUES (9, N'Mirovinsko osiguranje II stup - DRUGI DOHODAK', 2, 5.0000, N'21', N'2194-', N'34', N'311116-5790001-11111', N'Državni proračun RH', N'Doprinos za MIO II', N'08', N'Uplata doprinosa za MIO II stup', N'1001005', N'1700036001', 0.0000, 0.0000)
end
if not exists (select  top 1 iddoprinos from doprinos where iddoprinos = 10)
begin
INSERT INTO [dbo].[DOPRINOS] ([IDDOPRINOS], [NAZIVDOPRINOS], [IDVRSTADOPRINOS], [STOPA], [MODOPRINOS], [PODOPRINOS], [MZDOPRINOS], [PZDOPRINOS], [PRIMATELJDOPRINOS1], [PRIMATELJDOPRINOS2], [SIFRAOPISAPLACANJADOPRINOS], [OPISPLACANJADOPRINOS], [VBDIDOPRINOS], [ZRNDOPRINOS], [MINDOPRINOS], [MAXDOPRINOS]) VALUES (10, N'Mirovinsko osiguranje (samo I stup) - DRUGI DOHODA', 2, 20.0000, N'21', N'8290-', N'34', N'311116-5790001-11429', N'Državni proračun RH', N'Doprinos za MIO I', N'08', N'Uplata doprinosa za MIO I stup', N'1001005', N'1863000160', 0.0000, 0.0000)
end
if not exists (select  top 1 iddoprinos from doprinos where iddoprinos = 11)
begin
INSERT INTO [dbo].[DOPRINOS] ([IDDOPRINOS], [NAZIVDOPRINOS], [IDVRSTADOPRINOS], [STOPA], [MODOPRINOS], [PODOPRINOS], [MZDOPRINOS], [PZDOPRINOS], [PRIMATELJDOPRINOS1], [PRIMATELJDOPRINOS2], [SIFRAOPISAPLACANJADOPRINOS], [OPISPLACANJADOPRINOS], [VBDIDOPRINOS], [ZRNDOPRINOS], [MINDOPRINOS], [MAXDOPRINOS]) VALUES (11, N'Osnovno zdravstveno osiguranje - DRUGI DOHODAK', 1, 15.0000, N'21', N'8664-', N'34', N'313218-5790001-11111', N'Državni proračun RH', N'Doprinos za zdravstn', N'08', N'Uplata doprinosa za zdravstvo', N'1001005', N'1863000160', 0.0000, 0.0000)
end


if not exists (select  top 1 idporez from porez where idporez = 5)
begin
INSERT INTO [dbo].[POREZ] ([IDPOREZ], [NAZIVPOREZ], [POREZMJESECNO], [STOPAPOREZA], [MOPOREZ], [POPOREZ], [MZPOREZ], [PZPOREZ], [PRIMATELJPOREZ1], [PRIMATELJPOREZ2], [SIFRAOPISAPLACANJAPOREZ], [OPISPLACANJAPOREZ]) VALUES (5, N'POREZ 25 % na DRUGI DOHODAK', 999999.0000, 25.0000, N'22', N'1406-', N'34', N'311116-5790001-11111', N'Porez i prirez', N'na drugi dohodak', N'08', N'Uplata poreza i prireza')
end


if not exists (select  top 1 idkategorija from ddkategorija where idkategorija = 1)
begin
INSERT INTO [dbo].[DDKATEGORIJA] ([IDKATEGORIJA], [NAZIVKATEGORIJA], [IDKOLONAIDD]) VALUES (1, N'UGOVOR O DJELU', 3)
end

if not exists (select  top 1 idkategorija from ddkategorija where idkategorija = 2)
begin
INSERT INTO [dbo].[DDKATEGORIJA] ([IDKATEGORIJA], [NAZIVKATEGORIJA], [IDKOLONAIDD]) VALUES (2, N'UGOVOR O DJELU - UMIROVLJENICI', 4)
end

if not exists (select  top 1 idkategorija from ddkategorija where idkategorija = 3)
begin
INSERT INTO [dbo].[DDKATEGORIJA] ([IDKATEGORIJA], [NAZIVKATEGORIJA], [IDKOLONAIDD]) VALUES (3, N'AUTORSKI HONORAR znanstvenika, stručnjaka, novinar', 6)
end


if not exists (select  top 1 idkategorija from ddkategorija where idkategorija = 4)
begin
INSERT INTO [dbo].[DDKATEGORIJA] ([IDKATEGORIJA], [NAZIVKATEGORIJA], [IDKOLONAIDD]) VALUES (4, N'AUTORSKI HONORAR umjetnika', 5)
end

if not exists (select  top 1 idkategorija from ddkategorija where idkategorija = 5)
begin
INSERT INTO [dbo].[DDKATEGORIJA] ([IDKATEGORIJA], [NAZIVKATEGORIJA], [IDKOLONAIDD]) VALUES (5, N'ČLANOVI SKUPŠT., NADZOR.ODBORA, POVJEREN.,KOMISIJA', 3)
end

if not exists (select  top 1 idkategorija from DDKATEGORIJAIzdaci where idkategorija = 3 and ddidizdatak = 1)
begin
INSERT INTO [dbo].[DDKATEGORIJAIzdaci] ([IDKATEGORIJA], [DDIDIZDATAK]) VALUES (3, 1)
end

if not exists (select  top 1 idkategorija from DDKATEGORIJAIzdaci where idkategorija = 4 and ddidizdatak = 1)
begin
INSERT INTO [dbo].[DDKATEGORIJAIzdaci] ([IDKATEGORIJA], [DDIDIZDATAK]) VALUES (4, 1)
end

if not exists (select  top 1 idkategorija from DDKATEGORIJAIzdaci where idkategorija = 4 and ddidizdatak = 2)
begin
INSERT INTO [dbo].[DDKATEGORIJAIzdaci] ([IDKATEGORIJA], [DDIDIZDATAK]) VALUES (4, 2)
end

if not exists (select  top 1 idkategorija from DDKATEGORIJALevel1 where idkategorija = 1 and idporez = 5)
begin
INSERT INTO [dbo].[DDKATEGORIJALevel1] ([IDKATEGORIJA], [IDPOREZ], [DDMOPOREZ], [DDPOPOREZ]) VALUES (1, 5, N'68', N'1813-')
end

if not exists (select  top 1 idkategorija from DDKATEGORIJALevel1 where idkategorija = 2 and idporez = 5)
begin
INSERT INTO [dbo].[DDKATEGORIJALevel1] ([IDKATEGORIJA], [IDPOREZ], [DDMOPOREZ], [DDPOPOREZ]) VALUES (2, 5, N'68', N'1813-')
end

if not exists (select  top 1 idkategorija from DDKATEGORIJALevel1 where idkategorija = 3 and idporez = 5)
begin
INSERT INTO [dbo].[DDKATEGORIJALevel1] ([IDKATEGORIJA], [IDPOREZ], [DDMOPOREZ], [DDPOPOREZ]) VALUES (3, 5, N'68', N'1465-')
end

if not exists (select  top 1 idkategorija from DDKATEGORIJALevel1 where idkategorija = 4 and idporez = 5)
begin
INSERT INTO [dbo].[DDKATEGORIJALevel1] ([IDKATEGORIJA], [IDPOREZ], [DDMOPOREZ], [DDPOPOREZ]) VALUES (4, 5, N'68', N'1830-')
end

if not exists (select  top 1 idkategorija from DDKATEGORIJALevel1 where idkategorija = 5 and idporez = 5)
begin
INSERT INTO [dbo].[DDKATEGORIJALevel1] ([IDKATEGORIJA], [IDPOREZ], [DDMOPOREZ], [DDPOPOREZ]) VALUES (5, 5, N'68', N'1457-')
end

if not exists (select  top 1 idkategorija from DDKATEGORIJALevel3 where idkategorija = 1 and iddoprinos = 8)
begin
INSERT INTO [dbo].[DDKATEGORIJALevel3] ([IDKATEGORIJA], [IDDOPRINOS], [DOPRINOSDRUGOGSTUPA]) VALUES (1, 8, 1)
end

if not exists (select  top 1 idkategorija from DDKATEGORIJALevel3 where idkategorija = 1 and iddoprinos = 9)
begin
INSERT INTO [dbo].[DDKATEGORIJALevel3] ([IDKATEGORIJA], [IDDOPRINOS], [DOPRINOSDRUGOGSTUPA]) VALUES (1, 9, 1)
end
if not exists (select  top 1 idkategorija from DDKATEGORIJALevel3 where idkategorija = 1 and iddoprinos = 10)
begin
INSERT INTO [dbo].[DDKATEGORIJALevel3] ([IDKATEGORIJA], [IDDOPRINOS], [DOPRINOSDRUGOGSTUPA]) VALUES (1, 10, 0)
end
if not exists (select  top 1 idkategorija from DDKATEGORIJALevel3 where idkategorija = 1 and iddoprinos = 11)
begin
INSERT INTO [dbo].[DDKATEGORIJALevel3] ([IDKATEGORIJA], [IDDOPRINOS], [DOPRINOSDRUGOGSTUPA]) VALUES (1, 11, 0)
end
if not exists (select  top 1 idkategorija from DDKATEGORIJALevel3 where idkategorija = 5 and iddoprinos = 8)
begin
INSERT INTO [dbo].[DDKATEGORIJALevel3] ([IDKATEGORIJA], [IDDOPRINOS], [DOPRINOSDRUGOGSTUPA]) VALUES (5, 8, 1)
end
if not exists (select  top 1 idkategorija from DDKATEGORIJALevel3 where idkategorija = 5 and iddoprinos = 9)
begin
INSERT INTO [dbo].[DDKATEGORIJALevel3] ([IDKATEGORIJA], [IDDOPRINOS], [DOPRINOSDRUGOGSTUPA]) VALUES (5, 9, 1)
end
if not exists (select  top 1 idkategorija from DDKATEGORIJALevel3 where idkategorija = 5 and iddoprinos = 10)
begin
INSERT INTO [dbo].[DDKATEGORIJALevel3] ([IDKATEGORIJA], [IDDOPRINOS], [DOPRINOSDRUGOGSTUPA]) VALUES (5, 10, 0)
end
if not exists (select  top 1 idkategorija from DDKATEGORIJALevel3 where idkategorija = 5 and iddoprinos = 11)
begin
INSERT INTO [dbo].[DDKATEGORIJALevel3] ([IDKATEGORIJA], [IDDOPRINOS], [DOPRINOSDRUGOGSTUPA]) VALUES (5, 1, 0)
end

if not exists (select  top 1 idtipaiznosa from tipiznosa where idtipaiznosa = 9)
begin
INSERT INTO [dbo].[TIPIZNOSA] ([IDTIPAIZNOSA], [OPISTIPAIZNOSA], [OZNAKATIPAIZNOSA], [VBDITIPAIZNOSA], [ZIROTIPAIZNOSA], [MOTIPAIZNOSA], [POTIPAIZNOSA]) VALUES (9, N'Mirovinsko osiguranje (I. stup) drugi dohodak', N'MIOI', N'1001005', N'1863000160', N'21', N'8290-')
end

if not exists (select  top 1 idtipaiznosa from tipiznosa where idtipaiznosa = 10)
begin
INSERT INTO [dbo].[TIPIZNOSA] ([IDTIPAIZNOSA], [OPISTIPAIZNOSA], [OZNAKATIPAIZNOSA], [VBDITIPAIZNOSA], [ZIROTIPAIZNOSA], [MOTIPAIZNOSA], [POTIPAIZNOSA]) VALUES (10, N'Mirovinsko osiguranje (II. stup) drugi dohodak', N'MIOII', N'1001005', N'1700036001', N'21', N'2194-')
end
if not exists (select  top 1 idtipaiznosa from tipiznosa where idtipaiznosa = 11)
begin
INSERT INTO [dbo].[TIPIZNOSA] ([IDTIPAIZNOSA], [OPISTIPAIZNOSA], [OZNAKATIPAIZNOSA], [VBDITIPAIZNOSA], [ZIROTIPAIZNOSA], [MOTIPAIZNOSA], [POTIPAIZNOSA]) VALUES (11, N'Zdravstveno osiguranje (drugi dohodak) drugi dohodak', N'ZDR-O', N'1001005', N'1863000160', N'21', N'8664-')
end
if not exists (select  top 1 idtipaiznosa from tipiznosa where idtipaiznosa = 21)
begin
INSERT INTO [dbo].[TIPIZNOSA] ([IDTIPAIZNOSA], [OPISTIPAIZNOSA], [OZNAKATIPAIZNOSA], [VBDITIPAIZNOSA], [ZIROTIPAIZNOSA], [MOTIPAIZNOSA], [POTIPAIZNOSA]) VALUES (21, N'Mirovinsko osiguranje (I. stup)', N'MIOI', N'1001005', N'1863000160', N'68', N'8109-')
end
if not exists (select  top 1 idtipaiznosa from tipiznosa where idtipaiznosa = 22)
begin
INSERT INTO [dbo].[TIPIZNOSA] ([IDTIPAIZNOSA], [OPISTIPAIZNOSA], [OZNAKATIPAIZNOSA], [VBDITIPAIZNOSA], [ZIROTIPAIZNOSA], [MOTIPAIZNOSA], [POTIPAIZNOSA]) VALUES (22, N'Mirovinsko osiguranje za povećani staž (I. stup)', N'MIOI-P', N'1001005', N'1863000160', N'68', N'8150-')
end
if not exists (select  top 1 idtipaiznosa from tipiznosa where idtipaiznosa = 23)
begin
INSERT INTO [dbo].[TIPIZNOSA] ([IDTIPAIZNOSA], [OPISTIPAIZNOSA], [OZNAKATIPAIZNOSA], [VBDITIPAIZNOSA], [ZIROTIPAIZNOSA], [MOTIPAIZNOSA], [POTIPAIZNOSA]) VALUES (23, N'Mirovinsko osiguranje (II. stup)', N'MIOII', N'1001005', N'1700036001', N'68', N'2003-')
end
if not exists (select  top 1 idtipaiznosa from tipiznosa where idtipaiznosa = 24)
begin
INSERT INTO [dbo].[TIPIZNOSA] ([IDTIPAIZNOSA], [OPISTIPAIZNOSA], [OZNAKATIPAIZNOSA], [VBDITIPAIZNOSA], [ZIROTIPAIZNOSA], [MOTIPAIZNOSA], [POTIPAIZNOSA]) VALUES (24, N'Mirovinsko osiguranje za povećani staž (II. stup)', N'MIOII-P', N'1001005', N'1700036001', N'68', N'2020-')
end
if not exists (select  top 1 idtipaiznosa from tipiznosa where idtipaiznosa = 25)
begin
INSERT INTO [dbo].[TIPIZNOSA] ([IDTIPAIZNOSA], [OPISTIPAIZNOSA], [OZNAKATIPAIZNOSA], [VBDITIPAIZNOSA], [ZIROTIPAIZNOSA], [MOTIPAIZNOSA], [POTIPAIZNOSA]) VALUES (25, N'Zdravstveno osiguranje (osnovno)', N'ZDR-O', N'1001005', N'1863000160', N'68', N'8400-')
end
if not exists (select  top 1 idtipaiznosa from tipiznosa where idtipaiznosa = 26)
begin
INSERT INTO [dbo].[TIPIZNOSA] ([IDTIPAIZNOSA], [OPISTIPAIZNOSA], [OZNAKATIPAIZNOSA], [VBDITIPAIZNOSA], [ZIROTIPAIZNOSA], [MOTIPAIZNOSA], [POTIPAIZNOSA]) VALUES (26, N'Prava u slučaju ozljede na radu i profesionalne bolesti', N'ZDR-P', N'1001005', N'1863000160', N'68', N'8559-')
end
if not exists (select  top 1 idtipaiznosa from tipiznosa where idtipaiznosa = 27)
begin
INSERT INTO [dbo].[TIPIZNOSA] ([IDTIPAIZNOSA], [OPISTIPAIZNOSA], [OZNAKATIPAIZNOSA], [VBDITIPAIZNOSA], [ZIROTIPAIZNOSA], [MOTIPAIZNOSA], [POTIPAIZNOSA]) VALUES (27, N'Zapošljavanje', N'ZAP', N'1001005', N'1863000160', N'68', N'8702-')
end
if not exists (select  top 1 idtipaiznosa from tipiznosa where idtipaiznosa = 28)
begin
INSERT INTO [dbo].[TIPIZNOSA] ([IDTIPAIZNOSA], [OPISTIPAIZNOSA], [OZNAKATIPAIZNOSA], [VBDITIPAIZNOSA], [ZIROTIPAIZNOSA], [MOTIPAIZNOSA], [POTIPAIZNOSA]) VALUES (28, N'Zapošljavanje osoba s invalidnošću', N'ZAP-I', N'1001005', N'1863000160', N'68', N'8729-')
end
 if not exists (select  top 1 idtipaiznosa from tipiznosa where idtipaiznosa = 29)
begin
INSERT INTO [dbo].[TIPIZNOSA] ([IDTIPAIZNOSA], [OPISTIPAIZNOSA], [OZNAKATIPAIZNOSA], [VBDITIPAIZNOSA], [ZIROTIPAIZNOSA], [MOTIPAIZNOSA], [POTIPAIZNOSA]) VALUES (29, N'Mirovinsko osiguranje (I. stup) drugi dohodak', N'MIOI', N'1001005', N'1863000160', N'68', N'8290-')
end
if not exists (select  top 1 idtipaiznosa from tipiznosa where idtipaiznosa = 30)
begin
INSERT INTO [dbo].[TIPIZNOSA] ([IDTIPAIZNOSA], [OPISTIPAIZNOSA], [OZNAKATIPAIZNOSA], [VBDITIPAIZNOSA], [ZIROTIPAIZNOSA], [MOTIPAIZNOSA], [POTIPAIZNOSA]) VALUES (30, N'Mirovinsko osiguranje (II. stup) drugi dohodak', N'MIOII', N'1001005', N'1700036001', N'68', N'2194-')
end
if not exists (select  top 1 idtipaiznosa from tipiznosa where idtipaiznosa = 31)
begin
INSERT INTO [dbo].[TIPIZNOSA] ([IDTIPAIZNOSA], [OPISTIPAIZNOSA], [OZNAKATIPAIZNOSA], [VBDITIPAIZNOSA], [ZIROTIPAIZNOSA], [MOTIPAIZNOSA], [POTIPAIZNOSA]) VALUES (31, N'Zdravstveno osiguranje (drugi dohodak) drugi dohodak', N'ZDR-O', N'1001005', N'1863000160', N'68', N'8664-')
end
if not exists (select  top 1 IDIRAVRSTAIZNOSA from IRAVRSTAIZNOSA where IDIRAVRSTAIZNOSA = 2)
begin
INSERT INTO [dbo].[IRAVRSTAIZNOSA] ([IDIRAVRSTAIZNOSA], [IRAVRSTAIZNOSANAZIV]) VALUES (2, N'Osnovica 23%')
end
if not exists (select  top 1 IDIRAVRSTAIZNOSA from IRAVRSTAIZNOSA where IDIRAVRSTAIZNOSA = 3)
begin
INSERT INTO [dbo].[IRAVRSTAIZNOSA] ([IDIRAVRSTAIZNOSA], [IRAVRSTAIZNOSANAZIV]) VALUES (3, N'Osnovica 22%')
end
if not exists (select  top 1 IDIRAVRSTAIZNOSA from IRAVRSTAIZNOSA where IDIRAVRSTAIZNOSA = 4)
begin
INSERT INTO [dbo].[IRAVRSTAIZNOSA] ([IDIRAVRSTAIZNOSA], [IRAVRSTAIZNOSANAZIV]) VALUES (4, N'Osnovica 10%')
end
if not exists (select  top 1 IDIRAVRSTAIZNOSA from IRAVRSTAIZNOSA where IDIRAVRSTAIZNOSA = 5)
begin
INSERT INTO [dbo].[IRAVRSTAIZNOSA] ([IDIRAVRSTAIZNOSA], [IRAVRSTAIZNOSANAZIV]) VALUES (5, N'PDV 23%')
end
if not exists (select  top 1 IDIRAVRSTAIZNOSA from IRAVRSTAIZNOSA where IDIRAVRSTAIZNOSA = 6)
begin
INSERT INTO [dbo].[IRAVRSTAIZNOSA] ([IDIRAVRSTAIZNOSA], [IRAVRSTAIZNOSANAZIV]) VALUES (6, N'PDV 22%')
end
if not exists (select  top 1 IDIRAVRSTAIZNOSA from IRAVRSTAIZNOSA where IDIRAVRSTAIZNOSA = 7)
begin
INSERT INTO [dbo].[IRAVRSTAIZNOSA] ([IDIRAVRSTAIZNOSA], [IRAVRSTAIZNOSANAZIV]) VALUES (7, N'PDV 10%')
end
if not exists (select  top 1 IDIRAVRSTAIZNOSA from IRAVRSTAIZNOSA where IDIRAVRSTAIZNOSA = 8)
begin
INSERT INTO [dbo].[IRAVRSTAIZNOSA] ([IDIRAVRSTAIZNOSA], [IRAVRSTAIZNOSANAZIV]) VALUES (8, N'Ne podliježe oporezivanju')
end
if not exists (select  top 1 IDIRAVRSTAIZNOSA from IRAVRSTAIZNOSA where IDIRAVRSTAIZNOSA = 9)
begin
INSERT INTO [dbo].[IRAVRSTAIZNOSA] ([IDIRAVRSTAIZNOSA], [IRAVRSTAIZNOSANAZIV]) VALUES (9, N'Izvoz')
end
if not exists (select  top 1 IDIRAVRSTAIZNOSA from IRAVRSTAIZNOSA where IDIRAVRSTAIZNOSA = 10)
begin
INSERT INTO [dbo].[IRAVRSTAIZNOSA] ([IDIRAVRSTAIZNOSA], [IRAVRSTAIZNOSANAZIV]) VALUES (10, N'Međunarodni prijevoz')
end
if not exists (select  top 1 IDIRAVRSTAIZNOSA from IRAVRSTAIZNOSA where IDIRAVRSTAIZNOSA = 11)
begin
INSERT INTO [dbo].[IRAVRSTAIZNOSA] ([IDIRAVRSTAIZNOSA], [IRAVRSTAIZNOSANAZIV]) VALUES (11, N'U tuzemstvu')
end
if not exists (select  top 1 IDIRAVRSTAIZNOSA from IRAVRSTAIZNOSA where IDIRAVRSTAIZNOSA = 12)
begin
INSERT INTO [dbo].[IRAVRSTAIZNOSA] ([IDIRAVRSTAIZNOSA], [IRAVRSTAIZNOSANAZIV]) VALUES (12, N'Ostalo')
end
if not exists (select  top 1 IDIRAVRSTAIZNOSA from IRAVRSTAIZNOSA where IDIRAVRSTAIZNOSA = 13)
begin
INSERT INTO [dbo].[IRAVRSTAIZNOSA] ([IDIRAVRSTAIZNOSA], [IRAVRSTAIZNOSANAZIV]) VALUES (13, N'0% ')
end



if not exists (select  top 1 IDURAVRSTAIZNOSA from URAVRSTAIZNOSA where IDURAVRSTAIZNOSA = 2)
begin
INSERT INTO [dbo].[URAVRSTAIZNOSA] ([IDURAVRSTAIZNOSA], [URAVRSTAIZNOSANAZIV]) VALUES (2, N'Osnovica 23% - odbija se')
end
if not exists (select  top 1 IDURAVRSTAIZNOSA from URAVRSTAIZNOSA where IDURAVRSTAIZNOSA = 3)
begin
INSERT INTO [dbo].[URAVRSTAIZNOSA] ([IDURAVRSTAIZNOSA], [URAVRSTAIZNOSANAZIV]) VALUES (3, N'Osnovica 23% - ne odbija se')
end
if not exists (select  top 1 IDURAVRSTAIZNOSA from URAVRSTAIZNOSA where IDURAVRSTAIZNOSA = 4)
begin
INSERT INTO [dbo].[URAVRSTAIZNOSA] ([IDURAVRSTAIZNOSA], [URAVRSTAIZNOSANAZIV]) VALUES (4, N'Osnovica 10% - odbija se')
end
if not exists (select  top 1 IDURAVRSTAIZNOSA from URAVRSTAIZNOSA where IDURAVRSTAIZNOSA = 5)
begin
INSERT INTO [dbo].[URAVRSTAIZNOSA] ([IDURAVRSTAIZNOSA], [URAVRSTAIZNOSANAZIV]) VALUES (5, N'Osnovica 10% - ne odbija se')
end
if not exists (select  top 1 IDURAVRSTAIZNOSA from URAVRSTAIZNOSA where IDURAVRSTAIZNOSA = 6)
begin
INSERT INTO [dbo].[URAVRSTAIZNOSA] ([IDURAVRSTAIZNOSA], [URAVRSTAIZNOSANAZIV]) VALUES (6, N'PDV 23% - odbija se')
end
if not exists (select  top 1 IDURAVRSTAIZNOSA from URAVRSTAIZNOSA where IDURAVRSTAIZNOSA = 7)
begin
INSERT INTO [dbo].[URAVRSTAIZNOSA] ([IDURAVRSTAIZNOSA], [URAVRSTAIZNOSANAZIV]) VALUES (7, N'PDV 23% - ne odbija se')
end
if not exists (select  top 1 IDURAVRSTAIZNOSA from URAVRSTAIZNOSA where IDURAVRSTAIZNOSA = 8)
begin
INSERT INTO [dbo].[URAVRSTAIZNOSA] ([IDURAVRSTAIZNOSA], [URAVRSTAIZNOSANAZIV]) VALUES (8, N'PDV 10% - odbija se')
end
if not exists (select  top 1 IDURAVRSTAIZNOSA from URAVRSTAIZNOSA where IDURAVRSTAIZNOSA = 9)
begin
INSERT INTO [dbo].[URAVRSTAIZNOSA] ([IDURAVRSTAIZNOSA], [URAVRSTAIZNOSANAZIV]) VALUES (9, N'PDV 10% - ne odbija se')
end
if not exists (select  top 1 IDURAVRSTAIZNOSA from URAVRSTAIZNOSA where IDURAVRSTAIZNOSA = 10)
begin
INSERT INTO [dbo].[URAVRSTAIZNOSA] ([IDURAVRSTAIZNOSA], [URAVRSTAIZNOSANAZIV]) VALUES (10, N'Neoporezivo ili 0')
end

if not exists (select  top 1 FINPOREZIDPOREZ from FINPOREZ where FINPOREZIDPOREZ = 1)
begin
INSERT INTO [dbo].[FINPOREZ] ([FINPOREZIDPOREZ], [FINPOREZNAZIVPOREZ], [FINPOREZSTOPA], [OSNOVICAUKNIZIIRA]) VALUES (1, N'23', 23.0000, 17)
end
if not exists (select  top 1 FINPOREZIDPOREZ from FINPOREZ where FINPOREZIDPOREZ = 2)
begin
INSERT INTO [dbo].[FINPOREZ] ([FINPOREZIDPOREZ], [FINPOREZNAZIVPOREZ], [FINPOREZSTOPA], [OSNOVICAUKNIZIIRA]) VALUES (2, N'0', 0.0000, 7)
end


if not exists (select  top 1 IDPLVRSTEIZNOSA from PLVRSTEIZNOSA where IDPLVRSTEIZNOSA = 1)
begin
INSERT INTO [dbo].[PLVRSTEIZNOSA] ([IDPLVRSTEIZNOSA], [NAZIVPLVRSTEIZNOSA]) VALUES (1, N'Bruto plaća-1')
end
if not exists (select  top 1 IDPLVRSTEIZNOSA from PLVRSTEIZNOSA where IDPLVRSTEIZNOSA = 2)
begin
INSERT INTO [dbo].[PLVRSTEIZNOSA] ([IDPLVRSTEIZNOSA], [NAZIVPLVRSTEIZNOSA]) VALUES (2, N'Porez')
end
if not exists (select  top 1 IDPLVRSTEIZNOSA from PLVRSTEIZNOSA where IDPLVRSTEIZNOSA = 3)
begin
INSERT INTO [dbo].[PLVRSTEIZNOSA] ([IDPLVRSTEIZNOSA], [NAZIVPLVRSTEIZNOSA]) VALUES (3, N'Prirez')
end
if not exists (select  top 1 IDPLVRSTEIZNOSA from PLVRSTEIZNOSA where IDPLVRSTEIZNOSA = 4)
begin
INSERT INTO [dbo].[PLVRSTEIZNOSA] ([IDPLVRSTEIZNOSA], [NAZIVPLVRSTEIZNOSA]) VALUES (4, N'Krizni porez')
end
if not exists (select  top 1 IDPLVRSTEIZNOSA from PLVRSTEIZNOSA where IDPLVRSTEIZNOSA = 5)
begin
INSERT INTO [dbo].[PLVRSTEIZNOSA] ([IDPLVRSTEIZNOSA], [NAZIVPLVRSTEIZNOSA]) VALUES (5, N'Neto plaća umanjena za krizni porez')
end
if not exists (select  top 1 IDPLVRSTEIZNOSA from PLVRSTEIZNOSA where IDPLVRSTEIZNOSA = 6)
begin
INSERT INTO [dbo].[PLVRSTEIZNOSA] ([IDPLVRSTEIZNOSA], [NAZIVPLVRSTEIZNOSA]) VALUES (6, N'Bruto plaća-2')
end
if not exists (select  top 1 IDPLVRSTEIZNOSA from PLVRSTEIZNOSA where IDPLVRSTEIZNOSA = 7)
begin
INSERT INTO [dbo].[PLVRSTEIZNOSA] ([IDPLVRSTEIZNOSA], [NAZIVPLVRSTEIZNOSA]) VALUES (7, N'Ukupni trošak poslodavca')
end


if not exists (select  top 1 IDDOKUMENT from DOKUMENT where IDDOKUMENT = 999)
begin
INSERT INTO [dbo].[DOKUMENT] ([IDDOKUMENT], [NAZIVDOKUMENT], [IDTIPDOKUMENTA], [PS]) VALUES (999, N'PLA-AUTO', 1, 0)
end

if not exists (select  top 1 IDDOKUMENT from DOKUMENT where IDDOKUMENT = 998)
begin
INSERT INTO [dbo].[DOKUMENT] ([IDDOKUMENT], [NAZIVDOKUMENT], [IDTIPDOKUMENTA], [PS]) VALUES (998, N'DD-AUTO', 1, 0)
end

if not exists (select  top 1 IDDDVRSTEIZNOSA from DDVRSTEIZNOSA where IDDDVRSTEIZNOSA = 8)
begin
INSERT INTO [dbo].[DDVRSTEIZNOSA] ([IDDDVRSTEIZNOSA], [NAZIVDDVRSTEIZNOSA]) VALUES (8, N'DD Bruto -1')
end
if not exists (select  top 1 IDDDVRSTEIZNOSA from DDVRSTEIZNOSA where IDDDVRSTEIZNOSA = 9)
begin
INSERT INTO [dbo].[DDVRSTEIZNOSA] ([IDDDVRSTEIZNOSA], [NAZIVDDVRSTEIZNOSA]) VALUES (9, N'DD Porez')
end
if not exists (select  top 1 IDDDVRSTEIZNOSA from DDVRSTEIZNOSA where IDDDVRSTEIZNOSA = 10)
begin
INSERT INTO [dbo].[DDVRSTEIZNOSA] ([IDDDVRSTEIZNOSA], [NAZIVDDVRSTEIZNOSA]) VALUES (10, N'DD Prirez')
end

if not exists (select  top 1 IDDDVRSTEIZNOSA from DDVRSTEIZNOSA where IDDDVRSTEIZNOSA = 11)
begin
INSERT INTO [dbo].[DDVRSTEIZNOSA] ([IDDDVRSTEIZNOSA], [NAZIVDDVRSTEIZNOSA]) VALUES (11, N'DD Krizni porez')
end

if not exists (select  top 1 IDDDVRSTEIZNOSA from DDVRSTEIZNOSA where IDDDVRSTEIZNOSA = 12)
begin
INSERT INTO [dbo].[DDVRSTEIZNOSA] ([IDDDVRSTEIZNOSA], [NAZIVDDVRSTEIZNOSA]) VALUES (12, N'DD Neto umanjen za krizni porez')
end
if not exists (select  top 1 IDDDVRSTEIZNOSA from DDVRSTEIZNOSA where IDDDVRSTEIZNOSA = 14)
begin
INSERT INTO [dbo].[DDVRSTEIZNOSA] ([IDDDVRSTEIZNOSA], [NAZIVDDVRSTEIZNOSA]) VALUES (14, N'DD Ukupni trošak poslodavca')
end


if not exists (select  top 1 IDSTRANEKNJIZENJA from STRANEKNJIZENJA where IDSTRANEKNJIZENJA = 1)
begin
INSERT INTO [dbo].[STRANEKNJIZENJA] ([IDSTRANEKNJIZENJA], [NAZIVSTRANEKNJIZENJA]) VALUES (1, N'DUGUJE')
end
if not exists (select  top 1 IDSTRANEKNJIZENJA from STRANEKNJIZENJA where IDSTRANEKNJIZENJA = 2)
begin
INSERT INTO [dbo].[STRANEKNJIZENJA] ([IDSTRANEKNJIZENJA], [NAZIVSTRANEKNJIZENJA]) VALUES (2, N'-DUGUJE')
end
if not exists (select  top 1 IDSTRANEKNJIZENJA from STRANEKNJIZENJA where IDSTRANEKNJIZENJA = 3)
begin
INSERT INTO [dbo].[STRANEKNJIZENJA] ([IDSTRANEKNJIZENJA], [NAZIVSTRANEKNJIZENJA]) VALUES (3, N'POTRAŽUJE')
end
if not exists (select  top 1 IDSTRANEKNJIZENJA from STRANEKNJIZENJA where IDSTRANEKNJIZENJA = 4)
begin
INSERT INTO [dbo].[STRANEKNJIZENJA] ([IDSTRANEKNJIZENJA], [NAZIVSTRANEKNJIZENJA]) VALUES (4, N'-POTRAŽUJE')
end


if not exists (select  top 1 IDURAVRSTAIZNOSA from URAVRSTAIZNOSA where IDURAVRSTAIZNOSA = 1)
begin
INSERT INTO [dbo].[URAVRSTAIZNOSA] ([IDURAVRSTAIZNOSA], [URAVRSTAIZNOSANAZIV]) VALUES (1, N'Ukupan iznos računa')
end


if not exists (select  top 1 IDIRAVRSTAIZNOSA from IRAVRSTAIZNOSA where IDIRAVRSTAIZNOSA = 1)
begin
INSERT INTO [dbo].[IRAVRSTAIZNOSA] ([IDIRAVRSTAIZNOSA], [IRAVRSTAIZNOSANAZIV]) VALUES (1, N'Ukupan iznos računa')
end


if not exists (select  top 1 IDMZOSTABLICE from mzostablice where idmzostablice = 11)
begin
INSERT INTO [dbo].[MZOSTABLICE]
           ([IDMZOSTABLICE]
           ,[OPISMZOSTABLICE])
      VALUES (11, N'kombinacija')
end

if not exists (select  top 1 IDMZOSTABLICE from mzostablice where idmzostablice = 12)
begin
INSERT INTO [dbo].[MZOSTABLICE]
           ([IDMZOSTABLICE]
           ,[OPISMZOSTABLICE])
      VALUES (12, N'kombinacija2')
end


if not exists (select  top 1 IDDRZAVLJANSTVO from DRZAVLJANSTVO where IDDRZAVLJANSTVO = 1)
begin
INSERT INTO [dbo].DRZAVLJANSTVO (IDDRZAVLJANSTVO, NAZIVDRZAVLJANSTVO) VALUES (1, N'Hrvatsko')
end

if not exists (select  top 1 IDUGOVORORADU from UGOVORORADU where IDUGOVORORADU = 1)
begin
INSERT INTO [dbo].UGOVORORADU (IDUGOVORORADU, NAZIVUGOVORORADU) VALUES (1, N'Neodređeno')
end

if not exists (select  top 1 IDUGOVORORADU from UGOVORORADU where IDUGOVORORADU = 2)
begin
INSERT INTO [dbo].UGOVORORADU (IDUGOVORORADU, NAZIVUGOVORORADU) VALUES (2, N'Određeno')
end

UPDATE dbo.DOPRINOS
SET PZDOPRINOS = '313226' + SUBSTRING(pzdoprinos,7,15)
WHERE LEFT(pzdoprinos,6) = '313218' AND STOPA = 0.5
go
UPDATE dbo.DOPRINOS
SET PZDOPRINOS = '313322' + SUBSTRING(pzdoprinos,7,15)
WHERE LEFT(pzdoprinos,6) = '313314'  AND STOPA = 1.6
go
UPDATE dbo.DOPRINOS
SET PZDOPRINOS = '313339' + SUBSTRING(pzdoprinos,7,15)
WHERE LEFT(pzdoprinos,6) = '313314'
go
UPDATE dbo.ELEMENT
SET PZELEMENT = '312166' + SUBSTRING(PZELEMENT,7,15)
WHERE LEFT(PZELEMENT,6) = '312182' OR LEFT(PZELEMENT,6) = '312199'
go



if not exists (select  top 1 idosdokument from osdokument where idosdokument = 1)
begin
INSERT INTO [dbo].osdokument (IDOSDOKUMENT, NAZIVOSDOKUMENT) VALUES (1, N'Nabava')
end
go

if not exists (select  top 1 idosdokument from osdokument where idosdokument = 2)
begin
INSERT INTO [dbo].osdokument (IDOSDOKUMENT, NAZIVOSDOKUMENT) VALUES (2, N'Amortizacija')
end
go


if not exists (select  top 1 idosdokument from osdokument where idosdokument = 3)
begin
INSERT INTO [dbo].osdokument (IDOSDOKUMENT, NAZIVOSDOKUMENT) VALUES (3, N'Rashod')
end
go
if not exists (select  top 1 idosdokument from osdokument where idosdokument = 4)
begin
INSERT INTO [dbo].osdokument (IDOSDOKUMENT, NAZIVOSDOKUMENT) VALUES (4, N'Povećanje vrijednosti')
end
go

if not exists (select  top 1 idosdokument from osdokument where idosdokument = 5)
begin
INSERT INTO [dbo].osdokument (IDOSDOKUMENT, NAZIVOSDOKUMENT) VALUES (5, N'Smanjenje vrijednosti')
end
go
if not exists (select  top 1 idosdokument from osdokument where idosdokument = 6)
begin
INSERT INTO [dbo].osdokument (IDOSDOKUMENT, NAZIVOSDOKUMENT) VALUES (6, N'Višak')
end
go
if not exists (select  top 1 idosdokument from osdokument where idosdokument = 7)
begin
INSERT INTO [dbo].osdokument (IDOSDOKUMENT, NAZIVOSDOKUMENT) VALUES (7, N'Manjak')
end
go




if not exists (select  top 1 idosvrsta from osvrsta where idosvrsta = 1)
begin
INSERT INTO [dbo].osvrsta (idosvrsta, opisosvrsta) VALUES (1, N'Osnovno sredstvo')
end
go
if not exists (select  top 1 idosvrsta from osvrsta where idosvrsta = 2)
begin
INSERT INTO [dbo].osvrsta (idosvrsta, opisosvrsta) VALUES (2, N'Sitan inventar')
end
go



if not exists (select  top 1 idlokacije from lokacije where idlokacije = 9999)
begin
INSERT INTO [dbo].lokacije (idlokacije, opislokacije) VALUES (9999, N'Neraspoređeno')
end
go





BEGIN TRANSACTION

-- Add 6 rows to [dbo].[RAD1GELEMENTI]
INSERT INTO [dbo].[RAD1GELEMENTI] ([RAD1GELEMENTIID], [RAD1GELEMENTINAZIV]) VALUES (1, N'Izvršeni sati rada')
INSERT INTO [dbo].[RAD1GELEMENTI] ([RAD1GELEMENTIID], [RAD1GELEMENTINAZIV]) VALUES (2, N'neizv. sati rada plać. u pr.os')
INSERT INTO [dbo].[RAD1GELEMENTI] ([RAD1GELEMENTIID], [RAD1GELEMENTINAZIV]) VALUES (3, N'neizv. sati rada pla. iz pr.os')
INSERT INTO [dbo].[RAD1GELEMENTI] ([RAD1GELEMENTIID], [RAD1GELEMENTINAZIV]) VALUES (4, N'Neplaćeni sati rada')
INSERT INTO [dbo].[RAD1GELEMENTI] ([RAD1GELEMENTIID], [RAD1GELEMENTINAZIV]) VALUES (5, N'Prekovremeni')
INSERT INTO [dbo].[RAD1GELEMENTI] ([RAD1GELEMENTIID], [RAD1GELEMENTINAZIV]) VALUES (6, N'Broj sati štrajka')

-- Add 5 rows to [dbo].[RAD1MELEMENTI]
INSERT INTO [dbo].[RAD1MELEMENTI] ([RAD1ELEMENTIID], [RAD1ELEMENTINAZIV]) VALUES (1, N'Prekovremeni sati')
INSERT INTO [dbo].[RAD1MELEMENTI] ([RAD1ELEMENTIID], [RAD1ELEMENTINAZIV]) VALUES (2, N'Bolovanje do 42 dana')
INSERT INTO [dbo].[RAD1MELEMENTI] ([RAD1ELEMENTIID], [RAD1ELEMENTINAZIV]) VALUES (3, N'Godišnji odmor')
INSERT INTO [dbo].[RAD1MELEMENTI] ([RAD1ELEMENTIID], [RAD1ELEMENTINAZIV]) VALUES (4, N'Blagdani i neradni')
INSERT INTO [dbo].[RAD1MELEMENTI] ([RAD1ELEMENTIID], [RAD1ELEMENTINAZIV]) VALUES (5, N'Plaćeni a neizvršeni sati')

-- Add 2 rows to [dbo].[RAD1SPOL]
INSERT INTO [dbo].[RAD1SPOL] ([RAD1SPOLID], [RAD1SPOLNAZIV]) VALUES (1, N'Muško')
INSERT INTO [dbo].[RAD1SPOL] ([RAD1SPOLID], [RAD1SPOLNAZIV]) VALUES (2, N'Žensko')

-- Add 8 rows to [dbo].[RAD1SPREME]
INSERT INTO [dbo].[RAD1SPREME] ([RAD1IDSPREME], [RAD1NAZIVSPREME]) VALUES (1, N'Visoka stručna sprema')
INSERT INTO [dbo].[RAD1SPREME] ([RAD1IDSPREME], [RAD1NAZIVSPREME]) VALUES (2, N'Viša stručna sprema')
INSERT INTO [dbo].[RAD1SPREME] ([RAD1IDSPREME], [RAD1NAZIVSPREME]) VALUES (3, N'Srednja stručna sprema')
INSERT INTO [dbo].[RAD1SPREME] ([RAD1IDSPREME], [RAD1NAZIVSPREME]) VALUES (4, N'Niža stručna sprema')
INSERT INTO [dbo].[RAD1SPREME] ([RAD1IDSPREME], [RAD1NAZIVSPREME]) VALUES (5, N'Visokokvalificirani')
INSERT INTO [dbo].[RAD1SPREME] ([RAD1IDSPREME], [RAD1NAZIVSPREME]) VALUES (6, N'Kvalificirani')
INSERT INTO [dbo].[RAD1SPREME] ([RAD1IDSPREME], [RAD1NAZIVSPREME]) VALUES (7, N'Priučeni-polukvalificirani')
INSERT INTO [dbo].[RAD1SPREME] ([RAD1IDSPREME], [RAD1NAZIVSPREME]) VALUES (8, N'Nekvalificirani')

-- Add 3 rows to [dbo].[RADNOVRIJEME]
INSERT INTO [dbo].[RADNOVRIJEME] ([IDRADNOVRIJEME], [NAZIVRADNOVRIJEME]) VALUES (1, N'Puno radno vrijeme')
INSERT INTO [dbo].[RADNOVRIJEME] ([IDRADNOVRIJEME], [NAZIVRADNOVRIJEME]) VALUES (2, N'Nepuno radno vrijeme')
INSERT INTO [dbo].[RADNOVRIJEME] ([IDRADNOVRIJEME], [NAZIVRADNOVRIJEME]) VALUES (3, N'Skraćeno radno vrijeme')

COMMIT TRANSACTION
GO





</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="vugericon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADkAAAA4CAYAAABHRFAgAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAScQAA
        EnEB89x6jgAAC2NJREFUaEPtmntwXFUdxxHEJ8PogP2jtWmym/c+k80mm8dukybpbvNoEjoErKXpI0Pr
        1EelSh8DtrSUSMCpooPi+OAlIuiohdEi4EhRUWsHEUdhn0la2qQv2qZpSMjm5/d37r3be3fvPjJJSv5o
        Zr6zm7v3nj2f8/2d3/mdk1x11ZWfKyNwZQSUEfA7F94IbYA+AX0IMkOd0FboIehhlUxzfuTQ2WugOyCn
        DPMEXscggg5Cp+X3/LueXHMakqEC7tzD4fYyClTlnMDv0TRAepD5cxYSMCuDDUUj4Q4nhZrtFGooTuZU
        uuv75DBeg1cPdP2cgPaXZ20N+cwUXl5CIZ+FggAM1Rexm+mAMvmco+EQtBP6YFwG4J0MGGq2UmipiYJ1
        hRSsLRCQoSUF5C/XnXeZwCW750XA1l02d/Flq4ONgGHIxmLA5UsCqIAUbhqmA5TqWYY1ziosvsAOoNGQ
        1wQYuLc4TwtZV0BBTy4F3blwM2s2QM+jDwtmDRKNfzRQnfNmyIfwREgKQDWkB78DTgjvA9VGLSSgA5XZ
        wuVAjZGCNbninkAl5nDmA7Jl1gC5YXRkR7AB7jEgu8USoAhVdDjIHVdBhvg6klDQbSR+H1rC85WTEwuR
        0ICktdRKkWYH9a2opshNVRRuKUNkFCaD/i8G+tpZg0Tjnwm4jcPBetlBdDwGKVyRJSABDicFGCcjhHCI
        56sKMtxgojBDNloEaHipjcJNpdTX7qL+W+uof2U9RVqckstS8TAJ1c8aoOziHgFYCwDhmAxZY6BgNaSG
        ZMCpQHoB6QOkz06RZSVwtkw4O/C5JTTQ5aPI8nIKuLLfAuTHZg1SnosngnU85xTH5NdqhKMCyZ/J81ED
        yZlXma8c1nCaHQ4jZMONAIxBApAh4agIYXb1lloaWLOM+lc0k99m5HC1zgooGm4PLuY5CAiGUlzj90gi
        epACCvCBikUi3EL1Fur/vI8G1rYhFJdiuTGJ63BIrK9hLzvJkABscgg3I5ifkTYXHelupT5vHQUMJRQw
        F47guZtnHNRfkfWYFKYMJEMqgBpIKbMGAMfZMrLCQ2eefITGj/QR0SSk+pmM0ljwLTrz6Pco0l5DfgwG
        JyUBCRcFYKsTkJU0cNtSCrtdgDRJoEXmqL8sq3tGQZH2j4skI0JTDs8qOMCAcZC8RIS8JXTuuV/Q5MSE
        FizJb3zfud8+jWxrFaEsnFQgl1dQ380eCpUwIIqMGKiFy75VMwKKhrKwNl5yUTjIgBDPRUUI4YBrEUKr
        gyZOn8gILv6m908O0sD6drEcCUgknAhDImQDhYgQA77DUCyDYsdTbBpH/6qnDYpGmmJhqjipA8kOHtnY
        SdGLI7qAkwjP48eO0Zv/foPeeecoTUajuvfx89wOr5UM2ddWQRGvgwImAOYyJIoM4aaVAjnl5LfmH0Ef
        b5gWKBrYpIFUANVOImQjHTUUPX82oeOnTp2knvv2krummsocDvJ43LR4sYeafF7au2c3DQ0NJTwzcfYM
        klCpWFIYMlRtliCLGJJVAFkgOwWMTvKX5jyZESRgrubQhD4FfVylXQJSQCFU4Vh8uHKGvPivQwmdfe21
        v5LTWUYul4taWlqos7OTurq6aOPGjbR582batGkTtbU208svvZjw7Nlf/0yUf328RloRqgxZDOUpoABn
        Nw1wudDGmXpxWlDcxOcxugW1AEP2E+KUrwpX3jseu/P2hE4ePvxPMptNVFVVRY2NjdTa2poAuX37dtq1
        axet6GinVw++ok2+Y+9hC2fHoMI1BlQgY24WypA2hK2L/PbcgzMHGXNSyrKcbEb/87qmg+NjYyI8S0tL
        qaamJiXk7t27qaenh1qafDQ8PKxpZ6j3LvKXLNJCxtzkuckhC0h2s8Ce3k24eH1SJwESczIOMtJejSVQ
        uwY++8wzlJeXRw7MwUwge3t7ad3atfTTH/9IAzn8pwOE9fCSiwzIKlQSEGdadhJzM6cSA2J4KhM3L+qB
        BhVIfhWQl9bLwXvuSAjVNWu6qLi4eEqQPEfXdt2mjQgUEaIqUocqh2shIsjISwonIAUSc9dkGsX916UE
        xQ3/04PkkJTmowwZKwpy6Mzj30+ArKp0TRlyw4YNtKTWrZ2X741KkGZAMVwBXhXlMmS+vJSwk6VISsi0
        zoVt6SCf1oWsyEoKef53v0qALLHbpgTJc7Kjo4PcVS4t5PiY7GTOJbh8gLJElmVIrJkiXFHu5VSR37Fo
        XzrITbqQqEOFiwlOGujcb36eANnS3EQGgyHjcF23bp1YYtqXN2vD9Wi/BFmscjAGiWsCEvMyBoksa8tP
        nWXRoCFl8tGBPPnQ3gTIb/bcR/PmzSOLxZIy8Wzbto1Wr15NXq+XfD4ffeOuHZq2Lvz5ZQmySIZUAIWT
        CiSWEgGJcOUKyFw8lEny+VtKNznxqAr1gfVtCZAD/f302QULaP78+WQymai2tlazTnZ3d9OqVasEWH19
        vYCscDrI//bbmrZOfudeVDPIrpxoeC4qcAzIMrKTakicJJgsfILwkXQhuzalm3GQvK0aP3YkAfTBB3oF
        ZFZWFhmNRgHLS0p5ebkQFwkej0dAetxuumfn3do2ohMUbkVhbsXBV1JIXivVkCjai0T1c6MuJD64FmJA
        3QwrwoYzrALJWywu97D7OPntPQmQURTgX9vyVUAuFJAFBQWogMxkt9tR6jljkJWuCvrChm4aHx/XtHH+
        D/uxRsrzUYEsxnmPDZtwRRgAvxXXUPb5rXmsCb89L4S+fjoZZE8yB9XXY5DiyAPiIw/sGKSNsfZnEkXC
        E48/So4SG+Xn56kgy8hRWkKucgf98AcPEw+I+ic6MowdCBZ3O1zk+ShD+u3SKUMKDaYL03w8PJEONMBn
        p3CUt1aXjj1yxT5yMs4NpeOjo6P0woHfU+/9PbT161uoZ+8eev65/TQyor8tG9y9BUsBDqa5ulGSDuYk
        OzstSHEiJ/1RNF1D6ADuEUJHhDDC0ODOzQRbEhydyoVTj3xLlHJ+FAACUglVc0Z/RHojk8zK26yjmYNq
        IRn02NaNFB25MBUuce8kivqhnu0SoEUCFJByhcNZNoN+PZ8WUnazDo3xsULqRjl04pyUHM2mvptqaeTv
        r2YMOnLoL9R3awOWCzzPgKhVNZCccJL35x/47JcQJ5wHM4KUQb+SFpK/NAYqhasCyaD+MhyH3N5JXPZN
        nHs3LiNFaXwgQmeffQxnqq3SczaAmAHHioNM4+I6BQx9viZjSBn0/rSgGkiAMVxMcMQhy2nABrgM563L
        cDJei/Nb/DWawUpwvw33WADGUgDVkGbck9xFPrGbPyWw+JvRwN1Q8r//a8I1GSQ671CE9cyO9yybLCte
        WWpI7DhEuJrSZtQ/TgtQFQL7dEcyYU7qQaoB+b0MqQDyqwKpuIgNsT9fFg9i6tzQOW1IfEEZdCHhizSA
        yhIyTUgOUQYskAFx7JEG0I/PPzwTkCt1M21sjYxLNglzMo2TSpiqARkyPSAPwC3TBlSFaz0aHIyNatKM
        iuzoUIuTThxkKcJVCVFVchHzj11EdZMmkx6XB/2lGQNUgc5D49KpgcZFJUQVOCWjyvOPoRTZuYiG4l1j
        QE40XNGkLtv4v7vskA3KmXFIeUm5Do0fT4RkQMU1GaoErywGs8lwFgaEGEg997DrzzA8188KmM6SwmXf
        LpRep6WFX+2gyr14QHZQDcnzjuFs2Zw8dujOe21WvfeyAKq/BJ36JLQasC+gshmTYNFxJTT1XOQlgks2
        a/a7mHdP4XkvdLUcJfrLlATac9kBddxl4AZoG6B/AocP+EuzX5G0iLUf17+Lz78I8X9QJqR9XLsBiv8v
        yvdx7UsfOOBMdgBAX1atiwG8r5nJ9udEW+ww9Dp0L0+HOdGpK524MgKXdwT+D2gvaK7y5FwRAAAAAElF
        TkSuQmCC
</value>
  </data>
  <data name="IncorrectDatabaseFormatException" xml:space="preserve">
    <value>Pogrešni format baze</value>
  </data>s
  <data name="SystemName" xml:space="preserve">
    <value>MIPSED.7 - Računovodstvo proračuna</value>
  </data>
  <data name="novizakon" xml:space="preserve">
    <value>UPDATE POREZ SET STOPAPOREZa = 12,NAZIVPOREZ = 'Porez 12 %',porezmjesecno = 3600 WHERE IDPOREZ = 1
GO
UPDATE POREZ SET STOPAPOREZa = 25,NAZIVPOREZ = 'Porez 25 %',porezmjesecno = 7200 WHERE IDPOREZ = 2
GO
UPDATE POREZ SET STOPAPOREZa = 40,NAZIVPOREZ = 'Porez 40 %',porezmjesecno = 99999 WHERE IDPOREZ = 3
GO
update grupeolaksica set maximalniiznosgrupe = 0 where maximalniiznosgrupe  &gt; 500
go
delete from skupporezaidoprinosa1 where idporez = 4
go

if not exists (select  top 1 idporez from porez where idporez = 999)
BEGIN
INSERT INTO [dbo].[POREZ] ([IDPOREZ], [NAZIVPOREZ], [POREZMJESECNO], [STOPAPOREZA], [MOPOREZ], [POPOREZ], [MZPOREZ], [PZPOREZ], [PRIMATELJPOREZ1], [PRIMATELJPOREZ2], [SIFRAOPISAPLACANJAPOREZ], [OPISPLACANJAPOREZ])
	SELECT TOP 1 999
      ,'Korekcija poreza po godišnjem obračunu'
      ,0
      ,0
      ,[MOPOREZ]
      ,[POPOREZ]
      ,[MZPOREZ]
      ,[PZPOREZ]
      ,[PRIMATELJPOREZ1]
      ,[PRIMATELJPOREZ2]
      ,[SIFRAOPISAPLACANJAPOREZ]
      ,[OPISPLACANJAPOREZ]
  FROM [dbo].[POREZ] 
END
go

</value>
  </data>
  <data name="WrongUserPassword" xml:space="preserve">
    <value>Pogrešan unos korisničkog imena ili zaporke.</value>
  </data>
  <data name="verzija1" xml:space="preserve">
    <value>SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[verzija]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table [dbo].[verzija]
GO
CREATE TABLE [dbo].[VERZIJA](
	[IDVERZIJA] [int] NOT NULL,
	[VERZIJA] [nvarchar](20) NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[IDVERZIJA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
go
INSERT INTO verzija (idverzija, verzija) VALUES (1, '7.0.0.0')
GO</value>
  </data>
  <data name="ErrorText" xml:space="preserve">
    <value />
  </data>
  <data name="SubmenuPicture" xml:space="preserve">
    <value>11</value>
  </data>
  <data name="RegParamTopMargin" xml:space="preserve">
    <value>TopMargin</value>
  </data>
  <data name="invalidUserPassword" xml:space="preserve">
    <value />
  </data>
  <data name="RegParamLeftMargin" xml:space="preserve">
    <value>LeftMargin</value>
  </data>
  <data name="update" xml:space="preserve">
    <value>CREATE TABLE [dbo].[POSTANSKIBROJEVI](
	[POSTANSKIBROJ] [nvarchar](5) COLLATE Croatian_CI_AS NOT NULL,
	[NAZIVPOSTE] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
GO

if not exists (select  top 1 POSTANSKIBROJ from POSTANSKIBROJEVI where POSTANSKIBROJ = 0)
begin
INSERT INTO [dbo].[POSTANSKIBROJEVI] ([POSTANSKIBROJ], [NAZIVPOSTE]) VALUES (0, N'NEPOZNATA POŠTA')
end
GO

if exists ( select * from INFORMATION_SCHEMA.COLUMNS
where TABLE_NAME='UCENIK' 
and COLUMN_NAME='AKTIVANZARSM')
ALTER TABLE [dbo].[UCENIK] 
DROP COLUMN  AKTIVANZARSM
GO

if exists ( select * from INFORMATION_SCHEMA.COLUMNS
where TABLE_NAME='UCENIK' 
and COLUMN_NAME='OSNOVICADOPRINOSI')
ALTER TABLE [dbo].[UCENIK] 
DROP COLUMN  OSNOVICADOPRINOSI
GO


if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS
where TABLE_NAME='OBRACUNRADNICI' 
and COLUMN_NAME='OBRACUNAVAJOBUSTAVE')
ALTER TABLE [dbo].[OBRACUNRADNICI] ADD
[OBRACUNAVAJOBUSTAVE]  BIT NOT NULL DEFAULT ((1)) 
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS
where TABLE_NAME='KORISNIK'
and COLUMN_NAME='BROJCANAOZNAKAPU')
ALTER TABLE [dbo].[KORISNIK] ADD
[BROJCANAOZNAKAPU]  [int] NOT NULL DEFAULT 9999
GO


if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS
where TABLE_NAME='URA' 
and COLUMN_NAME='R2')
ALTER TABLE [dbo].[URA] ADD
[R2]  BIT NOT NULL DEFAULT ((0)) 
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS
where TABLE_NAME='korisnik' 
and COLUMN_NAME='EMAILPOSILJAOCA')
ALTER TABLE [dbo].[korisnik] ADD
[EMAILPOSILJAOCA] [nvarchar](150) COLLATE Croatian_CI_AS NOT NULL DEFAULT 'test@test.com'
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='korisnik' 
and COLUMN_NAME='NAZIVPOSILJAOCA')
ALTER TABLE [dbo].korisnik ADD
[NAZIVPOSILJAOCA] [nvarchar](150) COLLATE Croatian_CI_AS NOT NULL DEFAULT 'Posiljaoc'
GO


if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='korisnik' 
and COLUMN_NAME='SMTPSERVER')
ALTER TABLE [dbo].[korisnik] ADD
[SMTPSERVER] [nvarchar](150) COLLATE Croatian_CI_AS NOT NULL DEFAULT 'mail.t-com.hr'
GO


if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='racun' 
and COLUMN_NAME='ZAPREDUJAM')
ALTER TABLE [dbo].[RACUN] ADD
[ZAPREDUJAM] BIT NOT NULL DEFAULT 0
GO


---- DODATAK ZA OBRACUN POSTOTNIH OBUSTAVA NA BRUTO ILI NETO IZNOS

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='RADNIKObustava' 
and COLUMN_NAME='ZADPOSTOTNAODBRUTA')
ALTER TABLE [dbo].[RADNIKObustava] ADD
[ZADPOSTOTNAODBRUTA] BIT DEFAULT 0 NOT null
GO




if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS
where TABLE_NAME='UCENIK' 
and COLUMN_NAME='SPOLUCENIKA')
ALTER TABLE [dbo].[UCENIK] ADD
[SPOLUCENIKA] [nvarchar](1) COLLATE Croatian_CI_AS DEFAULT 'M' NOT NULL
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS
where TABLE_NAME='UCENIK' 
and COLUMN_NAME='ULICAIBROJ')
ALTER TABLE [dbo].[UCENIK] ADD
[ULICAIBROJ] [nvarchar](50) COLLATE Croatian_CI_AS DEFAULT ' ' NOT NULL
GO


if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS
where TABLE_NAME='UCENIK' 
and COLUMN_NAME='NASELJE')
ALTER TABLE [dbo].[UCENIK] ADD
[NASELJE] [nvarchar](50) COLLATE Croatian_CI_AS DEFAULT 'NASELJE' NOT NULL
GO


if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS
where TABLE_NAME='UCENIK' 
and COLUMN_NAME='JMBGUCENIKA')
ALTER TABLE [dbo].[UCENIK] ADD
[JMBGUCENIKA] [nvarchar](13) COLLATE Croatian_CI_AS DEFAULT '0000000000000' NOT NULL
GO


if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS
where TABLE_NAME='UCENIK' 
and COLUMN_NAME='DATUMRODJENJAUCENIKA')
ALTER TABLE [dbo].[UCENIK] ADD
[DATUMRODJENJAUCENIKA] [datetime] DEFAULT '2011-01-01' NOT NULL
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS
where TABLE_NAME='UCENIK' 
and COLUMN_NAME='ULICAIBROJ')
ALTER TABLE [dbo].[UCENIK] ADD
[ULICAIBROJ] [nvarchar](50) COLLATE Croatian_CI_AS DEFAULT ' ' NOT NULL
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS
where TABLE_NAME='UCENIK' 
and COLUMN_NAME='POSTANSKIBROJ')
ALTER TABLE [dbo].[UCENIK] ADD
[POSTANSKIBROJ] [nvarchar](5) COLLATE Croatian_CI_AS DEFAULT '0' NOT NULL
GO


if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS
where TABLE_NAME='UCENIK' 
and COLUMN_NAME='IMERODITELJA')
ALTER TABLE [dbo].[UCENIK] ADD
[IMERODITELJA] [nvarchar](50) COLLATE Croatian_CI_AS DEFAULT ' ' NOT NULL
GO



---- tablice za radnike koji su otisli ili dosli u ustanovu
CREATE TABLE [dbo].[OTISLI](
	[IDRADNIK] [int] NOT NULL,
	[DATUMODLASKA] [datetime] NOT NULL
) ON [PRIMARY]
GO


CREATE TABLE [dbo].[ZAPOSLENI](
	[IDRADNIK] [int] NOT NULL,
	[DATUMZAPOSLENJA] [datetime] NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[UCENIK](
	[IDUCENIK] [int] NOT NULL,
	[PREZIMEUCENIK] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[IMEUCENIK] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[OIBUCENIK] [nvarchar](11) COLLATE Croatian_CI_AS NOT NULL,
	[RAZRED] [int] NOT NULL,
	[ODJELJENJE] [nvarchar](5) COLLATE Croatian_CI_AS NOT NULL,
	[SPOLUCENIKA] [nvarchar](1) COLLATE Croatian_CI_AS NOT NULL,
	[ULICAIBROJ] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[NASELJE] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[JMBGUCENIKA] [nvarchar](13) COLLATE Croatian_CI_AS NOT NULL,
	[DATUMRODJENJAUCENIKA] [datetime] NOT NULL,
	[IMERODITELJA] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[POSTANSKIBROJ] [nvarchar](4) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[UCENIKOBRACUN](
	[UCOBRMJESEC] [int] NOT NULL,
	[UCOBRGODINA] [int] NOT NULL,
	[UCOBROPIS] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[OSNOVICAPODANU] [money] NOT NULL,
	[AKTIVANZARSM] [bit] NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[UCENIKOBRACUNUCENIKOBRACUNDETAIL](
	[UCOBRMJESEC] [int] NOT NULL,
	[UCOBRGODINA] [int] NOT NULL,
	[IDUCENIK] [int] NOT NULL,
	[BROJDANAPRAKSE] [int] NOT NULL,
	[OBRACUNOSNOVICEPRAKSA] [money] NOT NULL
) ON [PRIMARY]
GO



CREATE TABLE [dbo].[UCENIKRSMIDENT](
	[UCENIKRSMIDENT] [nvarchar](4) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
GO


---- tablice za izuzeca od ovrhe

CREATE TABLE [dbo].[OBRACUNOBRACUNLevel1ObracunIzuzece](
	[IDOBRACUN] [nvarchar](11) COLLATE Croatian_CI_AS NOT NULL,
	[IDRADNIK] [int] NOT NULL,
	[IDOBRACUNIZUZECE] [uniqueidentifier] NOT NULL,
	[PRIMATELJIZUZECE1] [nvarchar](20) COLLATE Croatian_CI_AS NOT NULL,
	[PRIMATELJIZUZECE2] [nvarchar](20) COLLATE Croatian_CI_AS NOT NULL,
	[PRIMATELJIZUZECE3] [nvarchar](20) COLLATE Croatian_CI_AS NULL,
	[SIFRAOPISAPLACANJAIZUZECE] [nvarchar](2) COLLATE Croatian_CI_AS NOT NULL,
	[OPISPLACANJAIZUZECE] [nvarchar](36) COLLATE Croatian_CI_AS NOT NULL,
	[TEKUCIIZUZECE] [nvarchar](10) COLLATE Croatian_CI_AS NOT NULL,
	[MOIZUZECE] [nvarchar](2) COLLATE Croatian_CI_AS NOT NULL,
	[POIZUZECE] [nvarchar](22) COLLATE Croatian_CI_AS NULL,
	[MZIZUZECE] [nvarchar](2) COLLATE Croatian_CI_AS NULL,
	[PZIZUZECE] [nvarchar](22) COLLATE Croatian_CI_AS NULL,
	[IZNOSIZUZECA] [money] NOT NULL,
	[VBDIIZUZECE] [nvarchar](7) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
GO


CREATE TABLE [dbo].[RADNIKIzuzeceOdOvrhe](
	[IDRADNIK] [int] NOT NULL,
	[BANKAZASTICENOIDBANKE] [int] NOT NULL,
	[ZADSIFRAOPISAPLACANJAIZUZECE] [nvarchar](2) COLLATE Croatian_CI_AS NOT NULL,
	[ZADOPISPLACANJAIZUZECE] [nvarchar](36) COLLATE Croatian_CI_AS NOT NULL,
	[ZADTEKUCIIZUZECE] [nvarchar](10) COLLATE Croatian_CI_AS NOT NULL,
	[ZADMOIZUZECE] [nvarchar](2) COLLATE Croatian_CI_AS NOT NULL,
	[ZADPOIZUZECE] [nvarchar](22) COLLATE Croatian_CI_AS NULL,
	[ZADMZIZUZECE] [nvarchar](2) COLLATE Croatian_CI_AS NULL,
	[ZADPZIZUZECE] [nvarchar](22) COLLATE Croatian_CI_AS NULL,
	[ZADIZNOSIZUZECA] [money] NOT NULL
) ON [PRIMARY]
GO


----- tablice za rad1 obrazac

CREATE TABLE [dbo].[RADNOVRIJEME](
	[IDRADNOVRIJEME] [int] NOT NULL,
	[NAZIVRADNOVRIJEME] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
GO



CREATE TABLE [dbo].[RAD1GELEMENTI](
	[RAD1GELEMENTIID] [int] NOT NULL,
	[RAD1GELEMENTINAZIV] [nvarchar](30) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]

GO

CREATE TABLE [dbo].[RAD1MELEMENTI](
	[RAD1ELEMENTIID] [int] NOT NULL,
	[RAD1ELEMENTINAZIV] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]

GO


CREATE TABLE [dbo].[RAD1SPOL](
	[RAD1SPOLID] [int] NOT NULL,
	[RAD1SPOLNAZIV] [nvarchar](20) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]

GO

CREATE TABLE [dbo].[RAD1SPREME](
	[RAD1IDSPREME] [int] NOT NULL,
	[RAD1NAZIVSPREME] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]

GO


CREATE TABLE [dbo].[RAD1VEZASPOL](
	[RAD1SPOLID] [int] NOT NULL,
	[IDSPOL] [int] NOT NULL
) ON [PRIMARY]

GO

CREATE TABLE [dbo].[RAD1SPREMEVEZA](
	[RAD1IDSPREME] [int] NOT NULL,
	[IDSTRUCNASPREMA] [int] NOT NULL
) ON [PRIMARY]

GO

CREATE TABLE [dbo].[RAD1MELEMENTIVEZA](
	[RAD1ELEMENTIID] [int] NOT NULL,
	[IDELEMENT] [int] NOT NULL
) ON [PRIMARY]

GO

CREATE TABLE [dbo].[RAD1GELEMENTIVEZA](
	[RAD1GELEMENTIID] [int] NOT NULL,
	[IDELEMENT] [int] NOT NULL
) ON [PRIMARY]

GO






if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='KORISNIK' 
and COLUMN_NAME='KORISNIK1HZZO' )
ALTER TABLE [dbo].[KORISNIK] ADD
[KORISNIK1HZZO] [nvarchar](11)  COLLATE Croatian_CI_AS NOT NULL DEFAULT '99999999999'
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='KORISNIK' 
and COLUMN_NAME='KORISNIK1NAZIVZANALJEPNICE' )
ALTER TABLE [dbo].[KORISNIK] ADD
[KORISNIK1NAZIVZANALJEPNICE] [nvarchar](26)  COLLATE Croatian_CI_AS NOT NULL DEFAULT 'Naziv ustanove za BARCODE'
GO







if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='RADNIKKrediti' 
and COLUMN_NAME='PARTIJAKREDITASPECIFIKACIJA' )
ALTER TABLE [dbo].[RADNIKKrediti] ADD
[PARTIJAKREDITASPECIFIKACIJA] [nvarchar](22) COLLATE Croatian_CI_AS NULL
GO



CREATE TABLE [dbo].[OSDOKUMENT](
	[IDOSDOKUMENT] [int] NOT NULL,
	[NAZIVOSDOKUMENT] [nvarchar](30) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
GO



if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='AMSKUPINE' 
and COLUMN_NAME='KTOIZVORAIDKONTO' )
BEGIN
DROP TABLE AMSKUPINE
CREATE TABLE [dbo].[AMSKUPINE](
	[IDAMSKUPINE] [int] NOT NULL,
	[KRATKASIFRA] [nvarchar](15) COLLATE Croatian_CI_AS NULL,
	[OPISAMSKUPINE] [nvarchar](100) COLLATE Croatian_CI_AS NOT NULL,
	[AMSKUPINASTOPA] [smallmoney] NOT NULL,
	[KTONABAVKEIDKONTO] [nvarchar](14) COLLATE Croatian_CI_AS NOT NULL,
	[KTOISPRAVKAIDKONTO] [nvarchar](14) COLLATE Croatian_CI_AS NOT NULL,
	[KTOIZVORAIDKONTO] [nvarchar](14) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
END
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='OS' 
and COLUMN_NAME='IDOSVRSTA' )
BEGIN
DROP TABLE OS
CREATE TABLE [dbo].[OS](
	[INVBROJ] [bigint] NOT NULL,
	[NAZIVOS] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[DATUMNABAVKE] [datetime] NOT NULL,
	[DATUMUPORABE] [datetime] NOT NULL,
	[NAPOMENAOS] [nvarchar](50) COLLATE Croatian_CI_AS NULL,
	[IDAMSKUPINE] [int] NOT NULL,
	[IDOSVRSTA] [int] NOT NULL DEFAULT ((0))
) ON [PRIMARY]
END
GO

CREATE TABLE [dbo].[OS](
	[INVBROJ] [bigint] NOT NULL,
	[NAZIVOS] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[DATUMNABAVKE] [datetime] NOT NULL,
	[DATUMUPORABE] [datetime] NOT NULL,
	[NAPOMENAOS] [nvarchar](50) COLLATE Croatian_CI_AS NULL,
	[IDAMSKUPINE] [int] NOT NULL,
	[IDOSVRSTA] [int] NOT NULL DEFAULT ((0))
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[AMSKUPINE](
	[IDAMSKUPINE] [int] NOT NULL,
	[KRATKASIFRA] [nvarchar](15) COLLATE Croatian_CI_AS NULL,
	[OPISAMSKUPINE] [nvarchar](100) COLLATE Croatian_CI_AS NOT NULL,
	[AMSKUPINASTOPA] [smallmoney] NOT NULL,
	[KTONABAVKEIDKONTO] [nvarchar](14) COLLATE Croatian_CI_AS NOT NULL,
	[KTOISPRAVKAIDKONTO] [nvarchar](14) COLLATE Croatian_CI_AS NOT NULL,
	[KTOIZVORAIDKONTO] [nvarchar](14) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[OSVRSTA](
	[IDOSVRSTA] [int] NOT NULL,
	[OPISOSVRSTA] [nvarchar](30) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
GO
CREATE TABLE [dbo].[LOKACIJE](
	[IDLOKACIJE] [int] NOT NULL,
	[OPISLOKACIJE] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[OSTEMELJNICA](
	[INVBROJ] [bigint] NOT NULL,
	[IDOSDOKUMENT] [int] NOT NULL,
	[OSBROJDOKUMENTA] [int] NOT NULL,
	[OSDATUMDOK] [datetime] NOT NULL,
	[OSKOLICINA] [money] NOT NULL,
	[OSSTOPA] [smallmoney] NOT NULL,
	[OSOSNOVICA] [money] NOT NULL,
	[OSDUGUJE] [money] NOT NULL,
	[OSPOTRAZUJE] [money] NOT NULL,
	[RASHODLOKACIJEIDLOKACIJE] [int] NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[OSRAZMJESTAJ](
	[IDOSRAZMJESTAJ] [uniqueidentifier] ROWGUIDCOL  NOT NULL DEFAULT (newid()),
	[IDLOKACIJE] [int] NOT NULL,
	[INVBROJ] [bigint] NOT NULL,
	[KOLICINAULAZA] [money] NOT NULL,
	[KOLICINARASHODA] [money] NOT NULL
) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID(N'[dbo].[OS_KNJIZI_RASHOD]'))
DROP TRIGGER [dbo].[OS_KNJIZI_RASHOD]
go

CREATE TRIGGER [dbo].[OS_KNJIZI_RASHOD]
ON [dbo].[OSTEMELJNICA]
FOR INSERT /* INSERT, UPDATE, DELETE */
AS
	DECLARE @INVBROJ BIGINT
	DECLARE @IDOSDOKUMENT BIGINT
	DECLARE @OSKOLICINA MONEY
	DECLARE @RASHODLOKACIJEIDLOKACIJE INT
	
	
	
	/* IF UPDATE (column_name) ...*/
	SELECT @INVBROJ = INVBROJ FROM INSERTED
	SELECT @IDOSDOKUMENT = IDOSDOKUMENT FROM INSERTED
	SELECT @OSKOLICINA = OSKOLICINA FROM INSERTED
	SELECT @RASHODLOKACIJEIDLOKACIJE = RASHODLOKACIJEIDLOKACIJE FROM INSERTED
	
IF @IDOSDOKUMENT = 3 OR @IDOSDOKUMENT = 7 
BEGIN
INSERT INTO [dbo].[OSRAZMJESTAJ]
           ([IDLOKACIJE]
           ,[INVBROJ]
           ,[KOLICINAULAZA]
           ,[KOLICINARASHODA])
     VALUES
           (@RASHODLOKACIJEIDLOKACIJE
           ,@INVBROJ
           ,0
           ,@OSKOLICINA)
END

IF @IDOSDOKUMENT = 1  OR @IDOSDOKUMENT = 6 
BEGIN
INSERT INTO [dbo].[OSRAZMJESTAJ]
           ([IDLOKACIJE]
           ,[INVBROJ]
           ,[KOLICINAULAZA]
           ,[KOLICINARASHODA])
     VALUES
           (9999
           ,@INVBROJ
           ,@OSKOLICINA
           ,0)
END	
go

IF  EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID(N'[dbo].[OS_BRISI_RASHOD_NABAVA]'))
DROP TRIGGER [dbo].[OS_BRISI_RASHOD_NABAVA]
go
CREATE TRIGGER [dbo].[OS_BRISI_RASHOD_NABAVA]
ON [dbo].[OSTEMELJNICA]
FOR DELETE /* INSERT, UPDATE, DELETE */
AS
	DECLARE @INVBROJ BIGINT
	DECLARE @IDOSDOKUMENT BIGINT
	DECLARE @OSKOLICINA MONEY
	DECLARE @RASHODLOKACIJEIDLOKACIJE INT
	
	
	
	/* IF UPDATE (column_name) ...*/
	SELECT @INVBROJ = INVBROJ FROM DELETED
	SELECT @IDOSDOKUMENT = IDOSDOKUMENT FROM DELETED
	SELECT @OSKOLICINA = OSKOLICINA FROM DELETED
	SELECT @RASHODLOKACIJEIDLOKACIJE = RASHODLOKACIJEIDLOKACIJE FROM DELETED
	
	
IF @IDOSDOKUMENT = 3 OR @IDOSDOKUMENT = 7 
BEGIN
DELETE FROM [OSRAZMJESTAJ] WHERE IDLOKACIJE = @RASHODLOKACIJEIDLOKACIJE AND INVBROJ = @INVBROJ AND KOLICINARASHODA = @OSKOLICINA
END

IF @IDOSDOKUMENT = 1  OR @IDOSDOKUMENT = 6 
BEGIN
DELETE FROM [OSRAZMJESTAJ] WHERE INVBROJ = @INVBROJ 
END	
go


if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='OSTEMELJNICA' 
and COLUMN_NAME='OSOPIS' )
ALTER TABLE [dbo].[OSTEMELJNICA] ADD
[OSOPIS] [nvarchar](40) COLLATE Croatian_CI_AS NOT NULL DEFAULT ' '
GO





if exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='KONACNIPOMOCNA' 
and COLUMN_NAME='GODINA' )
BEGIN
DROP TABLE KONACNIPOMOCNA
CREATE TABLE [dbo].[KONACNIPOMOCNA](
	[IDRADNIK] [int] NOT NULL,
	[PRI] [money] NOT NULL,
	[POR] [money] NOT NULL,
	[SIFRAOBRACUNA] [nvarchar](11) COLLATE Croatian_CI_AS NOT NULL,
 CONSTRAINT [PK_KONACNIPOMOCNA] PRIMARY KEY CLUSTERED 
(
	[IDRADNIK] ASC,
	[SIFRAOBRACUNA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='KONACNIPOMOCNA' 
and COLUMN_NAME='GODINA' )
BEGIN
CREATE TABLE [dbo].[KONACNIPOMOCNA](
	[IDRADNIK] [int] NOT NULL,
	[PRI] [money] NOT NULL,
	[POR] [money] NOT NULL,
	[SIFRAOBRACUNA] [nvarchar](11) COLLATE Croatian_CI_AS NOT NULL,
 CONSTRAINT [PK_KONACNIPOMOCNA] PRIMARY KEY CLUSTERED 
(
	[IDRADNIK] ASC,
	[SIFRAOBRACUNA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO


CREATE TABLE [dbo].[GOOBRACUN](
	[IDGOOBRACUN] [int] IDENTITY(1,1) NOT NULL,
	[IDRADNIK] [int] NOT NULL,
	[OLAKSICEISKORISTIVO] [money] NOT NULL,
	[ODBICIISKORISTIVO] [money] NOT NULL
) ON [PRIMARY]
GO

-- korekcije potrebne za evidenciju radnika

CREATE TABLE [dbo].[DRZAVLJANSTVO]
(
[IDDRZAVLJANSTVO] [int] NOT NULL,
[NAZIVDRZAVLJANSTVO] [nvarchar] (50) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
GO


CREATE TABLE [dbo].[UGOVORORADU]
(
[IDUGOVORORADU] [int] NOT NULL,
[NAZIVUGOVORORADU] [nvarchar] (20) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
GO


if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='RADNIK' 
and COLUMN_NAME='IDDRZAVLJANSTVO' )
ALTER TABLE [dbo].[RADNIK] ADD
[IDDRZAVLJANSTVO] [int] NULL,
[RADNADOZVOLA] [nvarchar] (50) COLLATE Croatian_CI_AS NULL,
[ZAVRSENASKOLA] [nvarchar] (50) COLLATE Croatian_CI_AS NULL,
[UGOVOROD] [datetime] NULL,
[POCETAKRADA] [datetime] NULL,
[NAZIVPOSLA] [nvarchar] (50) COLLATE Croatian_CI_AS NULL,
[IDUGOVORORADU] [int] NULL,
[VRIJEMEPROBNOGRADA] [nvarchar] (30) COLLATE Croatian_CI_AS NULL,
[VRIJEMEPRIPRAVNICKOG] [nvarchar] (30) COLLATE Croatian_CI_AS NULL,
[VRIJEMESTRUCNI] [nvarchar] (50) COLLATE Croatian_CI_AS NULL,
[RADUINOZEMSTVU] [nvarchar] (50) COLLATE Croatian_CI_AS NULL,
[RADNASPOSOBNOST] [nvarchar] (30) COLLATE Croatian_CI_AS NULL,
[VRIJEMEMIROVANJARADNOGODNOSA] [nvarchar] (30) COLLATE Croatian_CI_AS NULL,
[RAZLOGPRESTANKA] [nvarchar] (30) COLLATE Croatian_CI_AS NULL,
[ZABRANANATJECANJA] [nvarchar] (50) COLLATE Croatian_CI_AS NULL,
[PRODUZENOMIROVINSKO] [nvarchar] (50) COLLATE Croatian_CI_AS NULL,
[RADNIKNAPOMENA] [nvarchar] (max) COLLATE Croatian_CI_AS NULL
GO



if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='RADNIK' 
and COLUMN_NAME='IDRADNOVRIJEME' )
ALTER TABLE [dbo].[RADNIK] ADD
[IDRADNOVRIJEME] [int] NULL
GO


----- Potrebno za poziv na broj za disketu HZZO zbog olaksica
if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='RADNIKOLAKSICA' 
and COLUMN_NAME='ZADPOJEDINACNIPOZIV' )
ALTER TABLE [dbo].[RADNIKOLAKSICA] ADD
[ZADPOJEDINACNIPOZIV] [nvarchar](11) COLLATE Croatian_CI_AS NULL
GO



---- korekcije tablica za evidenciju - omogucava se vise evidencija u mjesecu

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='EVIDENCIJA' 
and COLUMN_NAME='BROJEVIDENCIJE' )
ALTER TABLE [dbo].[EVIDENCIJA] ADD
[BROJEVIDENCIJE] [INT] NOT NULL DEFAULT 1
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='EVIDENCIJARADNICI' 
and COLUMN_NAME='BROJEVIDENCIJE' )
ALTER TABLE [dbo].[EVIDENCIJARADNICI] ADD
[BROJEVIDENCIJE] [INT] NOT NULL DEFAULT 1
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='EVIDENCIJARADNICISATI' 
and COLUMN_NAME='BROJEVIDENCIJE' )
ALTER TABLE [dbo].[EVIDENCIJARADNICISATI] ADD
[BROJEVIDENCIJE] [INT] NOT NULL DEFAULT 1,
[IZNADNORME] [smallmoney] NOT NULL default 0,
[NENNEODOBRENA] [smallmoney] NOT NULL default 0
GO




if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='OBRACUNRADNICI' 
and COLUMN_NAME='KOREKCIJAPRIREZA' )
ALTER TABLE [dbo].[OBRACUNRADNICI] ADD
[KOREKCIJAPRIREZA] [money] NOT NULL DEFAULT 0
GO
if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='OBRACUNRADNICI' 
and COLUMN_NAME='ODBITAKPRIJEKOREKCIJE' )
ALTER TABLE [dbo].[OBRACUNRADNICI] ADD
ODBITAKPRIJEKOREKCIJE [money] NOT NULL DEFAULT 0
GO


---- PROMJENE POTRTEBNE ZA PRIMJENU PDV-A
if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='URA' 
and COLUMN_NAME='OSNOVICA10NE' )
ALTER TABLE [dbo].[URA] ADD
[OSNOVICA10NE] [money] NOT NULL DEFAULT 0
GO
if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='URA' 
and COLUMN_NAME='OSNOVICA22NE' )
ALTER TABLE [dbo].[URA] ADD
[OSNOVICA22NE] [money] NOT NULL DEFAULT 0
GO
if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='URA' 
and COLUMN_NAME='OSNOVICA23NE' )
ALTER TABLE [dbo].[URA] ADD
[OSNOVICA23NE] [money] NOT NULL DEFAULT 0
GO
if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='KORISNIK' 
and COLUMN_NAME='ANALITIKA' )
ALTER TABLE [dbo].[KORISNIK] ADD
[ANALITIKA] [INT] NOT NULL DEFAULT 5
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='URA' 
and COLUMN_NAME='OSNOVICA0' )
ALTER TABLE [dbo].[URA] ADD
[OSNOVICA0] [money] NOT NULL DEFAULT 0
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='URA' 
and COLUMN_NAME='OSNOVICA10' )
ALTER TABLE [dbo].[URA] ADD
[OSNOVICA10] [money] NOT NULL DEFAULT 0
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='URA' 
and COLUMN_NAME='OSNOVICA22' )
ALTER TABLE [dbo].[URA] ADD
[OSNOVICA22] [money] NOT NULL DEFAULT 0
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='URA' 
and COLUMN_NAME='OSNOVICA23' )
ALTER TABLE [dbo].[URA] ADD
[OSNOVICA23] [money] NOT NULL DEFAULT 0
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='URA' 
and COLUMN_NAME='PDV10DA' )
ALTER TABLE [dbo].[URA] ADD
[PDV10DA] [money] NOT NULL DEFAULT 0
GO
if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='URA' 
and COLUMN_NAME='PDV10NE' )
ALTER TABLE [dbo].[URA] ADD
[PDV10NE] [money] NOT NULL DEFAULT 0
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='URA' 
and COLUMN_NAME='PDV22DA' )
ALTER TABLE [dbo].[URA] ADD
[PDV22DA] [money] NOT NULL DEFAULT 0
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='URA' 
and COLUMN_NAME='PDV22NE' )
ALTER TABLE [dbo].[URA] ADD
[PDV22NE] [money] NOT NULL DEFAULT 0
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='URA' 
and COLUMN_NAME='PDV23DA' )
ALTER TABLE [dbo].[URA] ADD
[PDV23DA] [money] NOT NULL DEFAULT 0
GO
if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='URA' 
and COLUMN_NAME='PDV23NE' )
ALTER TABLE [dbo].[URA] ADD
[PDV23NE] [money] NOT NULL DEFAULT 0
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='IRA' 
and COLUMN_NAME='NEPODLEZE' )
ALTER TABLE [dbo].[IRA] ADD
[NEPODLEZE] [money] NOT NULL DEFAULT 0
GO
if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='IRA' 
and COLUMN_NAME='IZVOZ' )
ALTER TABLE [dbo].[IRA] ADD
[IZVOZ] [money] NOT NULL DEFAULT 0
GO
if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='IRA' 
and COLUMN_NAME='MEDJTRANS' )
ALTER TABLE [dbo].[IRA] ADD
[MEDJTRANS] [money] NOT NULL DEFAULT 0
GO
if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='IRA' 
and COLUMN_NAME='TUZEMSTVO' )
ALTER TABLE [dbo].[IRA] ADD
[TUZEMSTVO] [money] NOT NULL DEFAULT 0
GO
if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='IRA' 
and COLUMN_NAME='NULA' )
ALTER TABLE [dbo].[IRA] ADD
[NULA] [money] NOT NULL DEFAULT 0
GO
if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='IRA' 
and COLUMN_NAME='OSTALO' )
ALTER TABLE [dbo].[IRA] ADD
[OSTALO] [money] NOT NULL DEFAULT 0
GO
if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='IRA' 
and COLUMN_NAME='OSN10' )
ALTER TABLE [dbo].[IRA] ADD
[OSN10] [money] NOT NULL DEFAULT 0
GO
if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='IRA' 
and COLUMN_NAME='OSN22' )
ALTER TABLE [dbo].[IRA] ADD
[OSN22] [money] NOT NULL DEFAULT 0
GO
if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='IRA' 
and COLUMN_NAME='OSN23' )
ALTER TABLE [dbo].[IRA] ADD
[OSN23] [money] NOT NULL DEFAULT 0
GO
if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='IRA' 
and COLUMN_NAME='PDV10' )
ALTER TABLE [dbo].[IRA] ADD
[PDV10] [money] NOT NULL DEFAULT 0
GO
if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='IRA' 
and COLUMN_NAME='PDV22' )
ALTER TABLE [dbo].[IRA] ADD
[PDV22] [money] NOT NULL DEFAULT 0
GO
if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='IRA' 
and COLUMN_NAME='PDV23' )
ALTER TABLE [dbo].[IRA] ADD
[PDV23] [money] NOT NULL DEFAULT 0
GO


--- PROMJENE POTREBNE ZA PRIMJENU OBRACUNA JUBILARNIH NAGRADA


if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='RADNIK' 
and COLUMN_NAME='GODINESTAZAPRO' )
ALTER TABLE [dbo].[RADNIK] ADD
[GODINESTAZAPRO] [smallint] NOT NULL DEFAULT 0
GO
if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='RADNIK' 
and COLUMN_NAME='MJESECISTAZAPRO' )
ALTER TABLE [dbo].[RADNIK] ADD
[MJESECISTAZAPRO] [smallint] NOT NULL DEFAULT 0
GO
if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='RADNIK' 
and COLUMN_NAME='DANISTAZAPRO' )
ALTER TABLE [dbo].[RADNIK] ADD
[DANISTAZAPRO] [smallint] NOT NULL DEFAULT 0
GO
if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='FINPOREZ' 
and COLUMN_NAME='OSNOVICAUKNIZIIRA' )
ALTER TABLE [dbo].[FINPOREZ] ADD
[OSNOVICAUKNIZIIRA] [int] NOT NULL default 7
GO

--- Izrada tablica evidencija
CREATE TABLE [dbo].[SMJENE](
	[IDSMJENE] [int] NOT NULL,
	[OPISSMJENE] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[POCETAK] [nvarchar](max) COLLATE Croatian_CI_AS NOT NULL,
	[ZAVRSETAK] [nvarchar](max) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
GO	

CREATE TABLE [dbo].[EVIDENCIJA](
	[MJESEC] [int] NOT NULL,
	[IDGODINE] [smallint] NOT NULL,
	[BROJEVIDENCIJE] [int] NOT NULL,
	[OPISEVIDENCIJE] [nvarchar](40) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]

GO

CREATE TABLE [dbo].[EVIDENCIJARADNICI](
	[MJESEC] [int] NOT NULL,
	[IDGODINE] [smallint] NOT NULL,
	[BROJEVIDENCIJE] [int] NOT NULL,
	[IDRADNIK] [int] NOT NULL
) ON [PRIMARY]

GO


CREATE TABLE [dbo].[EVIDENCIJARADNICISATI](
	[MJESEC] [int] NOT NULL,
	[IDGODINE] [smallint] NOT NULL,
	[BROJEVIDENCIJE] [int] NOT NULL,
	[IDRADNIK] [int] NOT NULL,
	[DAN] [int] NOT NULL,
	[PRVASMJENAIDSMJENE] [int] NULL,
	[DRUGASMJENAIDSMJENE] [int] NULL,
	[RR] [smallmoney] NOT NULL,
	[ODTOGASMJENSKI] [smallmoney] NOT NULL,
	[ODTOGADVOKRATNI] [smallmoney] NOT NULL,
	[ODTOGAPOSEBNI1] [smallmoney] NOT NULL,
	[ODTOGAPOSEBNI2] [smallmoney] NOT NULL,
	[ODTOGAPOSEBNI3] [smallmoney] NOT NULL,
	[ODTOGAKOMBINACIJA] [smallmoney] NOT NULL,
	[ODTOGASPECIJALNA] [smallmoney] NOT NULL,
	[PR] [smallmoney] NOT NULL,
	[SP] [smallmoney] NOT NULL,
	[GO] [smallmoney] NOT NULL,
	[BOP] [smallmoney] NOT NULL,
	[BOF] [smallmoney] NOT NULL,
	[RD] [smallmoney] NOT NULL,
	[PD] [smallmoney] NOT NULL,
	[NPD] [smallmoney] NOT NULL,
	[BLG] [smallmoney] NOT NULL,
	[ZAS] [smallmoney] NOT NULL,
	[PRV] [smallmoney] NOT NULL,
	[TR] [smallmoney] NOT NULL,
	[PRI] [smallmoney] NOT NULL,
	[NEN] [smallmoney] NOT NULL,
	[STR] [smallmoney] NOT NULL,
	[LOC] [smallmoney] NOT NULL,
	[NED] [smallmoney] NOT NULL,
	[NOC] [smallmoney] NOT NULL,
	[IZNADNORME] [smallmoney] NOT NULL,
	[NENNEODOBRENA] [smallmoney] NOT NULL
) ON [PRIMARY]

GO
	

--- Izrada tablica za Financijsko poslovanje


CREATE TABLE [dbo].[PLAN](
	[IDPLAN] [int] NOT NULL,
	[PLANGODINAIDGODINE] [smallint] NOT NULL,
	[RADNINAZIVPLANA] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
GO
CREATE TABLE [dbo].[PLANORG](
	[IDPLAN] [int] NOT NULL,
	[PLANGODINAIDGODINE] [smallint] NOT NULL,
	[PLANOJIDORGJED] [int] NOT NULL
) ON [PRIMARY]
GO
CREATE TABLE [dbo].[PLANORGKON](
	[IDPLAN] [int] NOT NULL,
	[PLANGODINAIDGODINE] [smallint] NOT NULL,
	[PLANOJIDORGJED] [int] NOT NULL,
	[PLANKONTOIDKONTO] [nvarchar](14) COLLATE Croatian_CI_AS NOT NULL,
	[PLANIRANIIZNOS] [money] NOT NULL
) ON [PRIMARY]
GO


CREATE TABLE [dbo].[IRAVRSTAIZNOSA](
	[IDIRAVRSTAIZNOSA] [int] NOT NULL,
	[IRAVRSTAIZNOSANAZIV] [nvarchar](30) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]

GO

CREATE TABLE [dbo].[URAVRSTAIZNOSA](
	[IDURAVRSTAIZNOSA] [int] NOT NULL,
	[URAVRSTAIZNOSANAZIV] [nvarchar](30) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]

GO
CREATE TABLE [dbo].[STRANEKNJIZENJA](
	[IDSTRANEKNJIZENJA] [int] NOT NULL,
	[NAZIVSTRANEKNJIZENJA] [nvarchar](30) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]

GO

CREATE TABLE [dbo].[SHEMAURASHEMAURAKONTIRANJE](
	[IDSHEMAURA] [int] NOT NULL,
	[IDURAVRSTAIZNOSA] [int] NOT NULL,
	[SHEMAURASTRANEIDSTRANEKNJIZENJA] [int] NOT NULL,
	[SHEMAURAMTIDMJESTOTROSKA] [int] NOT NULL,
	[SHEMAURAOJIDORGJED] [int] NOT NULL,
	[SHEMAURAKONTOIDKONTO] [nvarchar](14) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]

GO

CREATE TABLE [dbo].[SHEMAURA](
	[IDSHEMAURA] [int] NOT NULL,
	[NAZIVSHEMAURA] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[PARTNERSHEMAURAIDPARTNER] [int] NOT NULL
) ON [PRIMARY]

GO

CREATE TABLE [dbo].[SHEMAIRASHEMAIRAKONTIRANJE](
	[IDSHEMAIRA] [int] NOT NULL,
	[IDIRAVRSTAIZNOSA] [int] NOT NULL,
	[SHEMAIRASTRANEIDSTRANEKNJIZENJA] [int] NOT NULL,
	[SHEMAIRAMTIDMJESTOTROSKA] [int] NOT NULL,
	[SHEMAIRAOJIDORGJED] [int] NOT NULL,
	[SHEMAIRAKONTOIDKONTO] [nvarchar](14) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]

GO
CREATE TABLE [dbo].[SHEMAIRA](
	[IDSHEMAIRA] [int] NOT NULL,
	[NAZIVSHEMAIRA] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[SHEMAIRADOKIDDOKUMENT] [int] NOT NULL
) ON [PRIMARY]

GO
CREATE TABLE [dbo].[PARTNERZADUZENJE](
	[IDPARTNER] [int] NOT NULL,
	[IDZADUZENJE] [int] NOT NULL,
	[IDPROIZVOD] [int] NOT NULL,
	[KOLICINAZADUZENJA] [smallmoney] NOT NULL,
	[CIJENAZADUZENJA] [money] NOT NULL,
	[RABATZADUZENJA] [smallmoney] NOT NULL,
	[UGOVORBROJ] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[DATUMUGOVORA] [datetime] NOT NULL,
	[AKTIVNO] [bit] NOT NULL
) ON [PRIMARY]

GO

CREATE TABLE [dbo].[FINPOREZ](
	[FINPOREZIDPOREZ] [int] NOT NULL,
	[FINPOREZNAZIVPOREZ] [nvarchar](30) COLLATE Croatian_CI_AS NOT NULL,
	[FINPOREZSTOPA] [smallmoney] NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[JEDINICAMJERE](
	[IDJEDINICAMJERE] [int] NOT NULL,
	[NAZIVJEDINICAMJERE] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]

GO
CREATE TABLE [dbo].[PROIZVOD](
	[IDPROIZVOD] [int] NOT NULL,
	[NAZIVPROIZVOD] [nvarchar](500) COLLATE Croatian_CI_AS NOT NULL,
	[FINPOREZIDPOREZ] [int] NOT NULL,
	[CIJENA] [decimal](9, 4) NOT NULL,
	[IDJEDINICAMJERE] [int] NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[RACUN](
	[IDRACUN] [int] NOT NULL,
	[RACUNGODINAIDGODINE] [smallint] NOT NULL,
	[IDPARTNER] [int] NOT NULL,
	[DATUM] [datetime] NOT NULL,
	[VALUTA] [datetime] NOT NULL,
	[RAZDOBLJEOD] [datetime] NULL,
	[RAZDOBLJEDO] [datetime] NULL,
	[MODEL] [nvarchar](2) COLLATE Croatian_CI_AS NOT NULL,
	[POZIV] [nvarchar](21) COLLATE Croatian_CI_AS NOT NULL,
	[NAPOMENA] [nvarchar](200) COLLATE Croatian_CI_AS NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[RACUNRacunStavke](
	[IDRACUN] [int] NOT NULL,
	[RACUNGODINAIDGODINE] [smallint] NOT NULL,
	[BROJSTAVKE] [int] NOT NULL,
	[IDPROIZVOD] [int] NOT NULL,
	[NAZIVPROIZVODRACUN] [nvarchar](500) COLLATE Croatian_CI_AS NOT NULL,
	[CIJENARACUN] [decimal](9, 4) NOT NULL,
	[RABAT] [smallmoney] NOT NULL,
	[KOLICINA] [money] NOT NULL,
	[FINPOREZSTOPARACUN] [smallmoney] NOT NULL
) ON [PRIMARY]
GO


CREATE TABLE [dbo].[MJESTOTROSKA](
	[IDMJESTOTROSKA] [int] NOT NULL,
	[NAZIVMJESTOTROSKA] [nvarchar](120) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
GO	

	
CREATE TABLE [dbo].[AKTIVNOST](
	[IDAKTIVNOST] [int] NOT NULL,
	[NAZIVAKTIVNOST] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]

GO

CREATE TABLE [dbo].[BLAGAJNA](
	[BLGDOKIDDOKUMENT] [int] NOT NULL,
	[NAZIVBLAGAJNA] [nvarchar](30) COLLATE Croatian_CI_AS NOT NULL,
	[BLGKONTOIDKONTO] [nvarchar](14) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]

GO
CREATE TABLE [dbo].[BLAGAJNAStavkeBlagajne](
	[BLGDOKIDDOKUMENT] [int] NOT NULL,
	[IDBLGVRSTEDOK] [int] NOT NULL,
	[blggodineIDGODINE] [smallint] NOT NULL,
	[BLGBROJDOKUMENTA] [int] NOT NULL,
	[BLGDATUMDOKUMENTA] [datetime] NOT NULL,
	[BLGSVRHA] [nvarchar](100) COLLATE Croatian_CI_AS NOT NULL,
	[BLGIZNOS] [money] NOT NULL
) ON [PRIMARY]

GO

CREATE TABLE [dbo].[BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje](
	[BLGDOKIDDOKUMENT] [int] NOT NULL,
	[IDBLGVRSTEDOK] [int] NOT NULL,
	[blggodineIDGODINE] [smallint] NOT NULL,
	[BLGBROJDOKUMENTA] [int] NOT NULL,
	[BLGSTAVKEBLAGAJNEKONTOIDKONTO] [nvarchar](14) COLLATE Croatian_CI_AS NOT NULL,
	[BLGMTIDMJESTOTROSKA] [int] NOT NULL,
	[BLGORGJEDIDORGJED] [int] NOT NULL,
	[BLGIZNOSKONTIRANJA] [money] NOT NULL
) ON [PRIMARY]

GO

CREATE TABLE [dbo].[BLGVRSTEDOK](
	[IDBLGVRSTEDOK] [int] NOT NULL,
	[NAZIVVRSTEDOK] [nvarchar](30) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]

GO

CREATE TABLE [dbo].[DOKUMENT](
	[IDDOKUMENT] [int] NOT NULL,
	[NAZIVDOKUMENT] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[IDTIPDOKUMENTA] [int] NOT NULL,
	[PS] [bit] NOT NULL
) ON [PRIMARY]

GO

CREATE TABLE [dbo].[GKSTAVKA](
	[IDGKSTAVKA] [int] IDENTITY(1,1) NOT NULL,
	[DATUMDOKUMENTA] [datetime] NOT NULL,
	[BROJDOKUMENTA] [int] NOT NULL,
	[BROJSTAVKE] [int] NOT NULL,
	[IDDOKUMENT] [int] NOT NULL,
	[IDMJESTOTROSKA] [int] NOT NULL,
	[IDORGJED] [int] NOT NULL,
	[IDKONTO] [nvarchar](14) COLLATE Croatian_CI_AS NOT NULL,
	[OPIS] [nvarchar](150) COLLATE Croatian_CI_AS NULL,
	[duguje] [money] NULL,
	[POTRAZUJE] [money] NULL,
	[DATUMPRIJAVE] [datetime] NULL,
	[IDPARTNER] [int] NULL,
	[ZATVORENIIZNOS] [money] NULL,
	[statusgk] [bit] NOT NULL,
	[ORIGINALNIDOKUMENT] [nvarchar](50) COLLATE Croatian_CI_AS NULL,
	[GKGODIDGODINE] [smallint] NOT NULL,
	[GKDATUMVALUTE] [datetime] NULL
) ON [PRIMARY]

GO


CREATE TABLE [dbo].[GODINE](
	[IDGODINE] [smallint] NOT NULL,
	[GODINEAKTIVNA] [bit] NOT NULL
) ON [PRIMARY]

GO

CREATE TABLE [dbo].[IRA](
	[IRAGODIDGODINE] [smallint] NOT NULL,
	[IRADOKIDDOKUMENT] [int] NOT NULL,
	[IRABROJ] [int] NOT NULL,
	[IRAPARTNERIDPARTNER] [int] NOT NULL,
	[IDTIPIRA] [int] NOT NULL,
	[IRADATUM] [datetime] NOT NULL,
	[IRAVALUTA] [datetime] NOT NULL,
	[IRANAPOMENA] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[IRAUKUPNO] [money] NOT NULL
) ON [PRIMARY]

GO

CREATE TABLE [dbo].[KONTO](
	[IDKONTO] [nvarchar](14) COLLATE Croatian_CI_AS NOT NULL,
	[NAZIVKONTO] [nvarchar](150) COLLATE Croatian_CI_AS NOT NULL,
	[IDAKTIVNOST] [int] NOT NULL
) ON [PRIMARY]

GO



CREATE TABLE [dbo].[ORGJED](
	[IDORGJED] [int] NOT NULL,
	[NAZIVORGJED] [nvarchar](100) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]

GO
CREATE TABLE [dbo].[PARTNER](
	[IDPARTNER] [int] NOT NULL,
	[NAZIVPARTNER] [nvarchar](100) COLLATE Croatian_CI_AS NOT NULL,
	[MB] [nvarchar](13) COLLATE Croatian_CI_AS NULL,
	[PARTNERMJESTO] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[PARTNERULICA] [nvarchar](150) COLLATE Croatian_CI_AS NOT NULL,
	[PARTNEREMAIL] [nvarchar](100) COLLATE Croatian_CI_AS NULL,
	[PARTNEROIB] [nvarchar](11) COLLATE Croatian_CI_AS NOT NULL,
	[PARTNERFAX] [nvarchar](20) COLLATE Croatian_CI_AS NOT NULL,
	[PARTNERTELEFON] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[PARTNERZIRO1] [nvarchar](18) COLLATE Croatian_CI_AS NOT NULL,
	[PARTNERZIRO2] [nvarchar](18) COLLATE Croatian_CI_AS NULL
) ON [PRIMARY]

GO

CREATE TABLE [dbo].[TIPDOKUMENTA](
	[IDTIPDOKUMENTA] [int] NOT NULL,
	[NAZIVTIPDOKUMENTA] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]

GO
CREATE TABLE [dbo].[TIPIRA](
	[IDTIPIRA] [int] NOT NULL,
	[NAZIVTIPIRA] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]

GO


CREATE TABLE [dbo].[TIPURA](
	[IDTIPURA] [int] NOT NULL,
	[NAZIVTIPURA] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]

GO

CREATE TABLE [dbo].[URA](
	[URAGODIDGODINE] [smallint] NOT NULL,
	[URADOKIDDOKUMENT] [int] NOT NULL,
	[URABROJ] [int] NOT NULL,
	[urapartnerIDPARTNER] [int] NOT NULL,
	[IDTIPURA] [int] NOT NULL,
	[URABROJRACUNADOBAVLJACA] [nvarchar](100) COLLATE Croatian_CI_AS NOT NULL,
	[URADATUM] [datetime] NOT NULL,
	[URAVALUTA] [datetime] NOT NULL,
	[URANAPOMENA] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[URAUKUPNO] [money] NOT NULL
) ON [PRIMARY]

GO

CREATE TABLE [dbo].[ZATVARANJA](
	[GK1IDGKSTAVKA] [int] NOT NULL,
	[GK2IDGKSTAVKA] [int] NOT NULL,
	[ZATVARANJAIZNOS] [money] NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[PLVRSTEIZNOSA]
(
[IDPLVRSTEIZNOSA] [int] NOT NULL,
[NAZIVPLVRSTEIZNOSA] [nvarchar] (50) COLLATE Croatian_CI_AS NOT NULL
)
GO

CREATE TABLE [dbo].[SHEMAPLACA]
(
[IDSHEMAPLACA] [int] NOT NULL,
[NAZIVSHEMAPLACA] [nvarchar] (50) COLLATE Croatian_CI_AS NOT NULL,
[SHEMAPLOJIDORGJED] [int] NOT NULL
)
GO

CREATE TABLE [dbo].[SHEMAPLACASHEMAPLACADOP]
(
[IDSHEMAPLACA] [int] NOT NULL,
[SHEMAPLDOPIDDOPRINOS] [int] NOT NULL,
[KONTODOPIDKONTO] [nvarchar] (14) COLLATE Croatian_CI_AS NOT NULL,
[STRANEDOPIDSTRANEKNJIZENJA] [int] NOT NULL,
[MTDOPIDMJESTOTROSKA] [int] NOT NULL
)
GO

CREATE TABLE [dbo].[SHEMAPLACASHEMAPLACAELEMENT]
(
[IDSHEMAPLACA] [int] NOT NULL,
[SHEMAPLELEMENTIDELEMENT] [int] NOT NULL,
[KONTOELEMENTIDKONTO] [nvarchar](14) COLLATE Croatian_CI_AS NOT NULL,
[MTELEMENTIDMJESTOTROSKA] [int] NOT NULL,
[STRANEELEMENTIDSTRANEKNJIZENJA] [int] NOT NULL
)
GO

CREATE TABLE [dbo].[SHEMAPLACASHEMAPLACASTANDARD]
(
	[IDSHEMAPLACA] [int] NOT NULL,
	[SHEMAPLACASTANDARDID] [uniqueidentifier] NOT NULL,
	[IDPLVRSTEIZNOSA] [int] NOT NULL,
	[KONTOPLACAVRSTAIZNOSAIDKONTO] [nvarchar](14) COLLATE Croatian_CI_AS NOT NULL,
	[MTPLACAVRSTAIZNOSAIDMJESTOTROSKA] [int] NOT NULL,
	[STRANEVRSTEIZNOSAIDSTRANEKNJIZENJA] [int] NOT NULL
)
GO

CREATE TABLE [dbo].[SHEMADD](
	[IDSHEMADD] [int] NOT NULL,
	[NAZIVSHEMADD] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[SHEMADDOJIDORGJED] [int] NOT NULL
) ON [PRIMARY]
GO
CREATE TABLE [dbo].[SHEMADDSHEMADDDOPRINOS](
	[IDSHEMADD] [int] NOT NULL,
	[SHEMADDDOPRINOSIDDOPRINOS] [int] NOT NULL,
	[KONTODOPIDKONTO] [nvarchar](14) COLLATE Croatian_CI_AS NOT NULL,
	[MTDOPIDMJESTOTROSKA] [int] NOT NULL,
	[STRANEDOPIDSTRANEKNJIZENJA] [int] NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[SHEMADDSHEMADDSTANDARD](
	[IDSHEMADD] [int] NOT NULL,
	[SHEMADDSTANDARDID] [uniqueidentifier] NOT NULL,
	[IDDDVRSTEIZNOSA] [int] NOT NULL,
	[KONTODDVRSTAIZNOSAIDKONTO] [nvarchar](14) COLLATE Croatian_CI_AS NOT NULL,
	[MTDDVRSTAIZNOSAIDMJESTOTROSKA] [int] NOT NULL,
	[STRANEDDVRSTEIZNOSAIDSTRANEKNJIZENJA] [int] NOT NULL
) ON [PRIMARY]
GO


CREATE TABLE [dbo].[DDVRSTEIZNOSA](
	[IDDDVRSTEIZNOSA] [int] NOT NULL,
	[NAZIVDDVRSTEIZNOSA] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]

GO




if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='SHEMAPLACASHEMAPLACASTANDARD' 
and COLUMN_NAME='SHEMAPLACASTANDARDID' )
ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACASTANDARD] ADD
[SHEMAPLACASTANDARDID] [uniqueidentifier] NOT NULL DEFAULT  NEWID()
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='URA' 
and COLUMN_NAME='URAMODEL' )
ALTER TABLE [dbo].[URA] ADD
[URAMODEL] NVARCHAR (2) COLLATE Croatian_CI_AS NULL DEFAULT NULL 
GO
if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='URA' 
and COLUMN_NAME='URAPOZIVNABROJ' )
ALTER TABLE [dbo].[URA] ADD
[URAPOZIVNABROJ] NVARCHAR (22) COLLATE Croatian_CI_AS NULL DEFAULT NULL 
GO



IF  EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID(N'[dbo].[ZATVARANJA_Trigger1]'))
DROP TRIGGER [dbo].[ZATVARANJA_Trigger1]
go
CREATE TRIGGER [dbo].[ZATVARANJA_Trigger1]
ON [dbo].[ZATVARANJA]
FOR INSERT /* INSERT, UPDATE, DELETE */
AS
	DECLARE @koja BIGINT
	DECLARE @KOJU BIGINT
	declare @BROJDOKUMENTA CHAR(5)
	DECLARE @KOLIKOJEZATVORENO MONEY
	DECLARE @ZAPISANDATUM DATETIME
	DECLARE @DATUM1 DATETIME
	DECLARE @DATUM2 DATETIME
	DECLARE  @VRSTADOKUMENTA CHAR(5)
	DECLARE @BROJURE CHAR(5)
	
	DECLARE @IZNOS money
	
	
	/* IF UPDATE (column_name) ...*/
	SELECT @KOJA = GK1IDGKSTAVKA FROM INSERTED
	SELECT @KOJU = GK2IDGKSTAVKA FROM INSERTED
	SELECT @IZNOS = ZATVARANJAIZNOS FROM INSERTED

	
	UPDATE GKSTAVKA
	SET ZATVORENIIZNOS = ZATVORENIIZNOS + @IZNOS
	WHERE (IDgkstavka = @KOJA)

	UPDATE GKSTAVKA
	SET ZATVORENIIZNOS = ZATVORENIIZNOS + @IZNOS
	WHERE (IDgkstavka = @KOJu)
go


IF  EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID(N'[dbo].[ZATVARANJA_Trigger2]'))
DROP TRIGGER [dbo].[ZATVARANJA_Trigger2]
go

CREATE TRIGGER [dbo].[ZATVARANJA_Trigger2]
ON [dbo].[ZATVARANJA]
FOR DELETE /* INSERT, UPDATE, DELETE */
AS
	DECLARE @KOJA BIGINT
	DECLARE @KOJU BIGINT
	DECLARE @IZNOS MONEY
	
	
	/* IF UPDATE (column_name) ...*/
	SELECT @KOJA = GK1IDGKSTAVKA FROM DELETED
	SELECT @KOJU = GK2IDGKSTAVKA FROM DELETED
	SELECT @IZNOS = ZATVARANJAIZNOS FROM DELETED
	
	UPDATE GKSTAVKA
	SET ZATVORENIIZNOS = ZATVORENIIZNOS - @IZNOS
	WHERE (IDgkstavka = @KOJA)
	
	UPDATE GKSTAVKA
	SET ZATVORENIIZNOS = ZATVORENIIZNOS - @IZNOS
	WHERE (IDgkstavka = @KOJU)
GO

--- kraj tablica za financijsko poslovanje


--- brisanje svih foreign key constrainst

--DECLARE @database nvarchar(50) 
DECLARE @table nvarchar(50) 
declare @schema nvarchar(128), @tbl nvarchar(128), @constraint nvarchar(128) 
DECLARE @sql nvarchar(255) 


declare cur cursor fast_forward for 
select distinct cu.constraint_schema, cu.table_name, cu.constraint_name 
from information_schema.table_constraints tc 
join information_schema.referential_constraints rc on rc.unique_constraint_name = tc.constraint_name 
join information_schema.constraint_column_usage cu on cu.constraint_name = rc.constraint_name 
open cur 
fetch next from cur into @schema, @tbl, @constraint 
while @@fetch_status &lt;&gt; -1 
begin 


select @sql = 'ALTER TABLE ' + @schema + '.[' + @tbl + '] DROP CONSTRAINT ' + @constraint 
PRINT @SQL 
exec sp_executesql @sql 
fetch next from cur into @schema, @tbl, @constraint 
end close cur 
deallocate cur 


-- brisanje svih primary_keys 
WHILE EXISTS(select * from INFORMATION_SCHEMA.TABLE_CONSTRAINTS where table_name &lt;&gt; 'dtproperties')
BEGIN
    select    @sql = 'ALTER TABLE [' + table_name + '] DROP CONSTRAINT ' + CONSTRAINT_NAME 
    from    INFORMATION_SCHEMA.TABLE_CONSTRAINTS 
where    TABLE_NAME &lt;&gt; 'dtproperties'
    exec    sp_executesql @sql
END






declare cur cursor fast_forward for 
SELECT  
'DROP INDEX ' +
QUOTENAME(USER_NAME(o.uid)) +
'.' +
QUOTENAME(o.name) +
'.' +
QUOTENAME(i.name)
FROM sysobjects o
JOIN sysindexes i ON
i.id = o.id
WHERE i.indid BETWEEN 1 AND 254 AND
INDEXPROPERTY(i.id, i.name, 'IsStatistics') = 0 AND
INDEXPROPERTY(i.id, i.name, 'IsHypothetical') = 0 AND
OBJECTPROPERTY(o.id, 'IsMSShipped') = 0 

open cur 
fetch next from cur into @schema
while @@fetch_status &lt;&gt; -1 
begin 
select @sql = @SCHEMA 
exec sp_executesql @sql 
fetch next from cur into @schema
end 
close cur 
deallocate cur
GO






if exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='RADNIK' 
and COLUMN_NAME='IDSTRUCNASPREMA' )
ALTER TABLE [dbo].[RADNIK] DROP
COLUMN [IDSTRUCNASPREMA]
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='RADNIK' 
and COLUMN_NAME='TRENUTNASTRUCNASPREMAIDSTRUCNASPREMA' )
ALTER TABLE [dbo].[RADNIK] ADD
[TRENUTNASTRUCNASPREMAIDSTRUCNASPREMA] [int] NULL
GO





ALTER TABLE [dbo].[ObracunOlaksice] ALTER COLUMN [PRIMATELJOLAKSICA2] [nvarchar] (20) COLLATE Croatian_CI_AS NULL
ALTER TABLE [dbo].[ObracunOlaksice] ALTER COLUMN [PRIMATELJOLAKSICA3] [nvarchar] (20) COLLATE Croatian_CI_AS NULL
GO

ALTER TABLE [dbo].[SHEMAIRA] ALTER COLUMN [NAZIVSHEMAIRA] [nvarchar] (50) COLLATE Croatian_CI_AS NOT NULL
GO


if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='RADNIKKREDITI' 
and COLUMN_NAME='KREDITAKTIVAN' )
ALTER TABLE [dbo].[RADNIKKrediti] ADD
[KREDITAKTIVAN] [bit] DEFAULT 1 NOT NULL 
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='RADNIKObustava' 
and COLUMN_NAME='OBUSTAVAAKTIVNA' )
ALTER TABLE [dbo].[RADNIKObustava] ADD
[OBUSTAVAAKTIVNA] [bit] DEFAULT 1 NOT NULL
GO


if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='RADNIK' 
and COLUMN_NAME='PBO' )
ALTER TABLE [dbo].[RADNIK] ADD
[PBO] NVARCHAR (22) COLLATE Croatian_CI_AS NULL DEFAULT NULL
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='RADNIK' 
and COLUMN_NAME='MO' )
ALTER TABLE [dbo].[RADNIK] ADD
[MO] NVARCHAR (2) COLLATE Croatian_CI_AS NULL DEFAULT NULL 
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='KORISNIK' 
and COLUMN_NAME='KORISNIKOIB' )
ALTER TABLE [dbo].[KORISNIK] ADD
[KORISNIKOIB] NVARCHAR (11) COLLATE Croatian_CI_AS DEFAULT '99999999999' NOT NULL 
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='KORISNIK' 
and COLUMN_NAME='OIBOVLASTENEOSOBE' )
ALTER TABLE [dbo].[KORISNIK] ADD
[OIBOVLASTENEOSOBE] NVARCHAR (11) COLLATE Croatian_CI_AS DEFAULT '99999999999' NOT NULL 
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='KORISNIK' 
and COLUMN_NAME='PREZIMEIMEOVLASTENEOSOBE' )
ALTER TABLE [dbo].[KORISNIK] ADD
[PREZIMEIMEOVLASTENEOSOBE] NVARCHAR (50) COLLATE Croatian_CI_AS DEFAULT 'Prezime ime ovlastene osobe' NOT NULL 
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='KORISNIK' 
and COLUMN_NAME='ADRESAOVLASTENEOSOBE' )
ALTER TABLE [dbo].[KORISNIK] ADD
[ADRESAOVLASTENEOSOBE] NVARCHAR (50) COLLATE Croatian_CI_AS DEFAULT 'Adresa ovlastene osobe' NOT NULL 
GO







if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='OBRACUNRADNICI' 
and COLUMN_NAME='RADNIKOBRACUNOSNOVICA' )
BEGIN
ALTER TABLE [dbo].[OBRACUNRADNICI] ADD
[RADNIKOBRACUNOSNOVICA] [money] NOT NULL DEFAULT 0
END
GO

if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='DOSIPZAGLAVLJELevel1' 
and COLUMN_NAME='DOSPOSEBANPOREZ' )
BEGIN
ALTER TABLE [dbo].[DOSIPZAGLAVLJELevel1] ADD
[DOSPOSEBANPOREZ] [money] NOT NULL DEFAULT 0
END
GO



UPDATE OBRACUNRADNICI
SET OBRACUNRADNICI.RADNIKOBRACUNOSNOVICA = OBRACUN.OBRACUNSKAOSNOVICA
FROM OBRACUNRADNICI
INNER JOIN OBRACUN
ON OBRACUNRADNICI.IDOBRACUN = OBRACUN.IDOBRACUN
WHERE OBRACUNRADNICI.RADNIKOBRACUNOSNOVICA = 0
GO

IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BOLOVANJEFOND]') AND type in (N'U'))
CREATE TABLE [dbo].[BOLOVANJEFOND](
	[ELEMENTBOLOVANJEIDELEMENT] [int] NOT NULL,
	[KOLONA] [smallint] NOT NULL
) ON [PRIMARY]
GO


IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MZOSTABLICE]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[MZOSTABLICE](
	[IDMZOSTABLICE] [int] NOT NULL,
	[OPISMZOSTABLICE] [nvarchar](20) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
INSERT INTO [dbo].[MZOSTABLICE]
           ([IDMZOSTABLICE]
           ,[OPISMZOSTABLICE])
     VALUES (0,'NEDEFINIRANO')
     INSERT INTO [dbo].[MZOSTABLICE]
           ([IDMZOSTABLICE]
           ,[OPISMZOSTABLICE])
     VALUES (1,'smjenski')
     INSERT INTO [dbo].[MZOSTABLICE]
           ([IDMZOSTABLICE]
           ,[OPISMZOSTABLICE])
     VALUES (2,'posebni1')
     INSERT INTO [dbo].[MZOSTABLICE]
           ([IDMZOSTABLICE]
           ,[OPISMZOSTABLICE])
     VALUES (3,'posebni2')
     INSERT INTO [dbo].[MZOSTABLICE]
           ([IDMZOSTABLICE]
           ,[OPISMZOSTABLICE])
     VALUES (4,'posebni3')
     INSERT INTO [dbo].[MZOSTABLICE]
           ([IDMZOSTABLICE]
           ,[OPISMZOSTABLICE])
     VALUES (5,'nocni')
     INSERT INTO [dbo].[MZOSTABLICE]
           ([IDMZOSTABLICE]
           ,[OPISMZOSTABLICE])
     VALUES (6,'prekovremeni')
     INSERT INTO [dbo].[MZOSTABLICE]
           ([IDMZOSTABLICE]
           ,[OPISMZOSTABLICE])
     VALUES (7,'subotom')
     INSERT INTO [dbo].[MZOSTABLICE]
           ([IDMZOSTABLICE]
           ,[OPISMZOSTABLICE])
     VALUES (8,'nedjeljom')
     INSERT INTO [dbo].[MZOSTABLICE]
           ([IDMZOSTABLICE]
           ,[OPISMZOSTABLICE])
     VALUES (9,'blagdan')
     INSERT INTO [dbo].[MZOSTABLICE]
           ([IDMZOSTABLICE]
           ,[OPISMZOSTABLICE])
     VALUES (10,'dvokratni')
     
END
GO        


if NOT exists ( select * from INFORMATION_SCHEMA.COLUMNS 
where TABLE_NAME='GRUPEKOEFLevel1' 
and COLUMN_NAME='IDMZOSTABLICE' )
ALTER TABLE dbo.GRUPEKOEFLevel1 ADD
[IDMZOSTABLICE] [int] NOT NULL DEFAULT 0
GO
IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GRUPEKOEF]') AND type in (N'U'))
CREATE TABLE [dbo].[GRUPEKOEF](
	[IDGRUPEKOEF] [int] NOT NULL,
	[NAZIVGRUPEKOEF] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
GO

IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GRUPEKOEFLevel1]') AND type in (N'U'))
CREATE TABLE [dbo].[GRUPEKOEFLevel1](
	[IDGRUPEKOEF] [int] NOT NULL,
	[IDELEMENT] [int] NOT NULL,
	[IDMZOSTABLICE] [int] NOT NULL
) ON [PRIMARY]
GO

IF   EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PRIPREMAPLACERadniciPripremaElementiPriprema]') AND type in (N'U'))
DROP TABLE [dbo].[PRIPREMAPLACERadniciPripremaElementiPriprema]
GO

IF   EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PRIPREMAPLACERadniciPriprema]') AND type in (N'U'))
DROP TABLE [dbo].[PRIPREMAPLACERadniciPriprema]
GO

IF   EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PRIPREMAPLACE]') AND type in (N'U'))
DROP TABLE [dbo].[PRIPREMAPLACE]
GO


IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[RADNIKLevel7]') AND type in (N'U'))
CREATE TABLE [dbo].[RADNIKLevel7](
	[IDRADNIK] [int] NOT NULL,
	[IDGRUPEKOEF] [int] NOT NULL,
	[DODATNIKOEFICIJENT] [decimal](12, 8) NOT NULL
) ON [PRIMARY]

GO

IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DOSIPZAGLAVLJE]') AND type in (N'U'))
CREATE TABLE [dbo].[DOSIPZAGLAVLJE](
	[DOSIPIDENT] [nvarchar](2) COLLATE Croatian_CI_AS NOT NULL,
	[DOSJMBG] [nvarchar](13) COLLATE Croatian_CI_AS NOT NULL,
	[DOSISPLATAUGODINI] [nvarchar](4) COLLATE Croatian_CI_AS NOT NULL,
	[DOSISPLATAZAGODINU] [nvarchar](4) COLLATE Croatian_CI_AS NOT NULL,
	[DOSOZNACEN] [bit] NOT NULL
) ON [PRIMARY]
GO
IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DOSIPZAGLAVLJELevel1]') AND type in (N'U'))
CREATE TABLE [dbo].[DOSIPZAGLAVLJELevel1](
	[DOSIPIDENT] [nvarchar](2) COLLATE Croatian_CI_AS NOT NULL,
	[DOSJMBG] [nvarchar](13) COLLATE Croatian_CI_AS NOT NULL,
	[DOSMJESECISPLATE] [nvarchar](2) COLLATE Croatian_CI_AS NOT NULL,
	[DOSIDOPCINESTANOVANJA] [nvarchar](4) COLLATE Croatian_CI_AS NOT NULL,
	[DOSUKUPNOBRUTO] [money] NOT NULL,
	[DOSUKUPNODOPRINOSI] [money] NOT NULL,
	[DOSUKUPNOOLAKSICE] [money] NOT NULL,
	[DOSDOHODAK] [money] NOT NULL,
	[DOSUKUPNOOO] [money] NOT NULL,
	[DOSPOREZNAOSNOVICA] [money] NOT NULL,
	[DOSUKUPNOPOREZIPRIREZ] [money] NOT NULL,
	[DOSUKUPNONETOISPLATA] [money] NOT NULL,
	[DOSPOSEBANPOREZ] [money] NOT NULL
	
) ON [PRIMARY]
GO

IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PRPLACE]') AND type in (N'U'))
CREATE TABLE [dbo].[PRPLACE](
	[PRPLACEID] [int] NOT NULL,
	[PRPLACEZAMJESEC] [smallint] NOT NULL,
	[PRPLACEZAGODINU] [smallint] NOT NULL,
	[PRPLACEOPIS] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[PRPLACEOSNOVICA] [money] NOT NULL,
	[PRPLACEPROSJECNISATI] [money] NOT NULL
) ON [PRIMARY]

IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PRPLACEPRPLACEELEMENTI]') AND type in (N'U'))
CREATE TABLE [dbo].[PRPLACEPRPLACEELEMENTI](
	[PRPLACEID] [int] NOT NULL,
	[PRPLACEZAMJESEC] [smallint] NOT NULL,
	[PRPLACEZAGODINU] [smallint] NOT NULL,
	[IDELEMENT] [int] NOT NULL,
	[NAZIVELEMENT] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
GO

IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PRPLACEPRPLACEELEMENTIRADNIK]') AND type in (N'U'))
CREATE TABLE [dbo].[PRPLACEPRPLACEELEMENTIRADNIK](
	[PRPLACEID] [int] NOT NULL,
	[PRPLACEZAMJESEC] [smallint] NOT NULL,
	[PRPLACEZAGODINU] [smallint] NOT NULL,
	[IDELEMENT] [int] NOT NULL,
	[IDRADNIK] [int] NOT NULL,
	[PRPLACESATI] [smallmoney] NOT NULL,
	[PRPLACESATNICA] [smallmoney] NOT NULL,
	[PRPLACEPOSTOTAK] [smallmoney] NOT NULL,
	[PRPLACEIZNOS] [money] NOT NULL,
) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[fnBlagajnaKonto]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[fnBlagajnaKonto]
GO
CREATE FUNCTION [dbo].[fnBlagajnaKonto] (@broj int,@vrsta int,@blagajna int,@godina int)
RETURNS varchar(1000)
AS
BEGIN
	DECLARE @ZatvaranjaLista varchar(1000)

	SELECT 	@ZatvaranjaLista = COALESCE(@ZatvaranjaLista + ';  ', '') + RTRIM(BLGSTAVKEBLAGAJNEKONTOIDKONTO)
	FROM         dbo.BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje
	WHERE     (IDBLGVRSTEDOK = @vrsta) AND (blggodineIDGODINE = @godina) AND (BLGDOKIDDOKUMENT = @blagajna) and  (BLGBROJDOKUMENTA = @broj)


	RETURN(@ZatvaranjaLista)
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[fnSplitter]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[fnSplitter]
GO

create Function [dbo].[fnSplitter] (@IDs Varchar(1000) )  
Returns @Tbl_IDs Table  (ID varchar(20))  As  

Begin 
 -- Append comma
 Set @IDs =  @IDs + ',' 
 -- Indexes to keep the position of searching
 Declare @Pos1 Int
 Declare @pos2 Int
 
 -- Start from first character 
 Set @Pos1=1
 Set @Pos2=1
 
 While @Pos1&lt;Len(@IDs)
 Begin
  Set @Pos1 = CharIndex(',',@IDs,@Pos1)
  Insert @Tbl_IDs Select  Cast(Substring(@IDs,@Pos2,@Pos1-@Pos2) As varchar)
  -- Go to next non comma character
  Set @Pos2=@Pos1+1
  -- Search from the next charcater
  Set @Pos1 = @Pos1+1
 End 
 Return
End
go


IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[KRIZNIPOREZ]') AND type in (N'U'))
CREATE TABLE [dbo].[KRIZNIPOREZ](
	[IDKRIZNIPOREZ] [int] NOT NULL,
	[NAZIVKRIZNIPOREZ] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[KRIZNISTOPA] [smallmoney] NOT NULL,
	[KRIZNIOD] [money] NOT NULL,
	[KRIZNIDO] [money] NOT NULL,
	[MOKRIZNI] [nvarchar](2) COLLATE Croatian_CI_AS NOT NULL,
	[POKRIZNI] [nvarchar](22) COLLATE Croatian_CI_AS NOT NULL,
	[MZKRIZNI] [nvarchar](2) COLLATE Croatian_CI_AS NULL,
	[PZKRIZNI] [nvarchar](22) COLLATE Croatian_CI_AS NULL,
	[PRIMATELJKRIZNI1] [nvarchar](20) COLLATE Croatian_CI_AS NOT NULL,
	[PRIMATELJKRIZNI2] [nvarchar](20) COLLATE Croatian_CI_AS NOT NULL,
	[SIFRAOPISAPLACANJAKRIZNI] [nvarchar](2) COLLATE Croatian_CI_AS NOT NULL,
	[OPISPLACANJAKRIZNI] [nvarchar](36) COLLATE Croatian_CI_AS NOT NULL,
	[PRIMATELJKRIZNI3] [nvarchar](20) COLLATE Croatian_CI_AS NOT NULL,
	[VBDIKRIZNI] [nvarchar](7) COLLATE Croatian_CI_AS NOT NULL,
	[ZRNKRIZNI] [nvarchar](10) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
GO

IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[OBRACUNOBRACUNLevel1ObracunKrizni]') AND type in (N'U'))
begin
CREATE TABLE [dbo].[OBRACUNOBRACUNLevel1ObracunKrizni](
	[IDOBRACUN] [nvarchar](11) COLLATE Croatian_CI_AS NOT NULL,
	[IDRADNIK] [int] NOT NULL,
	[IDKRIZNIPOREZ] [int] NOT NULL,
	[OSNOVICAKRIZNI] [money] NOT NULL,
	[POREZKRIZNI] [money] NOT NULL,
	[NAZIVKRIZNIPOREZ] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[KRIZNISTOPA] [smallmoney] NOT NULL,
	[MOKRIZNI] [nvarchar](2) COLLATE Croatian_CI_AS NOT NULL,
	[POKRIZNI] [nvarchar](22) COLLATE Croatian_CI_AS NOT NULL,
	[MZKRIZNI] [nvarchar](2) COLLATE Croatian_CI_AS NULL,
	[PZKRIZNI] [nvarchar](22) COLLATE Croatian_CI_AS NULL,
	[PRIMATELJKRIZNI1] [nvarchar](20) COLLATE Croatian_CI_AS NOT NULL,
	[PRIMATELJKRIZNI2] [nvarchar](20) COLLATE Croatian_CI_AS NOT NULL,
	[SIFRAOPISAPLACANJAKRIZNI] [nvarchar](2) COLLATE Croatian_CI_AS NOT NULL,
	[OPISPLACANJAKRIZNI] [nvarchar](36) COLLATE Croatian_CI_AS NOT NULL,
	[OSNOVICAPRETHODNA] [money] NOT NULL,
	[OSNOVICAUKUPNA] [money] NOT NULL,
	[POREZPRETHODNI] [money] NOT NULL,
	[POREZUKUPNO] [money] NOT NULL,
	[PRIMATELJKRIZNI3] [nvarchar](20) COLLATE Croatian_CI_AS NOT NULL,
	[VBDIKRIZNI] [nvarchar](7) COLLATE Croatian_CI_AS NOT NULL,
	[ZRNKRIZNI] [nvarchar](10) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
INSERT INTO [dbo].[KRIZNIPOREZ] ([IDKRIZNIPOREZ], [NAZIVKRIZNIPOREZ], [KRIZNISTOPA], [KRIZNIOD], [KRIZNIDO], [MOKRIZNI], [POKRIZNI], [MZKRIZNI], [PZKRIZNI], [PRIMATELJKRIZNI1], [PRIMATELJKRIZNI2], [SIFRAOPISAPLACANJAKRIZNI], [OPISPLACANJAKRIZNI], [PRIMATELJKRIZNI3], [VBDIKRIZNI], [ZRNKRIZNI]) VALUES (1, N'Posebni porez na neto plaće 2 %', 2.0000, 3000.0000, 6000.0000, N'21', N'1902-', N'34', N'311116-os-rkdp', N'Državni proračun RH', N'posebni porez na', N'08', N'Posebni porez na neto plaće', N'neto plaće', N'1001005', N'1863000160')
INSERT INTO [dbo].[KRIZNIPOREZ] ([IDKRIZNIPOREZ], [NAZIVKRIZNIPOREZ], [KRIZNISTOPA], [KRIZNIOD], [KRIZNIDO], [MOKRIZNI], [POKRIZNI], [MZKRIZNI], [PZKRIZNI], [PRIMATELJKRIZNI1], [PRIMATELJKRIZNI2], [SIFRAOPISAPLACANJAKRIZNI], [OPISPLACANJAKRIZNI], [PRIMATELJKRIZNI3], [VBDIKRIZNI], [ZRNKRIZNI]) VALUES (2, N'Posebni porez na neto plaće 4%', 4.0000, 6000.0100, 99999.0000, N'21', N'1902-', N'34', N'311116-os-rkdp', N'Državni proračun RH', N'posebni porez na', N'08', N'Posebni porez na neto plaće', N'neto plaće', N'1001005', N'1863000160')
END
GO


-- Tablice za drugi dohodak

IF  NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DDIZDATAK]') AND type in (N'U'))
begin
CREATE TABLE [dbo].[DDIZDATAK](
	[DDIDIZDATAK] [int] NOT NULL,
	[DDNAZIVIZDATKA] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[DDPOSTOTAKIZDATKA] [smallmoney] NOT NULL
) ON [PRIMARY]

CREATE TABLE [dbo].[DDKATEGORIJA](
	[IDKATEGORIJA] [int] NOT NULL,
	[NAZIVKATEGORIJA] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[IDKOLONAIDD] [int] NOT NULL
) ON [PRIMARY]
CREATE TABLE [dbo].[DDKATEGORIJAIzdaci](
	[IDKATEGORIJA] [int] NOT NULL,
	[DDIDIZDATAK] [int] NOT NULL
) ON [PRIMARY]
CREATE TABLE [dbo].[DDKATEGORIJALevel1](
	[IDKATEGORIJA] [int] NOT NULL,
	[IDPOREZ] [int] NOT NULL,
	[DDMOPOREZ] [nvarchar](2) COLLATE Croatian_CI_AS NOT NULL,
	[DDPOPOREZ] [nvarchar](22) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
CREATE TABLE [dbo].[DDKATEGORIJALevel3](
	[IDKATEGORIJA] [int] NOT NULL,
	[IDDOPRINOS] [int] NOT NULL,
	[DOPRINOSDRUGOGSTUPA] [bit] NOT NULL
) ON [PRIMARY]
CREATE TABLE [dbo].[DDKOLONAIDD](
	[IDKOLONAIDD] [int] NOT NULL,
	[NAZIVKOLONAIDD] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
CREATE TABLE [dbo].[DDOBRACUN](
	[DDOBRACUNIDOBRACUN] [nvarchar](11) COLLATE Croatian_CI_AS NOT NULL,
	[DDOPISOBRACUN] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[DDDATUMOBRACUNA] [datetime] NOT NULL,
	[DDZAKLJUCAN] [bit] NOT NULL,
	[DDRSM] [nvarchar](4) COLLATE Croatian_CI_AS NULL
) ON [PRIMARY]
CREATE TABLE [dbo].[DDOBRACUNRadnici](
	[DDOBRACUNIDOBRACUN] [nvarchar](11) COLLATE Croatian_CI_AS NOT NULL,
	[DDIDRADNIK] [int] NOT NULL,
	[IDKATEGORIJA] [int] NOT NULL,
	[DDOBRACUNATIPRIREZ] [money] NOT NULL,
	[DDOBRACUNATIPDV] [money] NOT NULL,
	[OPCINASTANOVANJAIDOPCINE] [nvarchar](4) COLLATE Croatian_CI_AS NOT NULL,
	[DDSIFRAOPCINESTANOVANJA] [nvarchar](4) COLLATE Croatian_CI_AS NOT NULL,
	[IDKOLONAIDD] [int] NOT NULL
) ON [PRIMARY]
CREATE TABLE [dbo].[DDOBRACUNRadniciDDKrizniPorez](
	[DDOBRACUNIDOBRACUN] [nvarchar](11) COLLATE Croatian_CI_AS NOT NULL,
	[DDIDRADNIK] [int] NOT NULL,
	[IDKRIZNIPOREZ] [int] NOT NULL,
	[NAZIVKRIZNIPOREZ] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[KRIZNISTOPA] [smallmoney] NOT NULL,
	[MOKRIZNI] [nvarchar](2) COLLATE Croatian_CI_AS NOT NULL,
	[POKRIZNI] [nvarchar](22) COLLATE Croatian_CI_AS NOT NULL,
	[MZKRIZNI] [nvarchar](2) COLLATE Croatian_CI_AS NULL,
	[PZKRIZNI] [nvarchar](22) COLLATE Croatian_CI_AS NULL,
	[PRIMATELJKRIZNI1] [nvarchar](20) COLLATE Croatian_CI_AS NOT NULL,
	[PRIMATELJKRIZNI2] [nvarchar](20) COLLATE Croatian_CI_AS NOT NULL,
	[PRIMATELJKRIZNI3] [nvarchar](20) COLLATE Croatian_CI_AS NULL,
	[SIFRAOPISAPLACANJAKRIZNI] [nvarchar](2) COLLATE Croatian_CI_AS NOT NULL,
	[OPISPLACANJAKRIZNI] [nvarchar](36) COLLATE Croatian_CI_AS NOT NULL,
	[VBDIKRIZNI] [nvarchar](7) COLLATE Croatian_CI_AS NOT NULL,
	[ZRNKRIZNI] [nvarchar](10) COLLATE Croatian_CI_AS NOT NULL,
	[DDOSNOVICAKRIZNI] [money] NOT NULL,
	[DDPOREZKRIZNI] [money] NOT NULL,
	[DDOSNOVICAPRETHODNA] [money] NOT NULL,
	[DDOSNOVICAUKUPNA] [money] NOT NULL,
	[DDPOREZPRETHODNI] [money] NOT NULL,
	[DDPOREZUKUPNO] [money] NOT NULL
) ON [PRIMARY]
CREATE TABLE [dbo].[DDOBRACUNRadniciDoprinosi](
	[DDOBRACUNIDOBRACUN] [nvarchar](11) COLLATE Croatian_CI_AS NOT NULL,
	[DDIDRADNIK] [int] NOT NULL,
	[IDDOPRINOS] [int] NOT NULL,
	[NAZIVDOPRINOS] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[IDVRSTADOPRINOS] [int] NOT NULL,
	[NAZIVVRSTADOPRINOS] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[MODOPRINOS] [nvarchar](2) COLLATE Croatian_CI_AS NOT NULL,
	[PODOPRINOS] [nvarchar](22) COLLATE Croatian_CI_AS NOT NULL,
	[MZDOPRINOS] [nvarchar](2) COLLATE Croatian_CI_AS NULL,
	[PZDOPRINOS] [nvarchar](22) COLLATE Croatian_CI_AS NULL,
	[PRIMATELJDOPRINOS1] [nvarchar](20) COLLATE Croatian_CI_AS NOT NULL,
	[PRIMATELJDOPRINOS2] [nvarchar](20) COLLATE Croatian_CI_AS NOT NULL,
	[SIFRAOPISAPLACANJADOPRINOS] [nvarchar](2) COLLATE Croatian_CI_AS NOT NULL,
	[OPISPLACANJADOPRINOS] [nvarchar](36) COLLATE Croatian_CI_AS NOT NULL,
	[VBDIDOPRINOS] [nvarchar](7) COLLATE Croatian_CI_AS NOT NULL,
	[ZRNDOPRINOS] [nvarchar](10) COLLATE Croatian_CI_AS NOT NULL,
	[DDOBRACUNATIDOPRINOS] [money] NOT NULL,
	[DDOSNOVICADOPRINOS] [money] NOT NULL,
	[STOPA] [smallmoney] NOT NULL
) ON [PRIMARY]
CREATE TABLE [dbo].[DDOBRACUNRadniciIzdaci](
	[DDOBRACUNIDOBRACUN] [nvarchar](11) COLLATE Croatian_CI_AS NOT NULL,
	[DDIDRADNIK] [int] NOT NULL,
	[DDIDIZDATAK] [int] NOT NULL,
	[DDOBRACUNATIIZDATAK] [money] NOT NULL,
	[DDPOSTOTAKIZDATKA] [smallmoney] NOT NULL,
	[DDNAZIVIZDATKA] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
CREATE TABLE [dbo].[DDOBRACUNRadniciPorezi](
	[DDOBRACUNIDOBRACUN] [nvarchar](11) COLLATE Croatian_CI_AS NOT NULL,
	[DDIDRADNIK] [int] NOT NULL,
	[IDPOREZ] [int] NOT NULL,
	[NAZIVPOREZ] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[STOPAPOREZA] [smallmoney] NOT NULL,
	[MZPOREZ] [nvarchar](2) COLLATE Croatian_CI_AS NULL,
	[PZPOREZ] [nvarchar](22) COLLATE Croatian_CI_AS NULL,
	[PRIMATELJPOREZ1] [nvarchar](20) COLLATE Croatian_CI_AS NOT NULL,
	[PRIMATELJPOREZ2] [nvarchar](20) COLLATE Croatian_CI_AS NOT NULL,
	[SIFRAOPISAPLACANJAPOREZ] [nvarchar](2) COLLATE Croatian_CI_AS NOT NULL,
	[OPISPLACANJAPOREZ] [nvarchar](36) COLLATE Croatian_CI_AS NOT NULL,
	[DDOBRACUNATIPOREZ] [money] NOT NULL,
	[DDOSNOVICAPOREZ] [money] NOT NULL,
	[DDPOPOREZ] [nvarchar](22) COLLATE Croatian_CI_AS NOT NULL,
	[DDMOPOREZ] [nvarchar](2) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
CREATE TABLE [dbo].[DDOBRACUNRadniciVrstePosla](
	[DDOBRACUNIDOBRACUN] [nvarchar](11) COLLATE Croatian_CI_AS NOT NULL,
	[DDIDRADNIK] [int] NOT NULL,
	[DDIDVRSTAPOSLA] [int] NOT NULL,
	[DDSATI] [smallmoney] NOT NULL,
	[DDSATNICA] [decimal](12, 8) NOT NULL,
	[DDIZNOS] [money] NOT NULL,
	[DDNAZIVVRSTAPOSLA] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
CREATE TABLE [dbo].[DDRADNIK](
	[DDIDRADNIK] [int] NOT NULL,
	[DDPREZIME] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[DDIME] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[DDADRESA] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[DDKUCNIBROJ] [nvarchar](10) COLLATE Croatian_CI_AS NOT NULL,
	[DDMJESTO] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL,
	[DDZRN] [nvarchar](10) COLLATE Croatian_CI_AS NOT NULL,
	[OPCINARADAIDOPCINE] [nvarchar](4) COLLATE Croatian_CI_AS NOT NULL,
	[OPCINASTANOVANJAIDOPCINE] [nvarchar](4) COLLATE Croatian_CI_AS NOT NULL,
	[IDBANKE] [int] NOT NULL,
	[DDJMBG] [nvarchar](13) COLLATE Croatian_CI_AS NOT NULL,
	[DDOIB] [nvarchar](11) COLLATE Croatian_CI_AS NOT NULL,
	[DDSIFRAOPISAPLACANJANETO] [nvarchar](2) COLLATE Croatian_CI_AS NOT NULL,
	[DDOPISPLACANJANETO] [nvarchar](36) COLLATE Croatian_CI_AS NOT NULL,
	[DDPDVOBVEZNIK] [bit] NOT NULL,
	[DDDRUGISTUP] [bit] NOT NULL,
	[DDZBIRNINETO] [bit] NOT NULL,
	[DDPBO] [nvarchar](22) COLLATE Croatian_CI_AS NULL,
	[DDMO] [nvarchar](2) COLLATE Croatian_CI_AS NULL
) ON [PRIMARY]
CREATE TABLE [dbo].[DDVRSTEPOSLA](
	[DDIDVRSTAPOSLA] [int] NOT NULL,
	[DDNAZIVVRSTAPOSLA] [nvarchar](50) COLLATE Croatian_CI_AS NOT NULL
) ON [PRIMARY]
end
go
-- Kraj tablica za drugi dohodak


-- Pocetak primary keys

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[UCENIK]') AND name = N'PK__UCENIK__1D114BD1')
ALTER TABLE [dbo].[UCENIK] DROP CONSTRAINT [PK__UCENIK__1D114BD1]
GO

ALTER TABLE [dbo].[UCENIK] ADD PRIMARY KEY CLUSTERED 
(
	[IDUCENIK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[UCENIKOBRACUN]') AND name = N'PK__UCENIKOBRACUN__09FE775D')
ALTER TABLE [dbo].[UCENIKOBRACUN] DROP CONSTRAINT [PK__UCENIKOBRACUN__09FE775D]
GO

ALTER TABLE [dbo].[UCENIKOBRACUN] ADD PRIMARY KEY CLUSTERED 
(
	[UCOBRMJESEC] ASC,
	[UCOBRGODINA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[UCENIKOBRACUNUCENIKOBRACUNDETAIL]') AND name = N'PK__UCENIKOBRACUNUCE__7ABC33CD')
ALTER TABLE [dbo].[UCENIKOBRACUNUCENIKOBRACUNDETAIL] DROP CONSTRAINT [PK__UCENIKOBRACUNUCE__7ABC33CD]
GO

ALTER TABLE [dbo].[UCENIKOBRACUNUCENIKOBRACUNDETAIL] ADD PRIMARY KEY CLUSTERED 
(
	[UCOBRMJESEC] ASC,
	[UCOBRGODINA] ASC,
	[IDUCENIK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[UCENIKRSMIDENT]') AND name = N'PK__UCENIKRSMIDENT__1D7B6025')
ALTER TABLE [dbo].[UCENIKRSMIDENT] DROP CONSTRAINT [PK__UCENIKRSMIDENT__1D7B6025]
GO

ALTER TABLE [dbo].[UCENIKRSMIDENT] ADD PRIMARY KEY CLUSTERED 
(
	[UCENIKRSMIDENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[POSTANSKIBROJEVI]') AND name = N'PK__POSTANSKIBROJEVI__1A34DF26')
ALTER TABLE [dbo].[POSTANSKIBROJEVI] DROP CONSTRAINT [PK__POSTANSKIBROJEVI__1A34DF26]
GO

ALTER TABLE [dbo].[POSTANSKIBROJEVI] ADD PRIMARY KEY CLUSTERED 
(
	[POSTANSKIBROJ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ZAPOSLENI]') AND name = N'PK__ZAPOSLENI__7E5D49E8')
ALTER TABLE [dbo].[ZAPOSLENI] DROP CONSTRAINT [PK__ZAPOSLENI__7E5D49E8]
GO

ALTER TABLE [dbo].[ZAPOSLENI] ADD PRIMARY KEY CLUSTERED 
(
	[IDRADNIK] ASC,
	[DATUMZAPOSLENJA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OTISLI]') AND name = N'PK__OTISLI__0045925A')
ALTER TABLE [dbo].[OTISLI] DROP CONSTRAINT [PK__OTISLI__0045925A]
GO

ALTER TABLE [dbo].[OTISLI] ADD PRIMARY KEY CLUSTERED 
(
	[IDRADNIK] ASC,
	[DATUMODLASKA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO



IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OBRACUNOBRACUNLevel1ObracunIzuzece]') AND name = N'PK__OBRACUNOBRACUNLe__74D3DFAE')
ALTER TABLE [dbo].[OBRACUNOBRACUNLevel1ObracunIzuzece] DROP CONSTRAINT [PK__OBRACUNOBRACUNLe__74D3DFAE]
GO

ALTER TABLE [dbo].[OBRACUNOBRACUNLevel1ObracunIzuzece] ADD PRIMARY KEY CLUSTERED 
(
	[IDOBRACUN] ASC,
	[IDRADNIK] ASC,
	[IDOBRACUNIZUZECE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO




IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIKIzuzeceOdOvrhe]') AND name = N'PK__RADNIKIzuzeceOdO__6D32BDE6')
ALTER TABLE [dbo].[RADNIKIzuzeceOdOvrhe] DROP CONSTRAINT [PK__RADNIKIzuzeceOdO__6D32BDE6]
GO

ALTER TABLE [dbo].[RADNIKIzuzeceOdOvrhe] ADD PRIMARY KEY CLUSTERED 
(
	[IDRADNIK] ASC,
	[BANKAZASTICENOIDBANKE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO




IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RAD1GELEMENTI]') AND name = N'PK__RAD1GELEMENTI__5F19A8B9')
ALTER TABLE [dbo].[RAD1GELEMENTI] DROP CONSTRAINT [PK__RAD1GELEMENTI__5F19A8B9]
GO

ALTER TABLE [dbo].[RAD1GELEMENTI] ADD PRIMARY KEY CLUSTERED 
(
	[RAD1GELEMENTIID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RAD1VEZASPOL]') AND name = N'PK__RAD1VEZASPOL__66BACA81')
ALTER TABLE [dbo].[RAD1VEZASPOL] DROP CONSTRAINT [PK__RAD1VEZASPOL__66BACA81]
GO

ALTER TABLE [dbo].[RAD1VEZASPOL] ADD PRIMARY KEY CLUSTERED 
(
	[RAD1SPOLID] ASC,
	[IDSPOL] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RAD1SPREMEVEZA]') AND name = N'PK__RAD1SPREMEVEZA__6E5BEC49')
ALTER TABLE [dbo].[RAD1SPREMEVEZA] DROP CONSTRAINT [PK__RAD1SPREMEVEZA__6E5BEC49]
GO

ALTER TABLE [dbo].[RAD1SPREMEVEZA] ADD PRIMARY KEY CLUSTERED 
(
	[RAD1IDSPREME] ASC,
	[IDSTRUCNASPREMA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RAD1SPREME]') AND name = N'PK__RAD1SPREME__5D316047')
ALTER TABLE [dbo].[RAD1SPREME] DROP CONSTRAINT [PK__RAD1SPREME__5D316047]
GO

ALTER TABLE [dbo].[RAD1SPREME] ADD PRIMARY KEY CLUSTERED 
(
	[RAD1IDSPREME] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RAD1SPOL]') AND name = N'PK__RAD1SPOL__62EA399D')
ALTER TABLE [dbo].[RAD1SPOL] DROP CONSTRAINT [PK__RAD1SPOL__62EA399D]
GO

ALTER TABLE [dbo].[RAD1SPOL] ADD PRIMARY KEY CLUSTERED 
(
	[RAD1SPOLID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RAD1MELEMENTIVEZA]') AND name = N'PK__RAD1MELEMENTIVEZ__6C73A3D7')
ALTER TABLE [dbo].[RAD1MELEMENTIVEZA] DROP CONSTRAINT [PK__RAD1MELEMENTIVEZ__6C73A3D7]
GO

ALTER TABLE [dbo].[RAD1MELEMENTIVEZA] ADD PRIMARY KEY CLUSTERED 
(
	[RAD1ELEMENTIID] ASC,
	[IDELEMENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RAD1MELEMENTI]') AND name = N'PK__RAD1MELEMENTI__6101F12B')
ALTER TABLE [dbo].[RAD1MELEMENTI] DROP CONSTRAINT [PK__RAD1MELEMENTI__6101F12B]
GO

ALTER TABLE [dbo].[RAD1MELEMENTI] ADD PRIMARY KEY CLUSTERED 
(
	[RAD1ELEMENTIID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RAD1GELEMENTIVEZA]') AND name = N'PK__RAD1GELEMENTIVEZ__6A8B5B65')
ALTER TABLE [dbo].[RAD1GELEMENTIVEZA] DROP CONSTRAINT [PK__RAD1GELEMENTIVEZ__6A8B5B65]
GO

ALTER TABLE [dbo].[RAD1GELEMENTIVEZA] ADD PRIMARY KEY CLUSTERED 
(
	[RAD1GELEMENTIID] ASC,
	[IDELEMENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNOVRIJEME]') AND name = N'PK__RADNOVRIJEME__64D2820F')
ALTER TABLE [dbo].[RADNOVRIJEME] DROP CONSTRAINT [PK__RADNOVRIJEME__64D2820F]
GO

ALTER TABLE [dbo].[RADNOVRIJEME] ADD PRIMARY KEY CLUSTERED 
(
	[IDRADNOVRIJEME] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO







IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OSVRSTA]') AND name = N'PK__OSVRSTA__79438F10')
ALTER TABLE [dbo].[OSVRSTA] DROP CONSTRAINT [PK__OSVRSTA__79438F10]
GO

ALTER TABLE [dbo].[OSVRSTA] ADD PRIMARY KEY CLUSTERED 
(
	[IDOSVRSTA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO



IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OSTEMELJNICA]') AND name = N'PK__OSTEMELJNICA__0C566384')
ALTER TABLE [dbo].[OSTEMELJNICA] DROP CONSTRAINT [PK__OSTEMELJNICA__0C566384]
GO

ALTER TABLE [dbo].[OSTEMELJNICA] ADD PRIMARY KEY CLUSTERED 
(
	[INVBROJ] ASC,
	[IDOSDOKUMENT] ASC,
	[OSBROJDOKUMENTA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO



IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OSRAZMJESTAJ]') AND name = N'PK__OSRAZMJESTAJ__0E3EABF6')
ALTER TABLE [dbo].[OSRAZMJESTAJ] DROP CONSTRAINT [PK__OSRAZMJESTAJ__0E3EABF6]
GO

ALTER TABLE [dbo].[OSRAZMJESTAJ] ADD PRIMARY KEY CLUSTERED 
(
	[IDOSRAZMJESTAJ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO



IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OSDOKUMENT]') AND name = N'PK__OSDOKUMENT__0A6E1B12')
ALTER TABLE [dbo].[OSDOKUMENT] DROP CONSTRAINT [PK__OSDOKUMENT__0A6E1B12]
GO

ALTER TABLE [dbo].[OSDOKUMENT] ADD PRIMARY KEY CLUSTERED 
(
	[IDOSDOKUMENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OS]') AND name = N'PK__OS__04B541BC')
ALTER TABLE [dbo].[OS] DROP CONSTRAINT [PK__OS__04B541BC]
GO

ALTER TABLE [dbo].[OS] ADD PRIMARY KEY CLUSTERED 
(
	[INVBROJ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO





IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[AKTIVNOST]') AND name = N'PK__AKTIVNOST__6AB57897')
ALTER TABLE [dbo].[AKTIVNOST] DROP CONSTRAINT [PK__AKTIVNOST__6AB57897]
GO

ALTER TABLE [dbo].[AKTIVNOST] ADD PRIMARY KEY CLUSTERED 
(
	[IDAKTIVNOST] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[AMSKUPINE]') AND name = N'PK__AMSKUPINE__3EA1EC2F')
ALTER TABLE [dbo].[AMSKUPINE] DROP CONSTRAINT [PK__AMSKUPINE__3EA1EC2F]
GO

ALTER TABLE [dbo].[AMSKUPINE] ADD PRIMARY KEY CLUSTERED 
(
	[IDAMSKUPINE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[BANKE]') AND name = N'PK__BANKE__521ED4F7')
ALTER TABLE [dbo].[BANKE] DROP CONSTRAINT [PK__BANKE__521ED4F7]
GO

ALTER TABLE [dbo].[BANKE] ADD PRIMARY KEY CLUSTERED 
(
	[IDBANKE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[BENEFICIRANI]') AND name = N'PK__BENEFICIRANI__54071D69')
ALTER TABLE [dbo].[BENEFICIRANI] DROP CONSTRAINT [PK__BENEFICIRANI__54071D69]
GO

ALTER TABLE [dbo].[BENEFICIRANI] ADD PRIMARY KEY CLUSTERED 
(
	[IDBENEFICIRANI] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[BLAGAJNA]') AND name = N'PK__BLAGAJNA__6C9DC109')
ALTER TABLE [dbo].[BLAGAJNA] DROP CONSTRAINT [PK__BLAGAJNA__6C9DC109]
GO

ALTER TABLE [dbo].[BLAGAJNA] ADD PRIMARY KEY CLUSTERED 
(
	[BLGDOKIDDOKUMENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[BLAGAJNAStavkeBlagajne]') AND name = N'PK__BLAGAJNAStavkeBl__6E86097B')
ALTER TABLE [dbo].[BLAGAJNAStavkeBlagajne] DROP CONSTRAINT [PK__BLAGAJNAStavkeBl__6E86097B]
GO

ALTER TABLE [dbo].[BLAGAJNAStavkeBlagajne] ADD PRIMARY KEY CLUSTERED 
(
	[BLGDOKIDDOKUMENT] ASC,
	[IDBLGVRSTEDOK] ASC,
	[blggodineIDGODINE] ASC,
	[BLGBROJDOKUMENTA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje]') AND name = N'PK__BLAGAJNAStavkeBl__706E51ED')
ALTER TABLE [dbo].[BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje] DROP CONSTRAINT [PK__BLAGAJNAStavkeBl__706E51ED]
GO

ALTER TABLE [dbo].[BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje] ADD PRIMARY KEY CLUSTERED 
(
	[BLGDOKIDDOKUMENT] ASC,
	[IDBLGVRSTEDOK] ASC,
	[blggodineIDGODINE] ASC,
	[BLGBROJDOKUMENTA] ASC,
	[BLGSTAVKEBLAGAJNEKONTOIDKONTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[BLGVRSTEDOK]') AND name = N'PK__BLGVRSTEDOK__72569A5F')
ALTER TABLE [dbo].[BLGVRSTEDOK] DROP CONSTRAINT [PK__BLGVRSTEDOK__72569A5F]
GO

ALTER TABLE [dbo].[BLGVRSTEDOK] ADD PRIMARY KEY CLUSTERED 
(
	[IDBLGVRSTEDOK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[BOLOVANJEFOND]') AND name = N'PK__BOLOVANJEFOND__48606093')
ALTER TABLE [dbo].[BOLOVANJEFOND] DROP CONSTRAINT [PK__BOLOVANJEFOND__48606093]
GO

ALTER TABLE [dbo].[BOLOVANJEFOND] ADD PRIMARY KEY CLUSTERED 
(
	[ELEMENTBOLOVANJEIDELEMENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[BRACNOSTANJE]') AND name = N'PK__BRACNOSTANJE__55EF65DB')
ALTER TABLE [dbo].[BRACNOSTANJE] DROP CONSTRAINT [PK__BRACNOSTANJE__55EF65DB]
GO

ALTER TABLE [dbo].[BRACNOSTANJE] ADD PRIMARY KEY CLUSTERED 
(
	[IDBRACNOSTANJE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDIZDATAK]') AND name = N'PK__DDIZDATAK__55BA5BB1')
ALTER TABLE [dbo].[DDIZDATAK] DROP CONSTRAINT [PK__DDIZDATAK__55BA5BB1]
GO

ALTER TABLE [dbo].[DDIZDATAK] ADD PRIMARY KEY CLUSTERED 
(
	[DDIDIZDATAK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDKATEGORIJA]') AND name = N'PK__DDKATEGORIJA__4E1939E9')
ALTER TABLE [dbo].[DDKATEGORIJA] DROP CONSTRAINT [PK__DDKATEGORIJA__4E1939E9]
GO

ALTER TABLE [dbo].[DDKATEGORIJA] ADD PRIMARY KEY CLUSTERED 
(
	[IDKATEGORIJA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDKATEGORIJAIzdaci]') AND name = N'PK__DDKATEGORIJAIzda__598AEC95')
ALTER TABLE [dbo].[DDKATEGORIJAIzdaci] DROP CONSTRAINT [PK__DDKATEGORIJAIzda__598AEC95]
GO

ALTER TABLE [dbo].[DDKATEGORIJAIzdaci] ADD PRIMARY KEY CLUSTERED 
(
	[IDKATEGORIJA] ASC,
	[DDIDIZDATAK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDKATEGORIJALevel1]') AND name = N'PK__DDKATEGORIJALeve__5001825B')
ALTER TABLE [dbo].[DDKATEGORIJALevel1] DROP CONSTRAINT [PK__DDKATEGORIJALeve__5001825B]
GO

ALTER TABLE [dbo].[DDKATEGORIJALevel1] ADD PRIMARY KEY CLUSTERED 
(
	[IDKATEGORIJA] ASC,
	[IDPOREZ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDKATEGORIJALevel3]') AND name = N'PK__DDKATEGORIJALeve__51E9CACD')
ALTER TABLE [dbo].[DDKATEGORIJALevel3] DROP CONSTRAINT [PK__DDKATEGORIJALeve__51E9CACD]
GO

ALTER TABLE [dbo].[DDKATEGORIJALevel3] ADD PRIMARY KEY CLUSTERED 
(
	[IDKATEGORIJA] ASC,
	[IDDOPRINOS] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDKOLONAIDD]') AND name = N'PK__DDKOLONAIDD__57A2A423')
ALTER TABLE [dbo].[DDKOLONAIDD] DROP CONSTRAINT [PK__DDKOLONAIDD__57A2A423]
GO

ALTER TABLE [dbo].[DDKOLONAIDD] ADD PRIMARY KEY CLUSTERED 
(
	[IDKOLONAIDD] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDOBRACUN]') AND name = N'PK__DDOBRACUN__5B733507')
ALTER TABLE [dbo].[DDOBRACUN] DROP CONSTRAINT [PK__DDOBRACUN__5B733507]
GO

ALTER TABLE [dbo].[DDOBRACUN] ADD PRIMARY KEY CLUSTERED 
(
	[DDOBRACUNIDOBRACUN] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDOBRACUNRadnici]') AND name = N'PK__DDOBRACUNRadnici__5F43C5EB')
ALTER TABLE [dbo].[DDOBRACUNRadnici] DROP CONSTRAINT [PK__DDOBRACUNRadnici__5F43C5EB]
GO

ALTER TABLE [dbo].[DDOBRACUNRadnici] ADD PRIMARY KEY CLUSTERED 
(
	[DDOBRACUNIDOBRACUN] ASC,
	[DDIDRADNIK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDOBRACUNRadniciDDKrizniPorez]') AND name = N'PK__DDOBRACUNRadnici__68CD3025')
ALTER TABLE [dbo].[DDOBRACUNRadniciDDKrizniPorez] DROP CONSTRAINT [PK__DDOBRACUNRadnici__68CD3025]
GO

ALTER TABLE [dbo].[DDOBRACUNRadniciDDKrizniPorez] ADD PRIMARY KEY CLUSTERED 
(
	[DDOBRACUNIDOBRACUN] ASC,
	[DDIDRADNIK] ASC,
	[IDKRIZNIPOREZ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDOBRACUNRadniciDoprinosi]') AND name = N'PK__DDOBRACUNRadnici__64FC9F41')
ALTER TABLE [dbo].[DDOBRACUNRadniciDoprinosi] DROP CONSTRAINT [PK__DDOBRACUNRadnici__64FC9F41]
GO

ALTER TABLE [dbo].[DDOBRACUNRadniciDoprinosi] ADD PRIMARY KEY CLUSTERED 
(
	[DDOBRACUNIDOBRACUN] ASC,
	[DDIDRADNIK] ASC,
	[IDDOPRINOS] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDOBRACUNRadniciIzdaci]') AND name = N'PK__DDOBRACUNRadnici__631456CF')
ALTER TABLE [dbo].[DDOBRACUNRadniciIzdaci] DROP CONSTRAINT [PK__DDOBRACUNRadnici__631456CF]
GO

ALTER TABLE [dbo].[DDOBRACUNRadniciIzdaci] ADD PRIMARY KEY CLUSTERED 
(
	[DDOBRACUNIDOBRACUN] ASC,
	[DDIDRADNIK] ASC,
	[DDIDIZDATAK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDOBRACUNRadniciPorezi]') AND name = N'PK__DDOBRACUNRadnici__66E4E7B3')
ALTER TABLE [dbo].[DDOBRACUNRadniciPorezi] DROP CONSTRAINT [PK__DDOBRACUNRadnici__66E4E7B3]
GO

ALTER TABLE [dbo].[DDOBRACUNRadniciPorezi] ADD PRIMARY KEY CLUSTERED 
(
	[DDOBRACUNIDOBRACUN] ASC,
	[DDIDRADNIK] ASC,
	[IDPOREZ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDOBRACUNRadniciVrstePosla]') AND name = N'PK__DDOBRACUNRadnici__612C0E5D')
ALTER TABLE [dbo].[DDOBRACUNRadniciVrstePosla] DROP CONSTRAINT [PK__DDOBRACUNRadnici__612C0E5D]
GO

ALTER TABLE [dbo].[DDOBRACUNRadniciVrstePosla] ADD PRIMARY KEY CLUSTERED 
(
	[DDOBRACUNIDOBRACUN] ASC,
	[DDIDRADNIK] ASC,
	[DDIDVRSTAPOSLA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDRADNIK]') AND name = N'PK__DDRADNIK__53D2133F')
ALTER TABLE [dbo].[DDRADNIK] DROP CONSTRAINT [PK__DDRADNIK__53D2133F]
GO

ALTER TABLE [dbo].[DDRADNIK] ADD PRIMARY KEY CLUSTERED 
(
	[DDIDRADNIK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDVRSTEIZNOSA]') AND name = N'PK__DDVRSTEIZNOSA__351881F5')
ALTER TABLE [dbo].[DDVRSTEIZNOSA] DROP CONSTRAINT [PK__DDVRSTEIZNOSA__351881F5]
GO

ALTER TABLE [dbo].[DDVRSTEIZNOSA] ADD PRIMARY KEY CLUSTERED 
(
	[IDDDVRSTEIZNOSA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDVRSTEPOSLA]') AND name = N'PK__DDVRSTEPOSLA__5D5B7D79')
ALTER TABLE [dbo].[DDVRSTEPOSLA] DROP CONSTRAINT [PK__DDVRSTEPOSLA__5D5B7D79]
GO

ALTER TABLE [dbo].[DDVRSTEPOSLA] ADD PRIMARY KEY CLUSTERED 
(
	[DDIDVRSTAPOSLA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DOKUMENT]') AND name = N'PK__DOKUMENT__743EE2D1')
ALTER TABLE [dbo].[DOKUMENT] DROP CONSTRAINT [PK__DOKUMENT__743EE2D1]
GO

ALTER TABLE [dbo].[DOKUMENT] ADD PRIMARY KEY CLUSTERED 
(
	[IDDOKUMENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DOPRINOS]') AND name = N'PK__DOPRINOS__57D7AE4D')
ALTER TABLE [dbo].[DOPRINOS] DROP CONSTRAINT [PK__DOPRINOS__57D7AE4D]
GO

ALTER TABLE [dbo].[DOPRINOS] ADD PRIMARY KEY CLUSTERED 
(
	[IDDOPRINOS] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DOSIPZAGLAVLJE]') AND name = N'PK__DOSIPZAGLAVLJE__3CEEADE7')
ALTER TABLE [dbo].[DOSIPZAGLAVLJE] DROP CONSTRAINT [PK__DOSIPZAGLAVLJE__3CEEADE7]
GO

ALTER TABLE [dbo].[DOSIPZAGLAVLJE] ADD PRIMARY KEY CLUSTERED 
(
	[DOSIPIDENT] ASC,
	[DOSJMBG] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DOSIPZAGLAVLJELevel1]') AND name = N'PK__DOSIPZAGLAVLJELe__3ED6F659')
ALTER TABLE [dbo].[DOSIPZAGLAVLJELevel1] DROP CONSTRAINT [PK__DOSIPZAGLAVLJELe__3ED6F659]
GO

ALTER TABLE [dbo].[DOSIPZAGLAVLJELevel1] ADD PRIMARY KEY CLUSTERED 
(
	[DOSIPIDENT] ASC,
	[DOSJMBG] ASC,
	[DOSMJESECISPLATE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DRZAVLJANSTVO]') AND name = N'PK__DRZAVLJANSTVO__4DE42FBF')
ALTER TABLE [dbo].[DRZAVLJANSTVO] DROP CONSTRAINT [PK__DRZAVLJANSTVO__4DE42FBF]
GO

ALTER TABLE [dbo].[DRZAVLJANSTVO] ADD PRIMARY KEY CLUSTERED 
(
	[IDDRZAVLJANSTVO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ELEMENT]') AND name = N'PK__ELEMENT__1C81DE55')
ALTER TABLE [dbo].[ELEMENT] DROP CONSTRAINT [PK__ELEMENT__1C81DE55]
GO

ALTER TABLE [dbo].[ELEMENT] ADD PRIMARY KEY CLUSTERED 
(
	[IDELEMENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[EVIDENCIJA]') AND name = N'PK__EVIDENCIJA__445AC585')
ALTER TABLE [dbo].[EVIDENCIJA] DROP CONSTRAINT [PK__EVIDENCIJA__445AC585]
GO

ALTER TABLE [dbo].[EVIDENCIJA] ADD PRIMARY KEY CLUSTERED 
(
	[MJESEC] ASC,
	[IDGODINE] ASC,
	[BROJEVIDENCIJE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[EVIDENCIJARADNICI]') AND name = N'PK__EVIDENCIJARADNIC__46430DF7')
ALTER TABLE [dbo].[EVIDENCIJARADNICI] DROP CONSTRAINT [PK__EVIDENCIJARADNIC__46430DF7]
GO

ALTER TABLE [dbo].[EVIDENCIJARADNICI] ADD PRIMARY KEY CLUSTERED 
(
	[MJESEC] ASC,
	[IDGODINE] ASC,
	[BROJEVIDENCIJE] ASC,
	[IDRADNIK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[EVIDENCIJARADNICISATI]') AND name = N'PK__EVIDENCIJARADNIC__482B5669')
ALTER TABLE [dbo].[EVIDENCIJARADNICISATI] DROP CONSTRAINT [PK__EVIDENCIJARADNIC__482B5669]
GO

ALTER TABLE [dbo].[EVIDENCIJARADNICISATI] ADD PRIMARY KEY CLUSTERED 
(
	[MJESEC] ASC,
	[IDGODINE] ASC,
	[BROJEVIDENCIJE] ASC,
	[IDRADNIK] ASC,
	[DAN] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[FINPOREZ]') AND name = N'PK__FINPOREZ__0B224829')
ALTER TABLE [dbo].[FINPOREZ] DROP CONSTRAINT [PK__FINPOREZ__0B224829]
GO

ALTER TABLE [dbo].[FINPOREZ] ADD PRIMARY KEY CLUSTERED 
(
	[FINPOREZIDPOREZ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[GKSTAVKA]') AND name = N'PK__GKSTAVKA__76272B43')
ALTER TABLE [dbo].[GKSTAVKA] DROP CONSTRAINT [PK__GKSTAVKA__76272B43]
GO

ALTER TABLE [dbo].[GKSTAVKA] ADD PRIMARY KEY CLUSTERED 
(
	[IDGKSTAVKA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[GODINE]') AND name = N'PK__GODINE__780F73B5')
ALTER TABLE [dbo].[GODINE] DROP CONSTRAINT [PK__GODINE__780F73B5]
GO

ALTER TABLE [dbo].[GODINE] ADD PRIMARY KEY CLUSTERED 
(
	[IDGODINE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[GOOBRACUN]') AND name = N'PK__GOOBRACUN__42727D13')
ALTER TABLE [dbo].[GOOBRACUN] DROP CONSTRAINT [PK__GOOBRACUN__42727D13]
GO

ALTER TABLE [dbo].[GOOBRACUN] ADD PRIMARY KEY CLUSTERED 
(
	[IDGOOBRACUN] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[GRUPEKOEF]') AND name = N'PK__GRUPEKOEF__3735D491')
ALTER TABLE [dbo].[GRUPEKOEF] DROP CONSTRAINT [PK__GRUPEKOEF__3735D491]
GO

ALTER TABLE [dbo].[GRUPEKOEF] ADD PRIMARY KEY CLUSTERED 
(
	[IDGRUPEKOEF] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[GRUPEKOEFLevel1]') AND name = N'PK__GRUPEKOEFLevel1__391E1D03')
ALTER TABLE [dbo].[GRUPEKOEFLevel1] DROP CONSTRAINT [PK__GRUPEKOEFLevel1__391E1D03]
GO

ALTER TABLE [dbo].[GRUPEKOEFLevel1] ADD PRIMARY KEY CLUSTERED 
(
	[IDGRUPEKOEF] ASC,
	[IDELEMENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[GRUPEOLAKSICA]') AND name = N'PK__GRUPEOLAKSICA__59BFF6BF')
ALTER TABLE [dbo].[GRUPEOLAKSICA] DROP CONSTRAINT [PK__GRUPEOLAKSICA__59BFF6BF]
GO

ALTER TABLE [dbo].[GRUPEOLAKSICA] ADD PRIMARY KEY CLUSTERED 
(
	[IDGRUPEOLAKSICA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[IPIDENT]') AND name = N'PK__IPIDENT__260B488F')
ALTER TABLE [dbo].[IPIDENT] DROP CONSTRAINT [PK__IPIDENT__260B488F]
GO

ALTER TABLE [dbo].[IPIDENT] ADD PRIMARY KEY CLUSTERED 
(
	[IDIPIDENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[IRA]') AND name = N'PK__IRA__79F7BC27')
ALTER TABLE [dbo].[IRA] DROP CONSTRAINT [PK__IRA__79F7BC27]
GO

ALTER TABLE [dbo].[IRA] ADD PRIMARY KEY CLUSTERED 
(
	[IRAGODIDGODINE] ASC,
	[IRADOKIDDOKUMENT] ASC,
	[IRABROJ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[IRAVRSTAIZNOSA]') AND name = N'PK__IRAVRSTAIZNOSA__1C4CD42B')
ALTER TABLE [dbo].[IRAVRSTAIZNOSA] DROP CONSTRAINT [PK__IRAVRSTAIZNOSA__1C4CD42B]
GO

ALTER TABLE [dbo].[IRAVRSTAIZNOSA] ADD PRIMARY KEY CLUSTERED 
(
	[IDIRAVRSTAIZNOSA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[IZVORDOKUMENTA]') AND name = N'PK__IZVORDOKUMENTA__317CFB3B')
ALTER TABLE [dbo].[IZVORDOKUMENTA] DROP CONSTRAINT [PK__IZVORDOKUMENTA__317CFB3B]
GO

ALTER TABLE [dbo].[IZVORDOKUMENTA] ADD PRIMARY KEY CLUSTERED 
(
	[SIFRAIZVORA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[JEDINICAMJERE]') AND name = N'PK__JEDINICAMJERE__0EF2D90D')
ALTER TABLE [dbo].[JEDINICAMJERE] DROP CONSTRAINT [PK__JEDINICAMJERE__0EF2D90D]
GO

ALTER TABLE [dbo].[JEDINICAMJERE] ADD PRIMARY KEY CLUSTERED 
(
	[IDJEDINICAMJERE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[KONTO]') AND name = N'PK__KONTO__4A139EDB')
ALTER TABLE [dbo].[KONTO] DROP CONSTRAINT [PK__KONTO__4A139EDB]
GO

ALTER TABLE [dbo].[KONTO] ADD PRIMARY KEY CLUSTERED 
(
	[IDKONTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[KORISNIK]') AND name = N'PK__KORISNIK__5BA83F31')
ALTER TABLE [dbo].[KORISNIK] DROP CONSTRAINT [PK__KORISNIK__5BA83F31]
GO

ALTER TABLE [dbo].[KORISNIK] ADD PRIMARY KEY CLUSTERED 
(
	[IDKORISNIK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[KORISNIKLevel1]') AND name = N'PK__KORISNIKLevel1__336543AD')
ALTER TABLE [dbo].[KORISNIKLevel1] DROP CONSTRAINT [PK__KORISNIKLevel1__336543AD]
GO

ALTER TABLE [dbo].[KORISNIKLevel1] ADD PRIMARY KEY CLUSTERED 
(
	[IDKORISNIK] ASC,
	[IDZIRO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[KREDITOR]') AND name = N'PK__KREDITOR__1A9995E3')
ALTER TABLE [dbo].[KREDITOR] DROP CONSTRAINT [PK__KREDITOR__1A9995E3]
GO

ALTER TABLE [dbo].[KREDITOR] ADD PRIMARY KEY CLUSTERED 
(
	[IDKREDITOR] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[KRIZNIPOREZ]') AND name = N'PK__KRIZNIPOREZ__4A48A905')
ALTER TABLE [dbo].[KRIZNIPOREZ] DROP CONSTRAINT [PK__KRIZNIPOREZ__4A48A905]
GO

ALTER TABLE [dbo].[KRIZNIPOREZ] ADD PRIMARY KEY CLUSTERED 
(
	[IDKRIZNIPOREZ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[LOKACIJE]') AND name = N'PK__LOKACIJE__3CB9A3BD')
ALTER TABLE [dbo].[LOKACIJE] DROP CONSTRAINT [PK__LOKACIJE__3CB9A3BD]
GO

ALTER TABLE [dbo].[LOKACIJE] ADD PRIMARY KEY CLUSTERED 
(
	[IDLOKACIJE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[MJESTOTROSKA]') AND name = N'PK__MJESTOTROSKA__7BE00499')
ALTER TABLE [dbo].[MJESTOTROSKA] DROP CONSTRAINT [PK__MJESTOTROSKA__7BE00499]
GO

ALTER TABLE [dbo].[MJESTOTROSKA] ADD PRIMARY KEY CLUSTERED 
(
	[IDMJESTOTROSKA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[MZOSTABLICE]') AND name = N'PK__MZOSTABLICE__46781821')
ALTER TABLE [dbo].[MZOSTABLICE] DROP CONSTRAINT [PK__MZOSTABLICE__46781821]
GO

ALTER TABLE [dbo].[MZOSTABLICE] ADD PRIMARY KEY CLUSTERED 
(
	[IDMZOSTABLICE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OBRACUN]') AND name = N'PK__OBRACUN__5D9087A3')
ALTER TABLE [dbo].[OBRACUN] DROP CONSTRAINT [PK__OBRACUN__5D9087A3]
GO

ALTER TABLE [dbo].[OBRACUN] ADD PRIMARY KEY CLUSTERED 
(
	[IDOBRACUN] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ObracunDoprinosi]') AND name = N'PK__ObracunDoprinosi__61611887')
ALTER TABLE [dbo].[ObracunDoprinosi] DROP CONSTRAINT [PK__ObracunDoprinosi__61611887]
GO

ALTER TABLE [dbo].[ObracunDoprinosi] ADD PRIMARY KEY CLUSTERED 
(
	[IDOBRACUN] ASC,
	[IDRADNIK] ASC,
	[IDDOPRINOS] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ObracunElementi]') AND name = N'PK__ObracunElementi__2BC421E5')
ALTER TABLE [dbo].[ObracunElementi] DROP CONSTRAINT [PK__ObracunElementi__2BC421E5]
GO

ALTER TABLE [dbo].[ObracunElementi] ADD PRIMARY KEY CLUSTERED 
(
	[IDOBRACUN] ASC,
	[IDRADNIK] ASC,
	[IDELEMENT] ASC,
	[ELEMENTRAZDOBLJEOD] ASC,
	[ELEMENTRAZDOBLJEDO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OBRACUNKrediti]') AND name = N'PK__OBRACUNKrediti__2DAC6A57')
ALTER TABLE [dbo].[OBRACUNKrediti] DROP CONSTRAINT [PK__OBRACUNKrediti__2DAC6A57]
GO

ALTER TABLE [dbo].[OBRACUNKrediti] ADD PRIMARY KEY CLUSTERED 
(
	[IDOBRACUN] ASC,
	[IDRADNIK] ASC,
	[IDKREDITOR] ASC,
	[DATUMUGOVORA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OBRACUNOBRACUNLevel1ObracunKrizni]') AND name = N'PK__OBRACUNOBRACUNLe__4C30F177')
ALTER TABLE [dbo].[OBRACUNOBRACUNLevel1ObracunKrizni] DROP CONSTRAINT [PK__OBRACUNOBRACUNLe__4C30F177]
GO

ALTER TABLE [dbo].[OBRACUNOBRACUNLevel1ObracunKrizni] ADD PRIMARY KEY CLUSTERED 
(
	[IDOBRACUN] ASC,
	[IDRADNIK] ASC,
	[IDKRIZNIPOREZ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OBRACUNObustave]') AND name = N'PK__OBRACUNObustave__29DBD973')
ALTER TABLE [dbo].[OBRACUNObustave] DROP CONSTRAINT [PK__OBRACUNObustave__29DBD973]
GO

ALTER TABLE [dbo].[OBRACUNObustave] ADD PRIMARY KEY CLUSTERED 
(
	[IDOBRACUN] ASC,
	[IDRADNIK] ASC,
	[IDOBUSTAVA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ObracunOlaksice]') AND name = N'PK__ObracunOlaksice__6531A96B')
ALTER TABLE [dbo].[ObracunOlaksice] DROP CONSTRAINT [PK__ObracunOlaksice__6531A96B]
GO

ALTER TABLE [dbo].[ObracunOlaksice] ADD PRIMARY KEY CLUSTERED 
(
	[IDOBRACUN] ASC,
	[IDRADNIK] ASC,
	[IDOLAKSICE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ObracunPorezi]') AND name = N'PK__ObracunPorezi__634960F9')
ALTER TABLE [dbo].[ObracunPorezi] DROP CONSTRAINT [PK__ObracunPorezi__634960F9]
GO

ALTER TABLE [dbo].[ObracunPorezi] ADD PRIMARY KEY CLUSTERED 
(
	[IDOBRACUN] ASC,
	[IDRADNIK] ASC,
	[IDPOREZ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ObracunRadnici]') AND name = N'PK__ObracunRadnici__5F78D015')
ALTER TABLE [dbo].[ObracunRadnici] DROP CONSTRAINT [PK__ObracunRadnici__5F78D015]
GO

ALTER TABLE [dbo].[ObracunRadnici] ADD PRIMARY KEY CLUSTERED 
(
	[IDOBRACUN] ASC,
	[IDRADNIK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OBUSTAVA]') AND name = N'PK__OBUSTAVA__6719F1DD')
ALTER TABLE [dbo].[OBUSTAVA] DROP CONSTRAINT [PK__OBUSTAVA__6719F1DD]
GO

ALTER TABLE [dbo].[OBUSTAVA] ADD PRIMARY KEY CLUSTERED 
(
	[IDOBUSTAVA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OLAKSICE]') AND name = N'PK__OLAKSICE__69023A4F')
ALTER TABLE [dbo].[OLAKSICE] DROP CONSTRAINT [PK__OLAKSICE__69023A4F]
GO

ALTER TABLE [dbo].[OLAKSICE] ADD PRIMARY KEY CLUSTERED 
(
	[IDOLAKSICE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OPCINA]') AND name = N'PK__OPCINA__6AEA82C1')
ALTER TABLE [dbo].[OPCINA] DROP CONSTRAINT [PK__OPCINA__6AEA82C1]
GO

ALTER TABLE [dbo].[OPCINA] ADD PRIMARY KEY CLUSTERED 
(
	[IDOPCINE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ORGDIO]') AND name = N'PK__ORGDIO__6CD2CB33')
ALTER TABLE [dbo].[ORGDIO] DROP CONSTRAINT [PK__ORGDIO__6CD2CB33]
GO

ALTER TABLE [dbo].[ORGDIO] ADD PRIMARY KEY CLUSTERED 
(
	[IDORGDIO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ORGJED]') AND name = N'PK__ORGJED__7DC84D0B')
ALTER TABLE [dbo].[ORGJED] DROP CONSTRAINT [PK__ORGJED__7DC84D0B]
GO

ALTER TABLE [dbo].[ORGJED] ADD PRIMARY KEY CLUSTERED 
(
	[IDORGJED] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO





IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OSNOVAOSIGURANJA]') AND name = N'PK__OSNOVAOSIGURANJA__6EBB13A5')
ALTER TABLE [dbo].[OSNOVAOSIGURANJA] DROP CONSTRAINT [PK__OSNOVAOSIGURANJA__6EBB13A5]
GO

ALTER TABLE [dbo].[OSNOVAOSIGURANJA] ADD PRIMARY KEY CLUSTERED 
(
	[IDOSNOVAOSIGURANJA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OSOBNIODBITAK]') AND name = N'PK__OSOBNIODBITAK__70A35C17')
ALTER TABLE [dbo].[OSOBNIODBITAK] DROP CONSTRAINT [PK__OSOBNIODBITAK__70A35C17]
GO

ALTER TABLE [dbo].[OSOBNIODBITAK] ADD PRIMARY KEY CLUSTERED 
(
	[IDOSOBNIODBITAK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO




IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[PARTNER]') AND name = N'PK__PARTNER__7FB0957D')
ALTER TABLE [dbo].[PARTNER] DROP CONSTRAINT [PK__PARTNER__7FB0957D]
GO

ALTER TABLE [dbo].[PARTNER] ADD PRIMARY KEY CLUSTERED 
(
	[IDPARTNER] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[PARTNERZADUZENJE]') AND name = N'PK__PARTNERZADUZENJE__14ABB263')
ALTER TABLE [dbo].[PARTNERZADUZENJE] DROP CONSTRAINT [PK__PARTNERZADUZENJE__14ABB263]
GO

ALTER TABLE [dbo].[PARTNERZADUZENJE] ADD PRIMARY KEY CLUSTERED 
(
	[IDPARTNER] ASC,
	[IDZADUZENJE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[PLAN]') AND name = N'PK__PLAN__2B8F17BB')
ALTER TABLE [dbo].[PLAN] DROP CONSTRAINT [PK__PLAN__2B8F17BB]
GO

ALTER TABLE [dbo].[PLAN] ADD PRIMARY KEY CLUSTERED 
(
	[IDPLAN] ASC,
	[PLANGODINAIDGODINE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[PLANORG]') AND name = N'PK__PLANORG__2D77602D')
ALTER TABLE [dbo].[PLANORG] DROP CONSTRAINT [PK__PLANORG__2D77602D]
GO

ALTER TABLE [dbo].[PLANORG] ADD PRIMARY KEY CLUSTERED 
(
	[IDPLAN] ASC,
	[PLANGODINAIDGODINE] ASC,
	[PLANOJIDORGJED] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[PLANORGKON]') AND name = N'PK__PLANORGKON__2F5FA89F')
ALTER TABLE [dbo].[PLANORGKON] DROP CONSTRAINT [PK__PLANORGKON__2F5FA89F]
GO

ALTER TABLE [dbo].[PLANORGKON] ADD PRIMARY KEY CLUSTERED 
(
	[IDPLAN] ASC,
	[PLANGODINAIDGODINE] ASC,
	[PLANOJIDORGJED] ASC,
	[PLANKONTOIDKONTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[PLVRSTEIZNOSA]') AND name = N'PK__PLVRSTEIZNOSA__23EDF5F3')
ALTER TABLE [dbo].[PLVRSTEIZNOSA] DROP CONSTRAINT [PK__PLVRSTEIZNOSA__23EDF5F3]
GO

ALTER TABLE [dbo].[PLVRSTEIZNOSA] ADD PRIMARY KEY CLUSTERED 
(
	[IDPLVRSTEIZNOSA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[POREZ]') AND name = N'PK__POREZ__728BA489')
ALTER TABLE [dbo].[POREZ] DROP CONSTRAINT [PK__POREZ__728BA489]
GO

ALTER TABLE [dbo].[POREZ] ADD PRIMARY KEY CLUSTERED 
(
	[IDPOREZ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[PROIZVOD]') AND name = N'PK__PROIZVOD__0D0A909B')
ALTER TABLE [dbo].[PROIZVOD] DROP CONSTRAINT [PK__PROIZVOD__0D0A909B]
GO

ALTER TABLE [dbo].[PROIZVOD] ADD PRIMARY KEY CLUSTERED 
(
	[IDPROIZVOD] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[PRPLACE]') AND name = N'PK__PRPLACE__40BF3ECB')
ALTER TABLE [dbo].[PRPLACE] DROP CONSTRAINT [PK__PRPLACE__40BF3ECB]
GO

ALTER TABLE [dbo].[PRPLACE] ADD PRIMARY KEY CLUSTERED 
(
	[PRPLACEID] ASC,
	[PRPLACEZAMJESEC] ASC,
	[PRPLACEZAGODINU] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[PRPLACEPRPLACEELEMENTI]') AND name = N'PK__PRPLACEPRPLACEEL__42A7873D')
ALTER TABLE [dbo].[PRPLACEPRPLACEELEMENTI] DROP CONSTRAINT [PK__PRPLACEPRPLACEEL__42A7873D]
GO

ALTER TABLE [dbo].[PRPLACEPRPLACEELEMENTI] ADD PRIMARY KEY CLUSTERED 
(
	[PRPLACEID] ASC,
	[PRPLACEZAMJESEC] ASC,
	[PRPLACEZAGODINU] ASC,
	[IDELEMENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[PRPLACEPRPLACEELEMENTIRADNIK]') AND name = N'PK__PRPLACEPRPLACEEL__448FCFAF')
ALTER TABLE [dbo].[PRPLACEPRPLACEELEMENTIRADNIK] DROP CONSTRAINT [PK__PRPLACEPRPLACEEL__448FCFAF]
GO

ALTER TABLE [dbo].[PRPLACEPRPLACEELEMENTIRADNIK] ADD PRIMARY KEY CLUSTERED 
(
	[PRPLACEID] ASC,
	[PRPLACEZAMJESEC] ASC,
	[PRPLACEZAGODINU] ASC,
	[IDELEMENT] ASC,
	[IDRADNIK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RACUN]') AND name = N'PK__RACUN__10DB217F')
ALTER TABLE [dbo].[RACUN] DROP CONSTRAINT [PK__RACUN__10DB217F]
GO

ALTER TABLE [dbo].[RACUN] ADD PRIMARY KEY CLUSTERED 
(
	[IDRACUN] ASC,
	[RACUNGODINAIDGODINE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RACUNRacunStavke]') AND name = N'PK__RACUNRacunStavke__12C369F1')
ALTER TABLE [dbo].[RACUNRacunStavke] DROP CONSTRAINT [PK__RACUNRacunStavke__12C369F1]
GO

ALTER TABLE [dbo].[RACUNRacunStavke] ADD PRIMARY KEY CLUSTERED 
(
	[IDRACUN] ASC,
	[RACUNGODINAIDGODINE] ASC,
	[BROJSTAVKE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIK]') AND name = N'PK__RADNIK__7473ECFB')
ALTER TABLE [dbo].[RADNIK] DROP CONSTRAINT [PK__RADNIK__7473ECFB]
GO

ALTER TABLE [dbo].[RADNIK] ADD PRIMARY KEY CLUSTERED 
(
	[IDRADNIK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIKBruto]') AND name = N'PK__RADNIKBruto__1E6A26C7')
ALTER TABLE [dbo].[RADNIKBruto] DROP CONSTRAINT [PK__RADNIKBruto__1E6A26C7]
GO

ALTER TABLE [dbo].[RADNIKBruto] ADD PRIMARY KEY CLUSTERED 
(
	[IDRADNIK] ASC,
	[BRUTOELEMENTIDELEMENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIKKrediti]') AND name = N'PK__RADNIKKrediti__2F94B2C9')
ALTER TABLE [dbo].[RADNIKKrediti] DROP CONSTRAINT [PK__RADNIKKrediti__2F94B2C9]
GO

ALTER TABLE [dbo].[RADNIKKrediti] ADD PRIMARY KEY CLUSTERED 
(
	[IDRADNIK] ASC,
	[ZADKREDITIIDKREDITOR] ASC,
	[DATUMUGOVORA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIKLevel7]') AND name = N'PK__RADNIKLevel7__3B066575')
ALTER TABLE [dbo].[RADNIKLevel7] DROP CONSTRAINT [PK__RADNIKLevel7__3B066575]
GO

ALTER TABLE [dbo].[RADNIKLevel7] ADD PRIMARY KEY CLUSTERED 
(
	[IDRADNIK] ASC,
	[IDGRUPEKOEF] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIKNeto]') AND name = N'PK__RADNIKNeto__223AB7AB')
ALTER TABLE [dbo].[RADNIKNeto] DROP CONSTRAINT [PK__RADNIKNeto__223AB7AB]
GO

ALTER TABLE [dbo].[RADNIKNeto] ADD PRIMARY KEY CLUSTERED 
(
	[IDRADNIK] ASC,
	[NETOELEMENTIDELEMENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIKObustava]') AND name = N'PK__RADNIKObustava__27F39101')
ALTER TABLE [dbo].[RADNIKObustava] DROP CONSTRAINT [PK__RADNIKObustava__27F39101]
GO

ALTER TABLE [dbo].[RADNIKObustava] ADD PRIMARY KEY CLUSTERED 
(
	[IDRADNIK] ASC,
	[ZADOBUSTAVAIDOBUSTAVA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIKOdbitak]') AND name = N'PK__RADNIKOdbitak__765C356D')
ALTER TABLE [dbo].[RADNIKOdbitak] DROP CONSTRAINT [PK__RADNIKOdbitak__765C356D]
GO

ALTER TABLE [dbo].[RADNIKOdbitak] ADD PRIMARY KEY CLUSTERED 
(
	[IDRADNIK] ASC,
	[OSOBNIODBITAKZADUZENJEIDOSOBNIODBITAK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIKOlaksica]') AND name = N'PK__RADNIKOlaksica__78447DDF')
ALTER TABLE [dbo].[RADNIKOlaksica] DROP CONSTRAINT [PK__RADNIKOlaksica__78447DDF]
GO

ALTER TABLE [dbo].[RADNIKOlaksica] ADD PRIMARY KEY CLUSTERED 
(
	[IDRADNIK] ASC,
	[ZADOLAKSICEIDOLAKSICE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNOMJESTO]') AND name = N'PK__RADNOMJESTO__7A2CC651')
ALTER TABLE [dbo].[RADNOMJESTO] DROP CONSTRAINT [PK__RADNOMJESTO__7A2CC651]
GO

ALTER TABLE [dbo].[RADNOMJESTO] ADD PRIMARY KEY CLUSTERED 
(
	[IDRADNOMJESTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RSMA]') AND name = N'PK__RSMA__7C150EC3')
ALTER TABLE [dbo].[RSMA] DROP CONSTRAINT [PK__RSMA__7C150EC3]
GO

ALTER TABLE [dbo].[RSMA] ADD PRIMARY KEY CLUSTERED 
(
	[IDENTIFIKATOROBRASCA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RSMA1]') AND name = N'PK__RSMA1__7DFD5735')
ALTER TABLE [dbo].[RSMA1] DROP CONSTRAINT [PK__RSMA1__7DFD5735]
GO

ALTER TABLE [dbo].[RSMA1] ADD PRIMARY KEY CLUSTERED 
(
	[IDENTIFIKATOROBRASCA] ASC,
	[ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RSVRSTEOBRACUNA]') AND name = N'PK__RSVRSTEOBRACUNA__7FE59FA7')
ALTER TABLE [dbo].[RSVRSTEOBRACUNA] DROP CONSTRAINT [PK__RSVRSTEOBRACUNA__7FE59FA7]
GO

ALTER TABLE [dbo].[RSVRSTEOBRACUNA] ADD PRIMARY KEY CLUSTERED 
(
	[IDRSVRSTEOBRACUNA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RSVRSTEOBVEZNIKA]') AND name = N'PK__RSVRSTEOBVEZNIKA__01CDE819')
ALTER TABLE [dbo].[RSVRSTEOBVEZNIKA] DROP CONSTRAINT [PK__RSVRSTEOBVEZNIKA__01CDE819]
GO

ALTER TABLE [dbo].[RSVRSTEOBVEZNIKA] ADD PRIMARY KEY CLUSTERED 
(
	[IDRSVRSTEOBVEZNIKA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMADD]') AND name = N'PK__SHEMADD__33303983')
ALTER TABLE [dbo].[SHEMADD] DROP CONSTRAINT [PK__SHEMADD__33303983]
GO

ALTER TABLE [dbo].[SHEMADD] ADD PRIMARY KEY CLUSTERED 
(
	[IDSHEMADD] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMADDSHEMADDDOPRINOS]') AND name = N'PK__SHEMADDSHEMADDDO__3700CA67')
ALTER TABLE [dbo].[SHEMADDSHEMADDDOPRINOS] DROP CONSTRAINT [PK__SHEMADDSHEMADDDO__3700CA67]
GO

ALTER TABLE [dbo].[SHEMADDSHEMADDDOPRINOS] ADD PRIMARY KEY CLUSTERED 
(
	[IDSHEMADD] ASC,
	[SHEMADDDOPRINOSIDDOPRINOS] ASC,
	[KONTODOPIDKONTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMADDSHEMADDSTANDARD]') AND name = N'PK__SHEMADDSHEMADDST__38E912D9')
ALTER TABLE [dbo].[SHEMADDSHEMADDSTANDARD] DROP CONSTRAINT [PK__SHEMADDSHEMADDST__38E912D9]
GO

ALTER TABLE [dbo].[SHEMADDSHEMADDSTANDARD] ADD PRIMARY KEY CLUSTERED 
(
	[IDSHEMADD] ASC,
	[SHEMADDSTANDARDID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAIRA]') AND name = N'PK__SHEMAIRA__1E351C9D')
ALTER TABLE [dbo].[SHEMAIRA] DROP CONSTRAINT [PK__SHEMAIRA__1E351C9D]
GO

ALTER TABLE [dbo].[SHEMAIRA] ADD PRIMARY KEY CLUSTERED 
(
	[IDSHEMAIRA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAIRASHEMAIRAKONTIRANJE]') AND name = N'PK__SHEMAIRASHEMAIRA__201D650F')
ALTER TABLE [dbo].[SHEMAIRASHEMAIRAKONTIRANJE] DROP CONSTRAINT [PK__SHEMAIRASHEMAIRA__201D650F]
GO

ALTER TABLE [dbo].[SHEMAIRASHEMAIRAKONTIRANJE] ADD PRIMARY KEY CLUSTERED 
(
	[IDSHEMAIRA] ASC,
	[SHEMAIRAKONTOIDKONTO] ASC,
	[SHEMAIRASTRANEIDSTRANEKNJIZENJA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAPLACA]') AND name = N'PK__SHEMAPLACA__2205AD81')
ALTER TABLE [dbo].[SHEMAPLACA] DROP CONSTRAINT [PK__SHEMAPLACA__2205AD81]
GO

ALTER TABLE [dbo].[SHEMAPLACA] ADD PRIMARY KEY CLUSTERED 
(
	[IDSHEMAPLACA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAPLACASHEMAPLACADOP]') AND name = N'PK__SHEMAPLACASHEMAP__25D63E65')
ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACADOP] DROP CONSTRAINT [PK__SHEMAPLACASHEMAP__25D63E65]
GO

ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACADOP] ADD PRIMARY KEY CLUSTERED 
(
	[IDSHEMAPLACA] ASC,
	[SHEMAPLDOPIDDOPRINOS] ASC,
	[KONTODOPIDKONTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAPLACASHEMAPLACAELEMENT]') AND name = N'PK__SHEMAPLACASHEMAP__29A6CF49')
ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACAELEMENT] DROP CONSTRAINT [PK__SHEMAPLACASHEMAP__29A6CF49]
GO

ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACAELEMENT] ADD PRIMARY KEY CLUSTERED 
(
	[IDSHEMAPLACA] ASC,
	[SHEMAPLELEMENTIDELEMENT] ASC,
	[KONTOELEMENTIDKONTO] ASC,
	[STRANEELEMENTIDSTRANEKNJIZENJA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAPLACASHEMAPLACASTANDARD]') AND name = N'PK__SHEMAPLACASHEMAP__27BE86D7')
ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACASTANDARD] DROP CONSTRAINT [PK__SHEMAPLACASHEMAP__27BE86D7]
GO

ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACASTANDARD] ADD PRIMARY KEY CLUSTERED 
(
	[IDSHEMAPLACA] ASC,
	[SHEMAPLACASTANDARDID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAURA]') AND name = N'PK__SHEMAURA__1693FAD5')
ALTER TABLE [dbo].[SHEMAURA] DROP CONSTRAINT [PK__SHEMAURA__1693FAD5]
GO

ALTER TABLE [dbo].[SHEMAURA] ADD PRIMARY KEY CLUSTERED 
(
	[IDSHEMAURA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAURASHEMAURAKONTIRANJE]') AND name = N'PK__SHEMAURASHEMAURA__3147F111')
ALTER TABLE [dbo].[SHEMAURASHEMAURAKONTIRANJE] DROP CONSTRAINT [PK__SHEMAURASHEMAURA__3147F111]
GO

ALTER TABLE [dbo].[SHEMAURASHEMAURAKONTIRANJE] ADD PRIMARY KEY CLUSTERED 
(
	[IDSHEMAURA] ASC,
	[SHEMAURAKONTOIDKONTO] ASC,
	[SHEMAURASTRANEIDSTRANEKNJIZENJA] ASC,
	[IDURAVRSTAIZNOSA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SKUPPOREZAIDOPRINOSA]') AND name = N'PK__SKUPPOREZAIDOPRI__03B6308B')
ALTER TABLE [dbo].[SKUPPOREZAIDOPRINOSA] DROP CONSTRAINT [PK__SKUPPOREZAIDOPRI__03B6308B]
GO

ALTER TABLE [dbo].[SKUPPOREZAIDOPRINOSA] ADD PRIMARY KEY CLUSTERED 
(
	[IDSKUPPOREZAIDOPRINOSA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SKUPPOREZAIDOPRINOSA1]') AND name = N'PK__SKUPPOREZAIDOPRI__059E78FD')
ALTER TABLE [dbo].[SKUPPOREZAIDOPRINOSA1] DROP CONSTRAINT [PK__SKUPPOREZAIDOPRI__059E78FD]
GO

ALTER TABLE [dbo].[SKUPPOREZAIDOPRINOSA1] ADD PRIMARY KEY CLUSTERED 
(
	[IDSKUPPOREZAIDOPRINOSA] ASC,
	[IDPOREZ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SKUPPOREZAIDOPRINOSA2]') AND name = N'PK__SKUPPOREZAIDOPRI__0786C16F')
ALTER TABLE [dbo].[SKUPPOREZAIDOPRINOSA2] DROP CONSTRAINT [PK__SKUPPOREZAIDOPRI__0786C16F]
GO

ALTER TABLE [dbo].[SKUPPOREZAIDOPRINOSA2] ADD PRIMARY KEY CLUSTERED 
(
	[IDSKUPPOREZAIDOPRINOSA] ASC,
	[IDDOPRINOS] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SMJENE]') AND name = N'PK__SMJENE__3AD15B4B')
ALTER TABLE [dbo].[SMJENE] DROP CONSTRAINT [PK__SMJENE__3AD15B4B]
GO

ALTER TABLE [dbo].[SMJENE] ADD PRIMARY KEY CLUSTERED 
(
	[IDSMJENE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[sp_DISKETE_ZA_BANKU]') AND name = N'PK__sp_DISKETE_ZA_BA__38892026')
ALTER TABLE [dbo].[sp_DISKETE_ZA_BANKU] DROP CONSTRAINT [PK__sp_DISKETE_ZA_BA__38892026]
GO

ALTER TABLE [dbo].[sp_DISKETE_ZA_BANKU] ADD PRIMARY KEY CLUSTERED 
(
	[IDBANKE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SPOL]') AND name = N'PK__SPOL__2423001D')
ALTER TABLE [dbo].[SPOL] DROP CONSTRAINT [PK__SPOL__2423001D]
GO

ALTER TABLE [dbo].[SPOL] ADD PRIMARY KEY CLUSTERED 
(
	[IDSPOL] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[STRANEKNJIZENJA]') AND name = N'PK__STRANEKNJIZENJA__187C4347')
ALTER TABLE [dbo].[STRANEKNJIZENJA] DROP CONSTRAINT [PK__STRANEKNJIZENJA__187C4347]
GO

ALTER TABLE [dbo].[STRANEKNJIZENJA] ADD PRIMARY KEY CLUSTERED 
(
	[IDSTRANEKNJIZENJA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[STRUCNASPREMA]') AND name = N'PK__STRUCNASPREMA__096F09E1')
ALTER TABLE [dbo].[STRUCNASPREMA] DROP CONSTRAINT [PK__STRUCNASPREMA__096F09E1]
GO

ALTER TABLE [dbo].[STRUCNASPREMA] ADD PRIMARY KEY CLUSTERED 
(
	[IDSTRUCNASPREMA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[STRUKA]') AND name = N'PK__STRUKA__0B575253')
ALTER TABLE [dbo].[STRUKA] DROP CONSTRAINT [PK__STRUKA__0B575253]
GO

ALTER TABLE [dbo].[STRUKA] ADD PRIMARY KEY CLUSTERED 
(
	[IDSTRUKA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[TIPDOKUMENTA]') AND name = N'PK__TIPDOKUMENTA__0198DDEF')
ALTER TABLE [dbo].[TIPDOKUMENTA] DROP CONSTRAINT [PK__TIPDOKUMENTA__0198DDEF]
GO

ALTER TABLE [dbo].[TIPDOKUMENTA] ADD PRIMARY KEY CLUSTERED 
(
	[IDTIPDOKUMENTA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[TIPIRA]') AND name = N'PK__TIPIRA__03812661')
ALTER TABLE [dbo].[TIPIRA] DROP CONSTRAINT [PK__TIPIRA__03812661]
GO

ALTER TABLE [dbo].[TIPIRA] ADD PRIMARY KEY CLUSTERED 
(
	[IDTIPIRA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[TIPIZNOSA]') AND name = N'PK__TIPIZNOSA__0D3F9AC5')
ALTER TABLE [dbo].[TIPIZNOSA] DROP CONSTRAINT [PK__TIPIZNOSA__0D3F9AC5]
GO

ALTER TABLE [dbo].[TIPIZNOSA] ADD PRIMARY KEY CLUSTERED 
(
	[IDTIPAIZNOSA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[TIPOLAKSICE]') AND name = N'PK__TIPOLAKSICE__0F27E337')
ALTER TABLE [dbo].[TIPOLAKSICE] DROP CONSTRAINT [PK__TIPOLAKSICE__0F27E337]
GO

ALTER TABLE [dbo].[TIPOLAKSICE] ADD PRIMARY KEY CLUSTERED 
(
	[IDTIPOLAKSICE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[TIPURA]') AND name = N'PK__TIPURA__05696ED3')
ALTER TABLE [dbo].[TIPURA] DROP CONSTRAINT [PK__TIPURA__05696ED3]
GO

ALTER TABLE [dbo].[TIPURA] ADD PRIMARY KEY CLUSTERED 
(
	[IDTIPURA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[TITULA]') AND name = N'PK__TITULA__11102BA9')
ALTER TABLE [dbo].[TITULA] DROP CONSTRAINT [PK__TITULA__11102BA9]
GO

ALTER TABLE [dbo].[TITULA] ADD PRIMARY KEY CLUSTERED 
(
	[IDTITULA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[UGOVORORADU]') AND name = N'PK__UGOVORORADU__4FCC7831')
ALTER TABLE [dbo].[UGOVORORADU] DROP CONSTRAINT [PK__UGOVORORADU__4FCC7831]
GO

ALTER TABLE [dbo].[UGOVORORADU] ADD PRIMARY KEY CLUSTERED 
(
	[IDUGOVORORADU] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[URA]') AND name = N'PK__URA__0751B745')
ALTER TABLE [dbo].[URA] DROP CONSTRAINT [PK__URA__0751B745]
GO

ALTER TABLE [dbo].[URA] ADD PRIMARY KEY CLUSTERED 
(
	[URAGODIDGODINE] ASC,
	[URADOKIDDOKUMENT] ASC,
	[URABROJ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[URAVRSTAIZNOSA]') AND name = N'PK__URAVRSTAIZNOSA__1A648BB9')
ALTER TABLE [dbo].[URAVRSTAIZNOSA] DROP CONSTRAINT [PK__URAVRSTAIZNOSA__1A648BB9]
GO

ALTER TABLE [dbo].[URAVRSTAIZNOSA] ADD PRIMARY KEY CLUSTERED 
(
	[IDURAVRSTAIZNOSA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[VALUTE]') AND name = N'PK__VALUTE__12F8741B')
ALTER TABLE [dbo].[VALUTE] DROP CONSTRAINT [PK__VALUTE__12F8741B]
GO

ALTER TABLE [dbo].[VALUTE] ADD PRIMARY KEY CLUSTERED 
(
	[IDVALUTA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[VERZIJA]') AND name = N'PK__VERZIJA__354D8C1F')
ALTER TABLE [dbo].[VERZIJA] DROP CONSTRAINT [PK__VERZIJA__354D8C1F]
GO

ALTER TABLE [dbo].[VERZIJA] ADD PRIMARY KEY CLUSTERED 
(
	[IDVERZIJA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[VIRMANI]') AND name = N'PK__VIRMANI__14E0BC8D')
ALTER TABLE [dbo].[VIRMANI] DROP CONSTRAINT [PK__VIRMANI__14E0BC8D]
GO

ALTER TABLE [dbo].[VIRMANI] ADD PRIMARY KEY CLUSTERED 
(
	[IDVIRMAN] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[VRSTADOPRINOS]') AND name = N'PK__VRSTADOPRINOS__16C904FF')
ALTER TABLE [dbo].[VRSTADOPRINOS] DROP CONSTRAINT [PK__VRSTADOPRINOS__16C904FF]
GO

ALTER TABLE [dbo].[VRSTADOPRINOS] ADD PRIMARY KEY CLUSTERED 
(
	[IDVRSTADOPRINOS] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[VRSTAELEMENT]') AND name = N'PK__VRSTAELEMENT__20526F39')
ALTER TABLE [dbo].[VRSTAELEMENT] DROP CONSTRAINT [PK__VRSTAELEMENT__20526F39]
GO

ALTER TABLE [dbo].[VRSTAELEMENT] ADD PRIMARY KEY CLUSTERED 
(
	[IDVRSTAELEMENTA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[VRSTEOBUSTAVA]') AND name = N'PK__VRSTEOBUSTAVA__18B14D71')
ALTER TABLE [dbo].[VRSTEOBUSTAVA] DROP CONSTRAINT [PK__VRSTEOBUSTAVA__18B14D71]
GO

ALTER TABLE [dbo].[VRSTEOBUSTAVA] ADD PRIMARY KEY CLUSTERED 
(
	[VRSTAOBUSTAVE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ZATVARANJA]') AND name = N'PK__ZATVARANJA__0939FFB7')
ALTER TABLE [dbo].[ZATVARANJA] DROP CONSTRAINT [PK__ZATVARANJA__0939FFB7]
GO

ALTER TABLE [dbo].[ZATVARANJA] ADD PRIMARY KEY CLUSTERED 
(
	[GK1IDGKSTAVKA] ASC,
	[GK2IDGKSTAVKA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO




-- Kraj primary keys

-- Pocetak indeksi


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[UCENIK]') AND name = N'IUCENIK1')
DROP INDEX [IUCENIK1] ON [dbo].[UCENIK] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IUCENIK1] ON [dbo].[UCENIK] 
(
	[POSTANSKIBROJ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[UCENIKOBRACUNUCENIKOBRACUNDETAIL]') AND name = N'IUCENIKOBRACUNUCENIKOBRACUNDE1')
DROP INDEX [IUCENIKOBRACUNUCENIKOBRACUNDE1] ON [dbo].[UCENIKOBRACUNUCENIKOBRACUNDETAIL] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IUCENIKOBRACUNUCENIKOBRACUNDE1] ON [dbo].[UCENIKOBRACUNUCENIKOBRACUNDETAIL] 
(
	[IDUCENIK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO





IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RAD1VEZASPOL]') AND name = N'IRAD1VEZASPOL1')
DROP INDEX [IRAD1VEZASPOL1] ON [dbo].[RAD1VEZASPOL] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRAD1VEZASPOL1] ON [dbo].[RAD1VEZASPOL] 
(
	[IDSPOL] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RAD1GELEMENTIVEZA]') AND name = N'IRAD1GELEMENTIVEZA1')
DROP INDEX [IRAD1GELEMENTIVEZA1] ON [dbo].[RAD1GELEMENTIVEZA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRAD1GELEMENTIVEZA1] ON [dbo].[RAD1GELEMENTIVEZA] 
(
	[IDELEMENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RAD1MELEMENTIVEZA]') AND name = N'IRAD1MELEMENTIVEZA1')
DROP INDEX [IRAD1MELEMENTIVEZA1] ON [dbo].[RAD1MELEMENTIVEZA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRAD1MELEMENTIVEZA1] ON [dbo].[RAD1MELEMENTIVEZA] 
(
	[IDELEMENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO
IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RAD1SPREMEVEZA]') AND name = N'IRAD1SPREMEVEZA1')
DROP INDEX [IRAD1SPREMEVEZA1] ON [dbo].[RAD1SPREMEVEZA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRAD1SPREMEVEZA1] ON [dbo].[RAD1SPREMEVEZA] 
(
	[IDSTRUCNASPREMA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO



IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OSTEMELJNICA]') AND name = N'IOSTEMELJNICA2')
DROP INDEX [IOSTEMELJNICA2] ON [dbo].[OSTEMELJNICA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IOSTEMELJNICA2] ON [dbo].[OSTEMELJNICA] 
(
	[RASHODLOKACIJEIDLOKACIJE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO



IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OSTEMELJNICA]') AND name = N'IOSTEMELJNICA1')
DROP INDEX [IOSTEMELJNICA1] ON [dbo].[OSTEMELJNICA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IOSTEMELJNICA1] ON [dbo].[OSTEMELJNICA] 
(
	[IDOSDOKUMENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OSRAZMJESTAJ]') AND name = N'IOSRAZMJESTAJ2')
DROP INDEX [IOSRAZMJESTAJ2] ON [dbo].[OSRAZMJESTAJ] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IOSRAZMJESTAJ2] ON [dbo].[OSRAZMJESTAJ] 
(
	[IDLOKACIJE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OSRAZMJESTAJ]') AND name = N'IOSRAZMJESTAJ1')
DROP INDEX [IOSRAZMJESTAJ1] ON [dbo].[OSRAZMJESTAJ] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IOSRAZMJESTAJ1] ON [dbo].[OSRAZMJESTAJ] 
(
	[INVBROJ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OS]') AND name = N'IOS2')
DROP INDEX [IOS2] ON [dbo].[OS] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IOS2] ON [dbo].[OS] 
(
	[IDOSVRSTA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO



IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OS]') AND name = N'IOS1')
DROP INDEX [IOS1] ON [dbo].[OS] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IOS1] ON [dbo].[OS] 
(
	[IDAMSKUPINE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[AMSKUPINE]') AND name = N'IAMSKUPINE3')
DROP INDEX [IAMSKUPINE3] ON [dbo].[AMSKUPINE] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IAMSKUPINE3] ON [dbo].[AMSKUPINE] 
(
	[KTOIZVORAIDKONTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO



IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[AMSKUPINE]') AND name = N'IAMSKUPINE2')
DROP INDEX [IAMSKUPINE2] ON [dbo].[AMSKUPINE] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IAMSKUPINE2] ON [dbo].[AMSKUPINE] 
(
	[KTOISPRAVKAIDKONTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO



IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[AMSKUPINE]') AND name = N'IAMSKUPINE1')
DROP INDEX [IAMSKUPINE1] ON [dbo].[AMSKUPINE] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IAMSKUPINE1] ON [dbo].[AMSKUPINE] 
(
	[KTONABAVKEIDKONTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO



IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[AMSKUPINE]') AND name = N'IAMSKUPINE1')
DROP INDEX [IAMSKUPINE1] ON [dbo].[AMSKUPINE] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IAMSKUPINE1] ON [dbo].[AMSKUPINE] 
(
	[KTONABAVKEIDKONTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[AMSKUPINE]') AND name = N'IAMSKUPINE2')
DROP INDEX [IAMSKUPINE2] ON [dbo].[AMSKUPINE] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IAMSKUPINE2] ON [dbo].[AMSKUPINE] 
(
	[KTOISPRAVKAIDKONTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[AMSKUPINE]') AND name = N'IAMSKUPINE3')
DROP INDEX [IAMSKUPINE3] ON [dbo].[AMSKUPINE] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IAMSKUPINE3] ON [dbo].[AMSKUPINE] 
(
	[KTOIZVORAIDKONTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[BLAGAJNA]') AND name = N'IBLAGAJNA1')
DROP INDEX [IBLAGAJNA1] ON [dbo].[BLAGAJNA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IBLAGAJNA1] ON [dbo].[BLAGAJNA] 
(
	[BLGKONTOIDKONTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[BLAGAJNAStavkeBlagajne]') AND name = N'IBLAGAJNAStavkeBlagajne1')
DROP INDEX [IBLAGAJNAStavkeBlagajne1] ON [dbo].[BLAGAJNAStavkeBlagajne] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IBLAGAJNAStavkeBlagajne1] ON [dbo].[BLAGAJNAStavkeBlagajne] 
(
	[blggodineIDGODINE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[BLAGAJNAStavkeBlagajne]') AND name = N'IBLAGAJNAStavkeBlagajne2')
DROP INDEX [IBLAGAJNAStavkeBlagajne2] ON [dbo].[BLAGAJNAStavkeBlagajne] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IBLAGAJNAStavkeBlagajne2] ON [dbo].[BLAGAJNAStavkeBlagajne] 
(
	[IDBLGVRSTEDOK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje]') AND name = N'IBLAGAJNAStavkeBlagajneStavke1')
DROP INDEX [IBLAGAJNAStavkeBlagajneStavke1] ON [dbo].[BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IBLAGAJNAStavkeBlagajneStavke1] ON [dbo].[BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje] 
(
	[BLGORGJEDIDORGJED] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje]') AND name = N'IBLAGAJNAStavkeBlagajneStavke2')
DROP INDEX [IBLAGAJNAStavkeBlagajneStavke2] ON [dbo].[BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IBLAGAJNAStavkeBlagajneStavke2] ON [dbo].[BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje] 
(
	[BLGMTIDMJESTOTROSKA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje]') AND name = N'IBLAGAJNAStavkeBlagajneStavke3')
DROP INDEX [IBLAGAJNAStavkeBlagajneStavke3] ON [dbo].[BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IBLAGAJNAStavkeBlagajneStavke3] ON [dbo].[BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje] 
(
	[BLGSTAVKEBLAGAJNEKONTOIDKONTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDKATEGORIJA]') AND name = N'IDDKATEGORIJA1')
DROP INDEX [IDDKATEGORIJA1] ON [dbo].[DDKATEGORIJA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IDDKATEGORIJA1] ON [dbo].[DDKATEGORIJA] 
(
	[IDKOLONAIDD] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDKATEGORIJAIzdaci]') AND name = N'IDDKATEGORIJAIzdaci1')
DROP INDEX [IDDKATEGORIJAIzdaci1] ON [dbo].[DDKATEGORIJAIzdaci] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IDDKATEGORIJAIzdaci1] ON [dbo].[DDKATEGORIJAIzdaci] 
(
	[DDIDIZDATAK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDKATEGORIJALevel1]') AND name = N'IDDKATEGORIJALevel11')
DROP INDEX [IDDKATEGORIJALevel11] ON [dbo].[DDKATEGORIJALevel1] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IDDKATEGORIJALevel11] ON [dbo].[DDKATEGORIJALevel1] 
(
	[IDPOREZ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDKATEGORIJALevel3]') AND name = N'IDDKATEGORIJALevel31')
DROP INDEX [IDDKATEGORIJALevel31] ON [dbo].[DDKATEGORIJALevel3] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IDDKATEGORIJALevel31] ON [dbo].[DDKATEGORIJALevel3] 
(
	[IDDOPRINOS] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDOBRACUNRadnici]') AND name = N'IDDOBRACUNRadnici1')
DROP INDEX [IDDOBRACUNRadnici1] ON [dbo].[DDOBRACUNRadnici] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IDDOBRACUNRadnici1] ON [dbo].[DDOBRACUNRadnici] 
(
	[DDIDRADNIK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDOBRACUNRadnici]') AND name = N'IDDOBRACUNRadnici3')
DROP INDEX [IDDOBRACUNRadnici3] ON [dbo].[DDOBRACUNRadnici] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IDDOBRACUNRadnici3] ON [dbo].[DDOBRACUNRadnici] 
(
	[IDKATEGORIJA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDOBRACUNRadniciDDKrizniPorez]') AND name = N'IDDOBRACUNRadniciDDKrizniPore1')
DROP INDEX [IDDOBRACUNRadniciDDKrizniPore1] ON [dbo].[DDOBRACUNRadniciDDKrizniPorez] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IDDOBRACUNRadniciDDKrizniPore1] ON [dbo].[DDOBRACUNRadniciDDKrizniPorez] 
(
	[IDKRIZNIPOREZ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDOBRACUNRadniciDoprinosi]') AND name = N'IDDOBRACUNRadniciDoprinosi1')
DROP INDEX [IDDOBRACUNRadniciDoprinosi1] ON [dbo].[DDOBRACUNRadniciDoprinosi] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IDDOBRACUNRadniciDoprinosi1] ON [dbo].[DDOBRACUNRadniciDoprinosi] 
(
	[IDDOPRINOS] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDOBRACUNRadniciIzdaci]') AND name = N'IDDOBRACUNRadniciIzdaci1')
DROP INDEX [IDDOBRACUNRadniciIzdaci1] ON [dbo].[DDOBRACUNRadniciIzdaci] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IDDOBRACUNRadniciIzdaci1] ON [dbo].[DDOBRACUNRadniciIzdaci] 
(
	[DDIDIZDATAK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDOBRACUNRadniciPorezi]') AND name = N'IDDOBRACUNRadniciPorezi1')
DROP INDEX [IDDOBRACUNRadniciPorezi1] ON [dbo].[DDOBRACUNRadniciPorezi] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IDDOBRACUNRadniciPorezi1] ON [dbo].[DDOBRACUNRadniciPorezi] 
(
	[IDPOREZ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDOBRACUNRadniciVrstePosla]') AND name = N'IDDOBRACUNRadniciVrstePosla1')
DROP INDEX [IDDOBRACUNRadniciVrstePosla1] ON [dbo].[DDOBRACUNRadniciVrstePosla] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IDDOBRACUNRadniciVrstePosla1] ON [dbo].[DDOBRACUNRadniciVrstePosla] 
(
	[DDIDVRSTAPOSLA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDRADNIK]') AND name = N'IDDRADNIK1')
DROP INDEX [IDDRADNIK1] ON [dbo].[DDRADNIK] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IDDRADNIK1] ON [dbo].[DDRADNIK] 
(
	[OPCINARADAIDOPCINE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDRADNIK]') AND name = N'IDDRADNIK2')
DROP INDEX [IDDRADNIK2] ON [dbo].[DDRADNIK] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IDDRADNIK2] ON [dbo].[DDRADNIK] 
(
	[OPCINASTANOVANJAIDOPCINE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DDRADNIK]') AND name = N'IDDRADNIK3')
DROP INDEX [IDDRADNIK3] ON [dbo].[DDRADNIK] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IDDRADNIK3] ON [dbo].[DDRADNIK] 
(
	[IDBANKE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DOKUMENT]') AND name = N'IDOKUMENT1')
DROP INDEX [IDOKUMENT1] ON [dbo].[DOKUMENT] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IDOKUMENT1] ON [dbo].[DOKUMENT] 
(
	[IDTIPDOKUMENTA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[DOPRINOS]') AND name = N'IDOPRINOS1')
DROP INDEX [IDOPRINOS1] ON [dbo].[DOPRINOS] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IDOPRINOS1] ON [dbo].[DOPRINOS] 
(
	[IDVRSTADOPRINOS] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ELEMENT]') AND name = N'IELEMENT1')
DROP INDEX [IELEMENT1] ON [dbo].[ELEMENT] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IELEMENT1] ON [dbo].[ELEMENT] 
(
	[IDOSNOVAOSIGURANJA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ELEMENT]') AND name = N'IELEMENT2')
DROP INDEX [IELEMENT2] ON [dbo].[ELEMENT] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IELEMENT2] ON [dbo].[ELEMENT] 
(
	[IDVRSTAELEMENTA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[EVIDENCIJA]') AND name = N'IEVIDENCIJA1')
DROP INDEX [IEVIDENCIJA1] ON [dbo].[EVIDENCIJA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IEVIDENCIJA1] ON [dbo].[EVIDENCIJA] 
(
	[IDGODINE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[EVIDENCIJARADNICI]') AND name = N'IEVIDENCIJARADNICI1')
DROP INDEX [IEVIDENCIJARADNICI1] ON [dbo].[EVIDENCIJARADNICI] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IEVIDENCIJARADNICI1] ON [dbo].[EVIDENCIJARADNICI] 
(
	[IDRADNIK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[EVIDENCIJARADNICISATI]') AND name = N'IEVIDENCIJARADNICISATI1')
DROP INDEX [IEVIDENCIJARADNICISATI1] ON [dbo].[EVIDENCIJARADNICISATI] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IEVIDENCIJARADNICISATI1] ON [dbo].[EVIDENCIJARADNICISATI] 
(
	[PRVASMJENAIDSMJENE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[EVIDENCIJARADNICISATI]') AND name = N'IEVIDENCIJARADNICISATI2')
DROP INDEX [IEVIDENCIJARADNICISATI2] ON [dbo].[EVIDENCIJARADNICISATI] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IEVIDENCIJARADNICISATI2] ON [dbo].[EVIDENCIJARADNICISATI] 
(
	[DRUGASMJENAIDSMJENE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[GKSTAVKA]') AND name = N'IGK')
DROP INDEX [IGK] ON [dbo].[GKSTAVKA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IGK] ON [dbo].[GKSTAVKA] 
(
	[IDDOKUMENT] ASC,
	[BROJDOKUMENTA] ASC,
	[GKGODIDGODINE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[GKSTAVKA]') AND name = N'IGKSTAVKA1')
DROP INDEX [IGKSTAVKA1] ON [dbo].[GKSTAVKA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IGKSTAVKA1] ON [dbo].[GKSTAVKA] 
(
	[IDPARTNER] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[GKSTAVKA]') AND name = N'IGKSTAVKA2')
DROP INDEX [IGKSTAVKA2] ON [dbo].[GKSTAVKA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IGKSTAVKA2] ON [dbo].[GKSTAVKA] 
(
	[GKGODIDGODINE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[GKSTAVKA]') AND name = N'IGKSTAVKA3')
DROP INDEX [IGKSTAVKA3] ON [dbo].[GKSTAVKA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IGKSTAVKA3] ON [dbo].[GKSTAVKA] 
(
	[IDORGJED] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[GKSTAVKA]') AND name = N'IGKSTAVKA4')
DROP INDEX [IGKSTAVKA4] ON [dbo].[GKSTAVKA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IGKSTAVKA4] ON [dbo].[GKSTAVKA] 
(
	[IDKONTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[GKSTAVKA]') AND name = N'IGKSTAVKA7')
DROP INDEX [IGKSTAVKA7] ON [dbo].[GKSTAVKA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IGKSTAVKA7] ON [dbo].[GKSTAVKA] 
(
	[BROJSTAVKE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[GKSTAVKA]') AND name = N'IGKSTAVKA8')
DROP INDEX [IGKSTAVKA8] ON [dbo].[GKSTAVKA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IGKSTAVKA8] ON [dbo].[GKSTAVKA] 
(
	[IDMJESTOTROSKA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[GOOBRACUN]') AND name = N'IGOOBRACUN1')
DROP INDEX [IGOOBRACUN1] ON [dbo].[GOOBRACUN] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IGOOBRACUN1] ON [dbo].[GOOBRACUN] 
(
	[IDRADNIK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[GRUPEKOEFLevel1]') AND name = N'IGRUPEKOEFLevel11')
DROP INDEX [IGRUPEKOEFLevel11] ON [dbo].[GRUPEKOEFLevel1] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IGRUPEKOEFLevel11] ON [dbo].[GRUPEKOEFLevel1] 
(
	[IDELEMENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[GRUPEKOEFLevel1]') AND name = N'IGRUPEKOEFLevel13')
DROP INDEX [IGRUPEKOEFLevel13] ON [dbo].[GRUPEKOEFLevel1] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IGRUPEKOEFLevel13] ON [dbo].[GRUPEKOEFLevel1] 
(
	[IDMZOSTABLICE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[IRA]') AND name = N'IIRA1')
DROP INDEX [IIRA1] ON [dbo].[IRA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IIRA1] ON [dbo].[IRA] 
(
	[IRAPARTNERIDPARTNER] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[IRA]') AND name = N'IIRA2')
DROP INDEX [IIRA2] ON [dbo].[IRA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IIRA2] ON [dbo].[IRA] 
(
	[IRADOKIDDOKUMENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[IRA]') AND name = N'IIRA4')
DROP INDEX [IIRA4] ON [dbo].[IRA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IIRA4] ON [dbo].[IRA] 
(
	[IDTIPIRA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[KONTO]') AND name = N'IKONTO1')
DROP INDEX [IKONTO1] ON [dbo].[KONTO] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IKONTO1] ON [dbo].[KONTO] 
(
	[IDAKTIVNOST] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[KORISNIKLevel1]') AND name = N'IKORISNIKLevel11')
DROP INDEX [IKORISNIKLevel11] ON [dbo].[KORISNIKLevel1] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IKORISNIKLevel11] ON [dbo].[KORISNIKLevel1] 
(
	[SIFRAIZVORA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ObracunDoprinosi]') AND name = N'IOBRACUN31')
DROP INDEX [IOBRACUN31] ON [dbo].[ObracunDoprinosi] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IOBRACUN31] ON [dbo].[ObracunDoprinosi] 
(
	[IDDOPRINOS] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ObracunElementi]') AND name = N'IOBRACUNOBRACUNLevel1Elementi1')
DROP INDEX [IOBRACUNOBRACUNLevel1Elementi1] ON [dbo].[ObracunElementi] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IOBRACUNOBRACUNLevel1Elementi1] ON [dbo].[ObracunElementi] 
(
	[IDELEMENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OBRACUNKrediti]') AND name = N'IOBRACUNKrediti')
DROP INDEX [IOBRACUNKrediti] ON [dbo].[OBRACUNKrediti] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IOBRACUNKrediti] ON [dbo].[OBRACUNKrediti] 
(
	[IDKREDITOR] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OBRACUNOBRACUNLevel1ObracunKrizni]') AND name = N'IOBRACUNOBRACUNLevel1ObracunK3')
DROP INDEX [IOBRACUNOBRACUNLevel1ObracunK3] ON [dbo].[OBRACUNOBRACUNLevel1ObracunKrizni] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IOBRACUNOBRACUNLevel1ObracunK3] ON [dbo].[OBRACUNOBRACUNLevel1ObracunKrizni] 
(
	[IDKRIZNIPOREZ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OBRACUNObustave]') AND name = N'IOBRACUNOBRACUNLevel1Level111')
DROP INDEX [IOBRACUNOBRACUNLevel1Level111] ON [dbo].[OBRACUNObustave] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IOBRACUNOBRACUNLevel1Level111] ON [dbo].[OBRACUNObustave] 
(
	[IDOBUSTAVA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ObracunOlaksice]') AND name = N'IOBRACUN61')
DROP INDEX [IOBRACUN61] ON [dbo].[ObracunOlaksice] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IOBRACUN61] ON [dbo].[ObracunOlaksice] 
(
	[IDOLAKSICE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ObracunPorezi]') AND name = N'IOBRACUN41')
DROP INDEX [IOBRACUN41] ON [dbo].[ObracunPorezi] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IOBRACUN41] ON [dbo].[ObracunPorezi] 
(
	[IDPOREZ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ObracunRadnici]') AND name = N'IOBRACUN12')
DROP INDEX [IOBRACUN12] ON [dbo].[ObracunRadnici] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IOBRACUN12] ON [dbo].[ObracunRadnici] 
(
	[IDRADNIK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OBUSTAVA]') AND name = N'IOBUSTAVA1')
DROP INDEX [IOBUSTAVA1] ON [dbo].[OBUSTAVA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IOBUSTAVA1] ON [dbo].[OBUSTAVA] 
(
	[VRSTAOBUSTAVE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OLAKSICE]') AND name = N'IOLAKSICE1')
DROP INDEX [IOLAKSICE1] ON [dbo].[OLAKSICE] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IOLAKSICE1] ON [dbo].[OLAKSICE] 
(
	[IDTIPOLAKSICE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OLAKSICE]') AND name = N'IOLAKSICE2')
DROP INDEX [IOLAKSICE2] ON [dbo].[OLAKSICE] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IOLAKSICE2] ON [dbo].[OLAKSICE] 
(
	[IDGRUPEOLAKSICA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[OSNOVAOSIGURANJA]') AND name = N'IOSNOVAOSIGURANJA1')
DROP INDEX [IOSNOVAOSIGURANJA1] ON [dbo].[OSNOVAOSIGURANJA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IOSNOVAOSIGURANJA1] ON [dbo].[OSNOVAOSIGURANJA] 
(
	[ZAMOOIDOSNOVAOSIGURANJA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[PARTNERZADUZENJE]') AND name = N'IPARTNERZADUZENJE1')
DROP INDEX [IPARTNERZADUZENJE1] ON [dbo].[PARTNERZADUZENJE] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IPARTNERZADUZENJE1] ON [dbo].[PARTNERZADUZENJE] 
(
	[IDPROIZVOD] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[PLAN]') AND name = N'IPLAN1')
DROP INDEX [IPLAN1] ON [dbo].[PLAN] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IPLAN1] ON [dbo].[PLAN] 
(
	[PLANGODINAIDGODINE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[PLANORG]') AND name = N'IPLANORG1')
DROP INDEX [IPLANORG1] ON [dbo].[PLANORG] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IPLANORG1] ON [dbo].[PLANORG] 
(
	[PLANOJIDORGJED] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[PLANORGKON]') AND name = N'IPLANORGKON1')
DROP INDEX [IPLANORGKON1] ON [dbo].[PLANORGKON] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IPLANORGKON1] ON [dbo].[PLANORGKON] 
(
	[PLANKONTOIDKONTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[PROIZVOD]') AND name = N'IPROIZVOD1')
DROP INDEX [IPROIZVOD1] ON [dbo].[PROIZVOD] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IPROIZVOD1] ON [dbo].[PROIZVOD] 
(
	[FINPOREZIDPOREZ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[PROIZVOD]') AND name = N'IPROIZVOD2')
DROP INDEX [IPROIZVOD2] ON [dbo].[PROIZVOD] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IPROIZVOD2] ON [dbo].[PROIZVOD] 
(
	[IDJEDINICAMJERE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[PRPLACEPRPLACEELEMENTI]') AND name = N'IPRPLACEPRPLACEELEMENTI1')
DROP INDEX [IPRPLACEPRPLACEELEMENTI1] ON [dbo].[PRPLACEPRPLACEELEMENTI] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IPRPLACEPRPLACEELEMENTI1] ON [dbo].[PRPLACEPRPLACEELEMENTI] 
(
	[IDELEMENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[PRPLACEPRPLACEELEMENTIRADNIK]') AND name = N'IPRPLACEPRPLACEELEMENTIRADNIK1')
DROP INDEX [IPRPLACEPRPLACEELEMENTIRADNIK1] ON [dbo].[PRPLACEPRPLACEELEMENTIRADNIK] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IPRPLACEPRPLACEELEMENTIRADNIK1] ON [dbo].[PRPLACEPRPLACEELEMENTIRADNIK] 
(
	[IDRADNIK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RACUN]') AND name = N'IRACUN1')
DROP INDEX [IRACUN1] ON [dbo].[RACUN] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRACUN1] ON [dbo].[RACUN] 
(
	[RACUNGODINAIDGODINE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RACUN]') AND name = N'IRACUN2')
DROP INDEX [IRACUN2] ON [dbo].[RACUN] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRACUN2] ON [dbo].[RACUN] 
(
	[IDPARTNER] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RACUNRacunStavke]') AND name = N'IRACUNRacunStavke1')
DROP INDEX [IRACUNRacunStavke1] ON [dbo].[RACUNRacunStavke] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRACUNRacunStavke1] ON [dbo].[RACUNRacunStavke] 
(
	[IDPROIZVOD] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIK]') AND name = N'IRADNIK1')
DROP INDEX [IRADNIK1] ON [dbo].[RADNIK] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRADNIK1] ON [dbo].[RADNIK] 
(
	[RADNIKPOREZIDOPRINOSIDSKUPPOREZAIDOPRINOSA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIK]') AND name = N'IRADNIK10')
DROP INDEX [IRADNIK10] ON [dbo].[RADNIK] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRADNIK10] ON [dbo].[RADNIK] 
(
	[IDORGDIO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIK]') AND name = N'IRADNIK11')
DROP INDEX [IRADNIK11] ON [dbo].[RADNIK] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRADNIK11] ON [dbo].[RADNIK] 
(
	[IDBENEFICIRANI] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIK]') AND name = N'IRADNIK12')
DROP INDEX [IRADNIK12] ON [dbo].[RADNIK] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRADNIK12] ON [dbo].[RADNIK] 
(
	[IDBANKE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIK]') AND name = N'IRADNIK13')
DROP INDEX [IRADNIK13] ON [dbo].[RADNIK] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRADNIK13] ON [dbo].[RADNIK] 
(
	[IDSPOL] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIK]') AND name = N'IRADNIK14')
DROP INDEX [IRADNIK14] ON [dbo].[RADNIK] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRADNIK14] ON [dbo].[RADNIK] 
(
	[IDIPIDENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIK]') AND name = N'IRADNIK15')
DROP INDEX [IRADNIK15] ON [dbo].[RADNIK] WITH ( ONLINE = OFF )
GO

CREATE UNIQUE NONCLUSTERED INDEX [IRADNIK15] ON [dbo].[RADNIK] 
(
	[JMBG] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIK]') AND name = N'IRADNIK16')
DROP INDEX [IRADNIK16] ON [dbo].[RADNIK] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRADNIK16] ON [dbo].[RADNIK] 
(
	[IDUGOVORORADU] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIK]') AND name = N'IRADNIK17')
DROP INDEX [IRADNIK17] ON [dbo].[RADNIK] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRADNIK17] ON [dbo].[RADNIK] 
(
	[IDDRZAVLJANSTVO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIK]') AND name = N'IRADNIK2')
DROP INDEX [IRADNIK2] ON [dbo].[RADNIK] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRADNIK2] ON [dbo].[RADNIK] 
(
	[OPCINARADAIDOPCINE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIK]') AND name = N'IRADNIK3')
DROP INDEX [IRADNIK3] ON [dbo].[RADNIK] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRADNIK3] ON [dbo].[RADNIK] 
(
	[OPCINASTANOVANJAIDOPCINE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIK]') AND name = N'IRADNIK4')
DROP INDEX [IRADNIK4] ON [dbo].[RADNIK] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRADNIK4] ON [dbo].[RADNIK] 
(
	[IDBRACNOSTANJE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIK]') AND name = N'IRADNIK5')
DROP INDEX [IRADNIK5] ON [dbo].[RADNIK] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRADNIK5] ON [dbo].[RADNIK] 
(
	[IDSTRUKA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIK]') AND name = N'IRADNIK6')
DROP INDEX [IRADNIK6] ON [dbo].[RADNIK] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRADNIK6] ON [dbo].[RADNIK] 
(
	[TRENUTNASTRUCNASPREMAIDSTRUCNASPREMA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIK]') AND name = N'IRADNIK7')
DROP INDEX [IRADNIK7] ON [dbo].[RADNIK] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRADNIK7] ON [dbo].[RADNIK] 
(
	[POTREBNASTRUCNASPREMAIDSTRUCNASPREMA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIK]') AND name = N'IRADNIK8')
DROP INDEX [IRADNIK8] ON [dbo].[RADNIK] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRADNIK8] ON [dbo].[RADNIK] 
(
	[IDRADNOMJESTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIK]') AND name = N'IRADNIK9')
DROP INDEX [IRADNIK9] ON [dbo].[RADNIK] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRADNIK9] ON [dbo].[RADNIK] 
(
	[IDTITULA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIKBruto]') AND name = N'IRADNIKLevel41')
DROP INDEX [IRADNIKLevel41] ON [dbo].[RADNIKBruto] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRADNIKLevel41] ON [dbo].[RADNIKBruto] 
(
	[BRUTOELEMENTIDELEMENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIKKrediti]') AND name = N'IRADNIKKrediti1')
DROP INDEX [IRADNIKKrediti1] ON [dbo].[RADNIKKrediti] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRADNIKKrediti1] ON [dbo].[RADNIKKrediti] 
(
	[ZADKREDITIIDKREDITOR] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIKLevel7]') AND name = N'IRADNIKLevel71')
DROP INDEX [IRADNIKLevel71] ON [dbo].[RADNIKLevel7] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRADNIKLevel71] ON [dbo].[RADNIKLevel7] 
(
	[IDGRUPEKOEF] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIKNeto]') AND name = N'IRADNIKZaduzeniNeto1')
DROP INDEX [IRADNIKZaduzeniNeto1] ON [dbo].[RADNIKNeto] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRADNIKZaduzeniNeto1] ON [dbo].[RADNIKNeto] 
(
	[NETOELEMENTIDELEMENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIKObustava]') AND name = N'IRADNIKLevel61')
DROP INDEX [IRADNIKLevel61] ON [dbo].[RADNIKObustava] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRADNIKLevel61] ON [dbo].[RADNIKObustava] 
(
	[ZADOBUSTAVAIDOBUSTAVA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIKOdbitak]') AND name = N'IRADNIK32')
DROP INDEX [IRADNIK32] ON [dbo].[RADNIKOdbitak] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRADNIK32] ON [dbo].[RADNIKOdbitak] 
(
	[OSOBNIODBITAKZADUZENJEIDOSOBNIODBITAK] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIKOlaksica]') AND name = N'IRADNIKOlaksica')
DROP INDEX [IRADNIKOlaksica] ON [dbo].[RADNIKOlaksica] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRADNIKOlaksica] ON [dbo].[RADNIKOlaksica] 
(
	[ZADOLAKSICEIDOLAKSICE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RSMA]') AND name = N'IRSMA1')
DROP INDEX [IRSMA1] ON [dbo].[RSMA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRSMA1] ON [dbo].[RSMA] 
(
	[IDRSVRSTEOBRACUNA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RSMA]') AND name = N'IRSMA2')
DROP INDEX [IRSMA2] ON [dbo].[RSMA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRSMA2] ON [dbo].[RSMA] 
(
	[IDRSVRSTEOBVEZNIKA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RSMA]') AND name = N'IRSMA3')
DROP INDEX [IRSMA3] ON [dbo].[RSMA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRSMA3] ON [dbo].[RSMA] 
(
	[IDOBRACUN] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMADD]') AND name = N'ISHEMADD1')
DROP INDEX [ISHEMADD1] ON [dbo].[SHEMADD] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMADD1] ON [dbo].[SHEMADD] 
(
	[SHEMADDOJIDORGJED] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMADDSHEMADDDOPRINOS]') AND name = N'ISHEMADDSHEMADDDOPRINOS1')
DROP INDEX [ISHEMADDSHEMADDDOPRINOS1] ON [dbo].[SHEMADDSHEMADDDOPRINOS] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMADDSHEMADDDOPRINOS1] ON [dbo].[SHEMADDSHEMADDDOPRINOS] 
(
	[STRANEDOPIDSTRANEKNJIZENJA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMADDSHEMADDDOPRINOS]') AND name = N'ISHEMADDSHEMADDDOPRINOS2')
DROP INDEX [ISHEMADDSHEMADDDOPRINOS2] ON [dbo].[SHEMADDSHEMADDDOPRINOS] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMADDSHEMADDDOPRINOS2] ON [dbo].[SHEMADDSHEMADDDOPRINOS] 
(
	[MTDOPIDMJESTOTROSKA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMADDSHEMADDDOPRINOS]') AND name = N'ISHEMADDSHEMADDDOPRINOS3')
DROP INDEX [ISHEMADDSHEMADDDOPRINOS3] ON [dbo].[SHEMADDSHEMADDDOPRINOS] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMADDSHEMADDDOPRINOS3] ON [dbo].[SHEMADDSHEMADDDOPRINOS] 
(
	[KONTODOPIDKONTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMADDSHEMADDDOPRINOS]') AND name = N'ISHEMADDSHEMADDDOPRINOS4')
DROP INDEX [ISHEMADDSHEMADDDOPRINOS4] ON [dbo].[SHEMADDSHEMADDDOPRINOS] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMADDSHEMADDDOPRINOS4] ON [dbo].[SHEMADDSHEMADDDOPRINOS] 
(
	[SHEMADDDOPRINOSIDDOPRINOS] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMADDSHEMADDSTANDARD]') AND name = N'ISHEMADDSHEMADDSTANDARD1')
DROP INDEX [ISHEMADDSHEMADDSTANDARD1] ON [dbo].[SHEMADDSHEMADDSTANDARD] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMADDSHEMADDSTANDARD1] ON [dbo].[SHEMADDSHEMADDSTANDARD] 
(
	[IDDDVRSTEIZNOSA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMADDSHEMADDSTANDARD]') AND name = N'ISHEMADDSHEMADDSTANDARD3')
DROP INDEX [ISHEMADDSHEMADDSTANDARD3] ON [dbo].[SHEMADDSHEMADDSTANDARD] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMADDSHEMADDSTANDARD3] ON [dbo].[SHEMADDSHEMADDSTANDARD] 
(
	[KONTODDVRSTAIZNOSAIDKONTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMADDSHEMADDSTANDARD]') AND name = N'ISHEMADDSHEMADDSTANDARD4')
DROP INDEX [ISHEMADDSHEMADDSTANDARD4] ON [dbo].[SHEMADDSHEMADDSTANDARD] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMADDSHEMADDSTANDARD4] ON [dbo].[SHEMADDSHEMADDSTANDARD] 
(
	[MTDDVRSTAIZNOSAIDMJESTOTROSKA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMADDSHEMADDSTANDARD]') AND name = N'ISHEMADDSHEMADDSTANDARD5')
DROP INDEX [ISHEMADDSHEMADDSTANDARD5] ON [dbo].[SHEMADDSHEMADDSTANDARD] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMADDSHEMADDSTANDARD5] ON [dbo].[SHEMADDSHEMADDSTANDARD] 
(
	[STRANEDDVRSTEIZNOSAIDSTRANEKNJIZENJA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAIRA]') AND name = N'ISHEMAIRA1')
DROP INDEX [ISHEMAIRA1] ON [dbo].[SHEMAIRA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAIRA1] ON [dbo].[SHEMAIRA] 
(
	[SHEMAIRADOKIDDOKUMENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAIRASHEMAIRAKONTIRANJE]') AND name = N'ISHEMAIRASHEMAIRAKONTIRANJE1')
DROP INDEX [ISHEMAIRASHEMAIRAKONTIRANJE1] ON [dbo].[SHEMAIRASHEMAIRAKONTIRANJE] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAIRASHEMAIRAKONTIRANJE1] ON [dbo].[SHEMAIRASHEMAIRAKONTIRANJE] 
(
	[SHEMAIRAOJIDORGJED] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAIRASHEMAIRAKONTIRANJE]') AND name = N'ISHEMAIRASHEMAIRAKONTIRANJE2')
DROP INDEX [ISHEMAIRASHEMAIRAKONTIRANJE2] ON [dbo].[SHEMAIRASHEMAIRAKONTIRANJE] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAIRASHEMAIRAKONTIRANJE2] ON [dbo].[SHEMAIRASHEMAIRAKONTIRANJE] 
(
	[SHEMAIRAMTIDMJESTOTROSKA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAIRASHEMAIRAKONTIRANJE]') AND name = N'ISHEMAIRASHEMAIRAKONTIRANJE3')
DROP INDEX [ISHEMAIRASHEMAIRAKONTIRANJE3] ON [dbo].[SHEMAIRASHEMAIRAKONTIRANJE] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAIRASHEMAIRAKONTIRANJE3] ON [dbo].[SHEMAIRASHEMAIRAKONTIRANJE] 
(
	[SHEMAIRASTRANEIDSTRANEKNJIZENJA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAIRASHEMAIRAKONTIRANJE]') AND name = N'ISHEMAIRASHEMAIRAKONTIRANJE4')
DROP INDEX [ISHEMAIRASHEMAIRAKONTIRANJE4] ON [dbo].[SHEMAIRASHEMAIRAKONTIRANJE] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAIRASHEMAIRAKONTIRANJE4] ON [dbo].[SHEMAIRASHEMAIRAKONTIRANJE] 
(
	[SHEMAIRAKONTOIDKONTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAIRASHEMAIRAKONTIRANJE]') AND name = N'ISHEMAIRASHEMAIRAKONTIRANJE5')
DROP INDEX [ISHEMAIRASHEMAIRAKONTIRANJE5] ON [dbo].[SHEMAIRASHEMAIRAKONTIRANJE] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAIRASHEMAIRAKONTIRANJE5] ON [dbo].[SHEMAIRASHEMAIRAKONTIRANJE] 
(
	[IDIRAVRSTAIZNOSA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAPLACA]') AND name = N'ISHEMAPLACA1')
DROP INDEX [ISHEMAPLACA1] ON [dbo].[SHEMAPLACA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAPLACA1] ON [dbo].[SHEMAPLACA] 
(
	[SHEMAPLOJIDORGJED] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAPLACASHEMAPLACADOP]') AND name = N'ISHEMAPLACASHEMAPLACADOP1')
DROP INDEX [ISHEMAPLACASHEMAPLACADOP1] ON [dbo].[SHEMAPLACASHEMAPLACADOP] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAPLACASHEMAPLACADOP1] ON [dbo].[SHEMAPLACASHEMAPLACADOP] 
(
	[STRANEDOPIDSTRANEKNJIZENJA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAPLACASHEMAPLACADOP]') AND name = N'ISHEMAPLACASHEMAPLACADOP2')
DROP INDEX [ISHEMAPLACASHEMAPLACADOP2] ON [dbo].[SHEMAPLACASHEMAPLACADOP] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAPLACASHEMAPLACADOP2] ON [dbo].[SHEMAPLACASHEMAPLACADOP] 
(
	[MTDOPIDMJESTOTROSKA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAPLACASHEMAPLACADOP]') AND name = N'ISHEMAPLACASHEMAPLACADOP3')
DROP INDEX [ISHEMAPLACASHEMAPLACADOP3] ON [dbo].[SHEMAPLACASHEMAPLACADOP] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAPLACASHEMAPLACADOP3] ON [dbo].[SHEMAPLACASHEMAPLACADOP] 
(
	[KONTODOPIDKONTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAPLACASHEMAPLACADOP]') AND name = N'ISHEMAPLACASHEMAPLACADOP4')
DROP INDEX [ISHEMAPLACASHEMAPLACADOP4] ON [dbo].[SHEMAPLACASHEMAPLACADOP] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAPLACASHEMAPLACADOP4] ON [dbo].[SHEMAPLACASHEMAPLACADOP] 
(
	[SHEMAPLDOPIDDOPRINOS] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAPLACASHEMAPLACAELEMENT]') AND name = N'ISHEMAPLACASHEMAPLACAELEMENT1')
DROP INDEX [ISHEMAPLACASHEMAPLACAELEMENT1] ON [dbo].[SHEMAPLACASHEMAPLACAELEMENT] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAPLACASHEMAPLACAELEMENT1] ON [dbo].[SHEMAPLACASHEMAPLACAELEMENT] 
(
	[MTELEMENTIDMJESTOTROSKA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAPLACASHEMAPLACAELEMENT]') AND name = N'ISHEMAPLACASHEMAPLACAELEMENT2')
DROP INDEX [ISHEMAPLACASHEMAPLACAELEMENT2] ON [dbo].[SHEMAPLACASHEMAPLACAELEMENT] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAPLACASHEMAPLACAELEMENT2] ON [dbo].[SHEMAPLACASHEMAPLACAELEMENT] 
(
	[STRANEELEMENTIDSTRANEKNJIZENJA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAPLACASHEMAPLACAELEMENT]') AND name = N'ISHEMAPLACASHEMAPLACAELEMENT3')
DROP INDEX [ISHEMAPLACASHEMAPLACAELEMENT3] ON [dbo].[SHEMAPLACASHEMAPLACAELEMENT] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAPLACASHEMAPLACAELEMENT3] ON [dbo].[SHEMAPLACASHEMAPLACAELEMENT] 
(
	[KONTOELEMENTIDKONTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAPLACASHEMAPLACAELEMENT]') AND name = N'ISHEMAPLACASHEMAPLACAELEMENT4')
DROP INDEX [ISHEMAPLACASHEMAPLACAELEMENT4] ON [dbo].[SHEMAPLACASHEMAPLACAELEMENT] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAPLACASHEMAPLACAELEMENT4] ON [dbo].[SHEMAPLACASHEMAPLACAELEMENT] 
(
	[SHEMAPLELEMENTIDELEMENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAPLACASHEMAPLACASTANDARD]') AND name = N'ISHEMAPLACASHEMAPLACASTANDARD1')
DROP INDEX [ISHEMAPLACASHEMAPLACASTANDARD1] ON [dbo].[SHEMAPLACASHEMAPLACASTANDARD] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAPLACASHEMAPLACASTANDARD1] ON [dbo].[SHEMAPLACASHEMAPLACASTANDARD] 
(
	[STRANEVRSTEIZNOSAIDSTRANEKNJIZENJA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAPLACASHEMAPLACASTANDARD]') AND name = N'ISHEMAPLACASHEMAPLACASTANDARD2')
DROP INDEX [ISHEMAPLACASHEMAPLACASTANDARD2] ON [dbo].[SHEMAPLACASHEMAPLACASTANDARD] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAPLACASHEMAPLACASTANDARD2] ON [dbo].[SHEMAPLACASHEMAPLACASTANDARD] 
(
	[MTPLACAVRSTAIZNOSAIDMJESTOTROSKA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAPLACASHEMAPLACASTANDARD]') AND name = N'ISHEMAPLACASHEMAPLACASTANDARD3')
DROP INDEX [ISHEMAPLACASHEMAPLACASTANDARD3] ON [dbo].[SHEMAPLACASHEMAPLACASTANDARD] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAPLACASHEMAPLACASTANDARD3] ON [dbo].[SHEMAPLACASHEMAPLACASTANDARD] 
(
	[KONTOPLACAVRSTAIZNOSAIDKONTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAPLACASHEMAPLACASTANDARD]') AND name = N'ISHEMAPLACASHEMAPLACASTANDARD4')
DROP INDEX [ISHEMAPLACASHEMAPLACASTANDARD4] ON [dbo].[SHEMAPLACASHEMAPLACASTANDARD] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAPLACASHEMAPLACASTANDARD4] ON [dbo].[SHEMAPLACASHEMAPLACASTANDARD] 
(
	[IDPLVRSTEIZNOSA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAURA]') AND name = N'ISHEMAURA1')
DROP INDEX [ISHEMAURA1] ON [dbo].[SHEMAURA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAURA1] ON [dbo].[SHEMAURA] 
(
	[PARTNERSHEMAURAIDPARTNER] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAURASHEMAURAKONTIRANJE]') AND name = N'ISHEMAURASHEMAURAKONTIRANJE1')
DROP INDEX [ISHEMAURASHEMAURAKONTIRANJE1] ON [dbo].[SHEMAURASHEMAURAKONTIRANJE] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAURASHEMAURAKONTIRANJE1] ON [dbo].[SHEMAURASHEMAURAKONTIRANJE] 
(
	[SHEMAURAOJIDORGJED] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAURASHEMAURAKONTIRANJE]') AND name = N'ISHEMAURASHEMAURAKONTIRANJE2')
DROP INDEX [ISHEMAURASHEMAURAKONTIRANJE2] ON [dbo].[SHEMAURASHEMAURAKONTIRANJE] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAURASHEMAURAKONTIRANJE2] ON [dbo].[SHEMAURASHEMAURAKONTIRANJE] 
(
	[SHEMAURAMTIDMJESTOTROSKA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAURASHEMAURAKONTIRANJE]') AND name = N'ISHEMAURASHEMAURAKONTIRANJE3')
DROP INDEX [ISHEMAURASHEMAURAKONTIRANJE3] ON [dbo].[SHEMAURASHEMAURAKONTIRANJE] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAURASHEMAURAKONTIRANJE3] ON [dbo].[SHEMAURASHEMAURAKONTIRANJE] 
(
	[SHEMAURASTRANEIDSTRANEKNJIZENJA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAURASHEMAURAKONTIRANJE]') AND name = N'ISHEMAURASHEMAURAKONTIRANJE4')
DROP INDEX [ISHEMAURASHEMAURAKONTIRANJE4] ON [dbo].[SHEMAURASHEMAURAKONTIRANJE] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAURASHEMAURAKONTIRANJE4] ON [dbo].[SHEMAURASHEMAURAKONTIRANJE] 
(
	[SHEMAURAKONTOIDKONTO] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SHEMAURASHEMAURAKONTIRANJE]') AND name = N'ISHEMAURASHEMAURAKONTIRANJE5')
DROP INDEX [ISHEMAURASHEMAURAKONTIRANJE5] ON [dbo].[SHEMAURASHEMAURAKONTIRANJE] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISHEMAURASHEMAURAKONTIRANJE5] ON [dbo].[SHEMAURASHEMAURAKONTIRANJE] 
(
	[IDURAVRSTAIZNOSA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SKUPPOREZAIDOPRINOSA1]') AND name = N'ISKUPPOREZAIDOPRINOSA11')
DROP INDEX [ISKUPPOREZAIDOPRINOSA11] ON [dbo].[SKUPPOREZAIDOPRINOSA1] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISKUPPOREZAIDOPRINOSA11] ON [dbo].[SKUPPOREZAIDOPRINOSA1] 
(
	[IDPOREZ] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[SKUPPOREZAIDOPRINOSA2]') AND name = N'ISKUPPOREZAIDOPRINOSA21')
DROP INDEX [ISKUPPOREZAIDOPRINOSA21] ON [dbo].[SKUPPOREZAIDOPRINOSA2] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [ISKUPPOREZAIDOPRINOSA21] ON [dbo].[SKUPPOREZAIDOPRINOSA2] 
(
	[IDDOPRINOS] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[URA]') AND name = N'IURA1')
DROP INDEX [IURA1] ON [dbo].[URA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IURA1] ON [dbo].[URA] 
(
	[URADOKIDDOKUMENT] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[URA]') AND name = N'IURA3')
DROP INDEX [IURA3] ON [dbo].[URA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IURA3] ON [dbo].[URA] 
(
	[IDTIPURA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[URA]') AND name = N'IURA4')
DROP INDEX [IURA4] ON [dbo].[URA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IURA4] ON [dbo].[URA] 
(
	[urapartnerIDPARTNER] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[VIRMANI]') AND name = N'IVIRMANI2')
DROP INDEX [IVIRMANI2] ON [dbo].[VIRMANI] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IVIRMANI2] ON [dbo].[VIRMANI] 
(
	[SIFRAOBRACUNAVIRMAN] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO


IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ZATVARANJA]') AND name = N'IZATVARANJA2')
DROP INDEX [IZATVARANJA2] ON [dbo].[ZATVARANJA] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IZATVARANJA2] ON [dbo].[ZATVARANJA] 
(
	[GK2IDGKSTAVKA] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RADNIKIzuzeceOdOvrhe]') AND name = N'IRADNIKIzuzeceOdOvrhe1')
DROP INDEX [IRADNIKIzuzeceOdOvrhe1] ON [dbo].[RADNIKIzuzeceOdOvrhe] WITH ( ONLINE = OFF )
GO

CREATE NONCLUSTERED INDEX [IRADNIKIzuzeceOdOvrhe1] ON [dbo].[RADNIKIzuzeceOdOvrhe] 
(
	[BANKAZASTICENOIDBANKE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
GO



-- Kraj indeksi


--Pocetak foreign keys



ALTER TABLE [dbo].[UCENIK]  WITH CHECK ADD  CONSTRAINT [IUCENIK1] FOREIGN KEY([POSTANSKIBROJ])
REFERENCES [POSTANSKIBROJEVI] ([POSTANSKIBROJ])
GO

ALTER TABLE [dbo].[UCENIK] CHECK CONSTRAINT [IUCENIK1]
GO

ALTER TABLE [dbo].[UCENIKOBRACUNUCENIKOBRACUNDETAIL]  WITH CHECK ADD  CONSTRAINT [IUCENIKOBRACUNUCENIKOBRACUNDE1] FOREIGN KEY([IDUCENIK])
REFERENCES [UCENIK] ([IDUCENIK])
GO

ALTER TABLE [dbo].[UCENIKOBRACUNUCENIKOBRACUNDETAIL] CHECK CONSTRAINT [IUCENIKOBRACUNUCENIKOBRACUNDE1]
GO
ALTER TABLE [dbo].[UCENIKOBRACUNUCENIKOBRACUNDETAIL]  WITH CHECK ADD  CONSTRAINT [IUCENIKOBRACUNUCENIKOBRACUNDE2] FOREIGN KEY([UCOBRMJESEC], [UCOBRGODINA])
REFERENCES [UCENIKOBRACUN] ([UCOBRMJESEC], [UCOBRGODINA])
GO

ALTER TABLE [dbo].[UCENIKOBRACUNUCENIKOBRACUNDETAIL] CHECK CONSTRAINT [IUCENIKOBRACUNUCENIKOBRACUNDE2]
GO


ALTER TABLE [dbo].[OTISLI]  WITH CHECK ADD  CONSTRAINT [IOTISLI1] FOREIGN KEY([IDRADNIK])
REFERENCES [RADNIK] ([IDRADNIK])
GO
ALTER TABLE [dbo].[OTISLI] CHECK CONSTRAINT [IOTISLI1]
GO


ALTER TABLE [dbo].[ZAPOSLENI]  WITH CHECK ADD  CONSTRAINT [IZAPOSLENI1] FOREIGN KEY([IDRADNIK])
REFERENCES [RADNIK] ([IDRADNIK])
GO

ALTER TABLE [dbo].[ZAPOSLENI] CHECK CONSTRAINT [IZAPOSLENI1]
GO




ALTER TABLE [dbo].[RADNIKIzuzeceOdOvrhe]  WITH CHECK ADD  CONSTRAINT [IRADNIKIzuzeceOdOvrhe1] FOREIGN KEY([BANKAZASTICENOIDBANKE])
REFERENCES [BANKE] ([IDBANKE])
GO

ALTER TABLE [dbo].[RADNIKIzuzeceOdOvrhe] CHECK CONSTRAINT [IRADNIKIzuzeceOdOvrhe1]
GO

ALTER TABLE [dbo].[RADNIKIzuzeceOdOvrhe]  WITH CHECK ADD  CONSTRAINT [IRADNIKIzuzeceOdOvrhe2] FOREIGN KEY([IDRADNIK])
REFERENCES [RADNIK] ([IDRADNIK])
GO

ALTER TABLE [dbo].[RADNIKIzuzeceOdOvrhe] CHECK CONSTRAINT [IRADNIKIzuzeceOdOvrhe2]
GO


ALTER TABLE [dbo].[RADNIK]  WITH CHECK ADD  CONSTRAINT [IRADNIK18] FOREIGN KEY([IDRADNOVRIJEME])
REFERENCES [RADNOVRIJEME] ([IDRADNOVRIJEME])
GO

ALTER TABLE [dbo].[RADNIK] CHECK CONSTRAINT [IRADNIK18]
GO



ALTER TABLE [dbo].[RAD1VEZASPOL]  WITH CHECK ADD  CONSTRAINT [IRAD1VEZASPOL2] FOREIGN KEY([RAD1SPOLID])
REFERENCES [RAD1SPOL] ([RAD1SPOLID])
GO

ALTER TABLE [dbo].[RAD1VEZASPOL] CHECK CONSTRAINT [IRAD1VEZASPOL2]
GO
ALTER TABLE [dbo].[RAD1GELEMENTIVEZA]  WITH CHECK ADD  CONSTRAINT [IRAD1GELEMENTIVEZA1] FOREIGN KEY([IDELEMENT])
REFERENCES [ELEMENT] ([IDELEMENT])
GO

ALTER TABLE [dbo].[RAD1GELEMENTIVEZA] CHECK CONSTRAINT [IRAD1GELEMENTIVEZA1]
GO
ALTER TABLE [dbo].[RAD1GELEMENTIVEZA]  WITH CHECK ADD  CONSTRAINT [IRAD1GELEMENTIVEZA2] FOREIGN KEY([RAD1GELEMENTIID])
REFERENCES [RAD1GELEMENTI] ([RAD1GELEMENTIID])
GO

ALTER TABLE [dbo].[RAD1GELEMENTIVEZA] CHECK CONSTRAINT [IRAD1GELEMENTIVEZA2]
GO
ALTER TABLE [dbo].[RAD1MELEMENTIVEZA]  WITH CHECK ADD  CONSTRAINT [IRAD1MELEMENTIVEZA1] FOREIGN KEY([IDELEMENT])
REFERENCES [ELEMENT] ([IDELEMENT])
GO

ALTER TABLE [dbo].[RAD1MELEMENTIVEZA] CHECK CONSTRAINT [IRAD1MELEMENTIVEZA1]
GO

ALTER TABLE [dbo].[RAD1SPREMEVEZA]  WITH CHECK ADD  CONSTRAINT [IRAD1SPREMEVEZA1] FOREIGN KEY([IDSTRUCNASPREMA])
REFERENCES [STRUCNASPREMA] ([IDSTRUCNASPREMA])
GO

ALTER TABLE [dbo].[RAD1SPREMEVEZA] CHECK CONSTRAINT [IRAD1SPREMEVEZA1]
GO
ALTER TABLE [dbo].[RAD1SPREMEVEZA]  WITH CHECK ADD  CONSTRAINT [IRAD1SPREMEVEZA2] FOREIGN KEY([RAD1IDSPREME])
REFERENCES [RAD1SPREME] ([RAD1IDSPREME])
GO

ALTER TABLE [dbo].[RAD1SPREMEVEZA] CHECK CONSTRAINT [IRAD1SPREMEVEZA2]
GO

ALTER TABLE [dbo].[RAD1VEZASPOL]  WITH CHECK ADD  CONSTRAINT [IRAD1VEZASPOL1] FOREIGN KEY([IDSPOL])
REFERENCES [SPOL] ([IDSPOL])
GO

ALTER TABLE [dbo].[RAD1VEZASPOL] CHECK CONSTRAINT [IRAD1VEZASPOL1]
GO



ALTER TABLE [dbo].[OSTEMELJNICA]  WITH CHECK ADD  CONSTRAINT [IOSTEMELJNICA3] FOREIGN KEY([INVBROJ])
REFERENCES [OS] ([INVBROJ])
GO

ALTER TABLE [dbo].[OSTEMELJNICA] CHECK CONSTRAINT [IOSTEMELJNICA3]
GO


ALTER TABLE [dbo].[OSTEMELJNICA]  WITH CHECK ADD  CONSTRAINT [IOSTEMELJNICA2] FOREIGN KEY([RASHODLOKACIJEIDLOKACIJE])
REFERENCES [LOKACIJE] ([IDLOKACIJE])
GO

ALTER TABLE [dbo].[OSTEMELJNICA] CHECK CONSTRAINT [IOSTEMELJNICA2]
GO

ALTER TABLE [dbo].[OSTEMELJNICA]  WITH CHECK ADD  CONSTRAINT [IOSTEMELJNICA1] FOREIGN KEY([IDOSDOKUMENT])
REFERENCES [OSDOKUMENT] ([IDOSDOKUMENT])
GO

ALTER TABLE [dbo].[OSTEMELJNICA] CHECK CONSTRAINT [IOSTEMELJNICA1]
GO




ALTER TABLE [dbo].[OSRAZMJESTAJ]  WITH CHECK ADD  CONSTRAINT [IOSRAZMJESTAJ1] FOREIGN KEY([INVBROJ])
REFERENCES [OS] ([INVBROJ])
GO

ALTER TABLE [dbo].[OSRAZMJESTAJ] CHECK CONSTRAINT [IOSRAZMJESTAJ1]
GO


ALTER TABLE [dbo].[OSRAZMJESTAJ]  WITH CHECK ADD  CONSTRAINT [IOSRAZMJESTAJ2] FOREIGN KEY([IDLOKACIJE])
REFERENCES [LOKACIJE] ([IDLOKACIJE])
GO

ALTER TABLE [dbo].[OSRAZMJESTAJ] CHECK CONSTRAINT [IOSRAZMJESTAJ2]
GO

ALTER TABLE [dbo].[OS]  WITH CHECK ADD  CONSTRAINT [IOS2] FOREIGN KEY([IDOSVRSTA])
REFERENCES [OSVRSTA] ([IDOSVRSTA])
GO

ALTER TABLE [dbo].[OS] CHECK CONSTRAINT [IOS2]
GO




ALTER TABLE [dbo].[OS]  WITH CHECK ADD  CONSTRAINT [IOS1] FOREIGN KEY([IDAMSKUPINE])
REFERENCES [AMSKUPINE] ([IDAMSKUPINE])
GO

ALTER TABLE [dbo].[OS] CHECK CONSTRAINT [IOS1]
GO


ALTER TABLE [dbo].[AMSKUPINE]  WITH CHECK ADD  CONSTRAINT [IAMSKUPINE3] FOREIGN KEY([KTOIZVORAIDKONTO])
REFERENCES [KONTO] ([IDKONTO])
GO

ALTER TABLE [dbo].[AMSKUPINE] CHECK CONSTRAINT [IAMSKUPINE3]
GO
ALTER TABLE [dbo].[AMSKUPINE]  WITH CHECK ADD  CONSTRAINT [IAMSKUPINE2] FOREIGN KEY([KTOISPRAVKAIDKONTO])
REFERENCES [KONTO] ([IDKONTO])
GO

ALTER TABLE [dbo].[AMSKUPINE] CHECK CONSTRAINT [IAMSKUPINE2]
GO

ALTER TABLE [dbo].[AMSKUPINE]  WITH CHECK ADD  CONSTRAINT [IAMSKUPINE1] FOREIGN KEY([KTONABAVKEIDKONTO])
REFERENCES [KONTO] ([IDKONTO])
GO

ALTER TABLE [dbo].[AMSKUPINE] CHECK CONSTRAINT [IAMSKUPINE1]
GO











ALTER TABLE [dbo].[BLAGAJNA]  WITH CHECK ADD  CONSTRAINT [IBLAGAJNA] FOREIGN KEY([BLGDOKIDDOKUMENT])
REFERENCES [DOKUMENT] ([IDDOKUMENT])
GO

ALTER TABLE [dbo].[BLAGAJNA] CHECK CONSTRAINT [IBLAGAJNA]
GO


ALTER TABLE [dbo].[BLAGAJNA]  WITH CHECK ADD  CONSTRAINT [IBLAGAJNA1] FOREIGN KEY([BLGKONTOIDKONTO])
REFERENCES [KONTO] ([IDKONTO])
GO

ALTER TABLE [dbo].[BLAGAJNA] CHECK CONSTRAINT [IBLAGAJNA1]
GO


ALTER TABLE [dbo].[BLAGAJNAStavkeBlagajne]  WITH CHECK ADD  CONSTRAINT [IBLAGAJNAStavkeBlagajne1] FOREIGN KEY([blggodineIDGODINE])
REFERENCES [GODINE] ([IDGODINE])
GO

ALTER TABLE [dbo].[BLAGAJNAStavkeBlagajne] CHECK CONSTRAINT [IBLAGAJNAStavkeBlagajne1]
GO


ALTER TABLE [dbo].[BLAGAJNAStavkeBlagajne]  WITH CHECK ADD  CONSTRAINT [IBLAGAJNAStavkeBlagajne2] FOREIGN KEY([IDBLGVRSTEDOK])
REFERENCES [BLGVRSTEDOK] ([IDBLGVRSTEDOK])
GO

ALTER TABLE [dbo].[BLAGAJNAStavkeBlagajne] CHECK CONSTRAINT [IBLAGAJNAStavkeBlagajne2]
GO


ALTER TABLE [dbo].[BLAGAJNAStavkeBlagajne]  WITH CHECK ADD  CONSTRAINT [IBLAGAJNAStavkeBlagajne3] FOREIGN KEY([BLGDOKIDDOKUMENT])
REFERENCES [BLAGAJNA] ([BLGDOKIDDOKUMENT])
GO

ALTER TABLE [dbo].[BLAGAJNAStavkeBlagajne] CHECK CONSTRAINT [IBLAGAJNAStavkeBlagajne3]
GO


ALTER TABLE [dbo].[BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje]  WITH CHECK ADD  CONSTRAINT [IBLAGAJNAStavkeBlagajneStavke1] FOREIGN KEY([BLGORGJEDIDORGJED])
REFERENCES [ORGJED] ([IDORGJED])
GO

ALTER TABLE [dbo].[BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje] CHECK CONSTRAINT [IBLAGAJNAStavkeBlagajneStavke1]
GO


ALTER TABLE [dbo].[BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje]  WITH CHECK ADD  CONSTRAINT [IBLAGAJNAStavkeBlagajneStavke2] FOREIGN KEY([BLGMTIDMJESTOTROSKA])
REFERENCES [MJESTOTROSKA] ([IDMJESTOTROSKA])
GO

ALTER TABLE [dbo].[BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje] CHECK CONSTRAINT [IBLAGAJNAStavkeBlagajneStavke2]
GO


ALTER TABLE [dbo].[BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje]  WITH CHECK ADD  CONSTRAINT [IBLAGAJNAStavkeBlagajneStavke3] FOREIGN KEY([BLGSTAVKEBLAGAJNEKONTOIDKONTO])
REFERENCES [KONTO] ([IDKONTO])
GO

ALTER TABLE [dbo].[BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje] CHECK CONSTRAINT [IBLAGAJNAStavkeBlagajneStavke3]
GO


ALTER TABLE [dbo].[BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje]  WITH CHECK ADD  CONSTRAINT [IBLAGAJNAStavkeBlagajneStavke4] FOREIGN KEY([BLGDOKIDDOKUMENT], [IDBLGVRSTEDOK], [blggodineIDGODINE], [BLGBROJDOKUMENTA])
REFERENCES [BLAGAJNAStavkeBlagajne] ([BLGDOKIDDOKUMENT], [IDBLGVRSTEDOK], [blggodineIDGODINE], [BLGBROJDOKUMENTA])
GO

ALTER TABLE [dbo].[BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje] CHECK CONSTRAINT [IBLAGAJNAStavkeBlagajneStavke4]
GO


ALTER TABLE [dbo].[BOLOVANJEFOND]  WITH CHECK ADD  CONSTRAINT [IBOLOVANJEFOND] FOREIGN KEY([ELEMENTBOLOVANJEIDELEMENT])
REFERENCES [ELEMENT] ([IDELEMENT])
GO

ALTER TABLE [dbo].[BOLOVANJEFOND] CHECK CONSTRAINT [IBOLOVANJEFOND]
GO


ALTER TABLE [dbo].[DDKATEGORIJA]  WITH CHECK ADD  CONSTRAINT [IDDKATEGORIJA1] FOREIGN KEY([IDKOLONAIDD])
REFERENCES [DDKOLONAIDD] ([IDKOLONAIDD])
GO

ALTER TABLE [dbo].[DDKATEGORIJA] CHECK CONSTRAINT [IDDKATEGORIJA1]
GO


ALTER TABLE [dbo].[DDKATEGORIJAIzdaci]  WITH CHECK ADD  CONSTRAINT [IDDKATEGORIJAIzdaci1] FOREIGN KEY([DDIDIZDATAK])
REFERENCES [DDIZDATAK] ([DDIDIZDATAK])
GO

ALTER TABLE [dbo].[DDKATEGORIJAIzdaci] CHECK CONSTRAINT [IDDKATEGORIJAIzdaci1]
GO


ALTER TABLE [dbo].[DDKATEGORIJAIzdaci]  WITH CHECK ADD  CONSTRAINT [IDDKATEGORIJAIzdaci2] FOREIGN KEY([IDKATEGORIJA])
REFERENCES [DDKATEGORIJA] ([IDKATEGORIJA])
GO

ALTER TABLE [dbo].[DDKATEGORIJAIzdaci] CHECK CONSTRAINT [IDDKATEGORIJAIzdaci2]
GO


ALTER TABLE [dbo].[DDKATEGORIJALevel1]  WITH CHECK ADD  CONSTRAINT [IDDKATEGORIJALevel11] FOREIGN KEY([IDPOREZ])
REFERENCES [POREZ] ([IDPOREZ])
GO

ALTER TABLE [dbo].[DDKATEGORIJALevel1] CHECK CONSTRAINT [IDDKATEGORIJALevel11]
GO


ALTER TABLE [dbo].[DDKATEGORIJALevel1]  WITH CHECK ADD  CONSTRAINT [IDDKATEGORIJALevel12] FOREIGN KEY([IDKATEGORIJA])
REFERENCES [DDKATEGORIJA] ([IDKATEGORIJA])
GO

ALTER TABLE [dbo].[DDKATEGORIJALevel1] CHECK CONSTRAINT [IDDKATEGORIJALevel12]
GO


ALTER TABLE [dbo].[DDKATEGORIJALevel3]  WITH CHECK ADD  CONSTRAINT [IDDKATEGORIJALevel31] FOREIGN KEY([IDDOPRINOS])
REFERENCES [DOPRINOS] ([IDDOPRINOS])
GO

ALTER TABLE [dbo].[DDKATEGORIJALevel3] CHECK CONSTRAINT [IDDKATEGORIJALevel31]
GO


ALTER TABLE [dbo].[DDKATEGORIJALevel3]  WITH CHECK ADD  CONSTRAINT [IDDKATEGORIJALevel32] FOREIGN KEY([IDKATEGORIJA])
REFERENCES [DDKATEGORIJA] ([IDKATEGORIJA])
GO

ALTER TABLE [dbo].[DDKATEGORIJALevel3] CHECK CONSTRAINT [IDDKATEGORIJALevel32]
GO


ALTER TABLE [dbo].[DDOBRACUNRadnici]  WITH CHECK ADD  CONSTRAINT [IDDOBRACUNRadnici1] FOREIGN KEY([DDIDRADNIK])
REFERENCES [DDRADNIK] ([DDIDRADNIK])
GO

ALTER TABLE [dbo].[DDOBRACUNRadnici] CHECK CONSTRAINT [IDDOBRACUNRadnici1]
GO


ALTER TABLE [dbo].[DDOBRACUNRadnici]  WITH CHECK ADD  CONSTRAINT [IDDOBRACUNRadnici2] FOREIGN KEY([DDOBRACUNIDOBRACUN])
REFERENCES [DDOBRACUN] ([DDOBRACUNIDOBRACUN])
GO

ALTER TABLE [dbo].[DDOBRACUNRadnici] CHECK CONSTRAINT [IDDOBRACUNRadnici2]
GO


ALTER TABLE [dbo].[DDOBRACUNRadnici]  WITH CHECK ADD  CONSTRAINT [IDDOBRACUNRadnici3] FOREIGN KEY([IDKATEGORIJA])
REFERENCES [DDKATEGORIJA] ([IDKATEGORIJA])
GO

ALTER TABLE [dbo].[DDOBRACUNRadnici] CHECK CONSTRAINT [IDDOBRACUNRadnici3]
GO


ALTER TABLE [dbo].[DDOBRACUNRadniciDDKrizniPorez]  WITH CHECK ADD  CONSTRAINT [IDDOBRACUNRadniciDDKrizniPore1] FOREIGN KEY([IDKRIZNIPOREZ])
REFERENCES [KRIZNIPOREZ] ([IDKRIZNIPOREZ])
GO

ALTER TABLE [dbo].[DDOBRACUNRadniciDDKrizniPorez] CHECK CONSTRAINT [IDDOBRACUNRadniciDDKrizniPore1]
GO


ALTER TABLE [dbo].[DDOBRACUNRadniciDDKrizniPorez]  WITH CHECK ADD  CONSTRAINT [IDDOBRACUNRadniciDDKrizniPore2] FOREIGN KEY([DDOBRACUNIDOBRACUN], [DDIDRADNIK])
REFERENCES [DDOBRACUNRadnici] ([DDOBRACUNIDOBRACUN], [DDIDRADNIK])
GO

ALTER TABLE [dbo].[DDOBRACUNRadniciDDKrizniPorez] CHECK CONSTRAINT [IDDOBRACUNRadniciDDKrizniPore2]
GO


ALTER TABLE [dbo].[DDOBRACUNRadniciDoprinosi]  WITH CHECK ADD  CONSTRAINT [IDDOBRACUNRadniciDoprinosi1] FOREIGN KEY([IDDOPRINOS])
REFERENCES [DOPRINOS] ([IDDOPRINOS])
GO

ALTER TABLE [dbo].[DDOBRACUNRadniciDoprinosi] CHECK CONSTRAINT [IDDOBRACUNRadniciDoprinosi1]
GO


ALTER TABLE [dbo].[DDOBRACUNRadniciDoprinosi]  WITH CHECK ADD  CONSTRAINT [IDDOBRACUNRadniciDoprinosi2] FOREIGN KEY([DDOBRACUNIDOBRACUN], [DDIDRADNIK])
REFERENCES [DDOBRACUNRadnici] ([DDOBRACUNIDOBRACUN], [DDIDRADNIK])
GO

ALTER TABLE [dbo].[DDOBRACUNRadniciDoprinosi] CHECK CONSTRAINT [IDDOBRACUNRadniciDoprinosi2]
GO


ALTER TABLE [dbo].[DDOBRACUNRadniciIzdaci]  WITH CHECK ADD  CONSTRAINT [IDDOBRACUNRadniciIzdaci1] FOREIGN KEY([DDIDIZDATAK])
REFERENCES [DDIZDATAK] ([DDIDIZDATAK])
GO

ALTER TABLE [dbo].[DDOBRACUNRadniciIzdaci] CHECK CONSTRAINT [IDDOBRACUNRadniciIzdaci1]
GO


ALTER TABLE [dbo].[DDOBRACUNRadniciIzdaci]  WITH CHECK ADD  CONSTRAINT [IDDOBRACUNRadniciIzdaci2] FOREIGN KEY([DDOBRACUNIDOBRACUN], [DDIDRADNIK])
REFERENCES [DDOBRACUNRadnici] ([DDOBRACUNIDOBRACUN], [DDIDRADNIK])
GO

ALTER TABLE [dbo].[DDOBRACUNRadniciIzdaci] CHECK CONSTRAINT [IDDOBRACUNRadniciIzdaci2]
GO


ALTER TABLE [dbo].[DDOBRACUNRadniciPorezi]  WITH CHECK ADD  CONSTRAINT [IDDOBRACUNRadniciPorezi1] FOREIGN KEY([IDPOREZ])
REFERENCES [POREZ] ([IDPOREZ])
GO

ALTER TABLE [dbo].[DDOBRACUNRadniciPorezi] CHECK CONSTRAINT [IDDOBRACUNRadniciPorezi1]
GO


ALTER TABLE [dbo].[DDOBRACUNRadniciPorezi]  WITH CHECK ADD  CONSTRAINT [IDDOBRACUNRadniciPorezi2] FOREIGN KEY([DDOBRACUNIDOBRACUN], [DDIDRADNIK])
REFERENCES [DDOBRACUNRadnici] ([DDOBRACUNIDOBRACUN], [DDIDRADNIK])
GO

ALTER TABLE [dbo].[DDOBRACUNRadniciPorezi] CHECK CONSTRAINT [IDDOBRACUNRadniciPorezi2]
GO


ALTER TABLE [dbo].[DDOBRACUNRadniciVrstePosla]  WITH CHECK ADD  CONSTRAINT [IDDOBRACUNRadniciVrstePosla1] FOREIGN KEY([DDIDVRSTAPOSLA])
REFERENCES [DDVRSTEPOSLA] ([DDIDVRSTAPOSLA])
GO

ALTER TABLE [dbo].[DDOBRACUNRadniciVrstePosla] CHECK CONSTRAINT [IDDOBRACUNRadniciVrstePosla1]
GO


ALTER TABLE [dbo].[DDOBRACUNRadniciVrstePosla]  WITH CHECK ADD  CONSTRAINT [IDDOBRACUNRadniciVrstePosla2] FOREIGN KEY([DDOBRACUNIDOBRACUN], [DDIDRADNIK])
REFERENCES [DDOBRACUNRadnici] ([DDOBRACUNIDOBRACUN], [DDIDRADNIK])
GO

ALTER TABLE [dbo].[DDOBRACUNRadniciVrstePosla] CHECK CONSTRAINT [IDDOBRACUNRadniciVrstePosla2]
GO


ALTER TABLE [dbo].[DDRADNIK]  WITH CHECK ADD  CONSTRAINT [IDDRADNIK1] FOREIGN KEY([OPCINARADAIDOPCINE])
REFERENCES [OPCINA] ([IDOPCINE])
GO

ALTER TABLE [dbo].[DDRADNIK] CHECK CONSTRAINT [IDDRADNIK1]
GO


ALTER TABLE [dbo].[DDRADNIK]  WITH CHECK ADD  CONSTRAINT [IDDRADNIK2] FOREIGN KEY([OPCINASTANOVANJAIDOPCINE])
REFERENCES [OPCINA] ([IDOPCINE])
GO

ALTER TABLE [dbo].[DDRADNIK] CHECK CONSTRAINT [IDDRADNIK2]
GO


ALTER TABLE [dbo].[DDRADNIK]  WITH CHECK ADD  CONSTRAINT [IDDRADNIK3] FOREIGN KEY([IDBANKE])
REFERENCES [BANKE] ([IDBANKE])
GO

ALTER TABLE [dbo].[DDRADNIK] CHECK CONSTRAINT [IDDRADNIK3]
GO


ALTER TABLE [dbo].[DOKUMENT]  WITH CHECK ADD  CONSTRAINT [IDOKUMENT1] FOREIGN KEY([IDTIPDOKUMENTA])
REFERENCES [TIPDOKUMENTA] ([IDTIPDOKUMENTA])
GO

ALTER TABLE [dbo].[DOKUMENT] CHECK CONSTRAINT [IDOKUMENT1]
GO


ALTER TABLE [dbo].[DOPRINOS]  WITH CHECK ADD  CONSTRAINT [IDOPRINOS1] FOREIGN KEY([IDVRSTADOPRINOS])
REFERENCES [VRSTADOPRINOS] ([IDVRSTADOPRINOS])
GO

ALTER TABLE [dbo].[DOPRINOS] CHECK CONSTRAINT [IDOPRINOS1]
GO


ALTER TABLE [dbo].[DOSIPZAGLAVLJELevel1]  WITH CHECK ADD  CONSTRAINT [IDOSIPZAGLAVLJELevel11] FOREIGN KEY([DOSIPIDENT], [DOSJMBG])
REFERENCES [DOSIPZAGLAVLJE] ([DOSIPIDENT], [DOSJMBG])
GO

ALTER TABLE [dbo].[DOSIPZAGLAVLJELevel1] CHECK CONSTRAINT [IDOSIPZAGLAVLJELevel11]
GO


ALTER TABLE [dbo].[ELEMENT]  WITH CHECK ADD  CONSTRAINT [IELEMENT1] FOREIGN KEY([IDOSNOVAOSIGURANJA])
REFERENCES [OSNOVAOSIGURANJA] ([IDOSNOVAOSIGURANJA])
GO

ALTER TABLE [dbo].[ELEMENT] CHECK CONSTRAINT [IELEMENT1]
GO


ALTER TABLE [dbo].[ELEMENT]  WITH CHECK ADD  CONSTRAINT [IELEMENT2] FOREIGN KEY([IDVRSTAELEMENTA])
REFERENCES [VRSTAELEMENT] ([IDVRSTAELEMENTA])
GO

ALTER TABLE [dbo].[ELEMENT] CHECK CONSTRAINT [IELEMENT2]
GO


ALTER TABLE [dbo].[EVIDENCIJA]  WITH CHECK ADD  CONSTRAINT [IEVIDENCIJA1] FOREIGN KEY([IDGODINE])
REFERENCES [GODINE] ([IDGODINE])
GO

ALTER TABLE [dbo].[EVIDENCIJA] CHECK CONSTRAINT [IEVIDENCIJA1]
GO


ALTER TABLE [dbo].[EVIDENCIJARADNICI]  WITH CHECK ADD  CONSTRAINT [IEVIDENCIJARADNICI1] FOREIGN KEY([IDRADNIK])
REFERENCES [RADNIK] ([IDRADNIK])
GO

ALTER TABLE [dbo].[EVIDENCIJARADNICI] CHECK CONSTRAINT [IEVIDENCIJARADNICI1]
GO


ALTER TABLE [dbo].[EVIDENCIJARADNICI]  WITH CHECK ADD  CONSTRAINT [IEVIDENCIJARADNICI2] FOREIGN KEY([MJESEC], [IDGODINE], [BROJEVIDENCIJE])
REFERENCES [EVIDENCIJA] ([MJESEC], [IDGODINE], [BROJEVIDENCIJE])
GO

ALTER TABLE [dbo].[EVIDENCIJARADNICI] CHECK CONSTRAINT [IEVIDENCIJARADNICI2]
GO


ALTER TABLE [dbo].[EVIDENCIJARADNICISATI]  WITH CHECK ADD  CONSTRAINT [IEVIDENCIJARADNICISATI1] FOREIGN KEY([PRVASMJENAIDSMJENE])
REFERENCES [SMJENE] ([IDSMJENE])
GO

ALTER TABLE [dbo].[EVIDENCIJARADNICISATI] CHECK CONSTRAINT [IEVIDENCIJARADNICISATI1]
GO


ALTER TABLE [dbo].[EVIDENCIJARADNICISATI]  WITH CHECK ADD  CONSTRAINT [IEVIDENCIJARADNICISATI2] FOREIGN KEY([DRUGASMJENAIDSMJENE])
REFERENCES [SMJENE] ([IDSMJENE])
GO

ALTER TABLE [dbo].[EVIDENCIJARADNICISATI] CHECK CONSTRAINT [IEVIDENCIJARADNICISATI2]
GO


ALTER TABLE [dbo].[EVIDENCIJARADNICISATI]  WITH CHECK ADD  CONSTRAINT [IEVIDENCIJARADNICISATI3] FOREIGN KEY([MJESEC], [IDGODINE], [BROJEVIDENCIJE], [IDRADNIK])
REFERENCES [EVIDENCIJARADNICI] ([MJESEC], [IDGODINE], [BROJEVIDENCIJE], [IDRADNIK])
GO

ALTER TABLE [dbo].[EVIDENCIJARADNICISATI] CHECK CONSTRAINT [IEVIDENCIJARADNICISATI3]
GO


ALTER TABLE [dbo].[GKSTAVKA]  WITH CHECK ADD  CONSTRAINT [IGKSTAVKA1] FOREIGN KEY([IDPARTNER])
REFERENCES [PARTNER] ([IDPARTNER])
GO

ALTER TABLE [dbo].[GKSTAVKA] CHECK CONSTRAINT [IGKSTAVKA1]
GO


ALTER TABLE [dbo].[GKSTAVKA]  WITH CHECK ADD  CONSTRAINT [IGKSTAVKA2] FOREIGN KEY([GKGODIDGODINE])
REFERENCES [GODINE] ([IDGODINE])
GO

ALTER TABLE [dbo].[GKSTAVKA] CHECK CONSTRAINT [IGKSTAVKA2]
GO


ALTER TABLE [dbo].[GKSTAVKA]  WITH CHECK ADD  CONSTRAINT [IGKSTAVKA3] FOREIGN KEY([IDORGJED])
REFERENCES [ORGJED] ([IDORGJED])
GO

ALTER TABLE [dbo].[GKSTAVKA] CHECK CONSTRAINT [IGKSTAVKA3]
GO


ALTER TABLE [dbo].[GKSTAVKA]  WITH CHECK ADD  CONSTRAINT [IGKSTAVKA4] FOREIGN KEY([IDKONTO])
REFERENCES [KONTO] ([IDKONTO])
GO

ALTER TABLE [dbo].[GKSTAVKA] CHECK CONSTRAINT [IGKSTAVKA4]
GO


ALTER TABLE [dbo].[GKSTAVKA]  WITH CHECK ADD  CONSTRAINT [IGKSTAVKA5] FOREIGN KEY([IDDOKUMENT])
REFERENCES [DOKUMENT] ([IDDOKUMENT])
GO

ALTER TABLE [dbo].[GKSTAVKA] CHECK CONSTRAINT [IGKSTAVKA5]
GO


ALTER TABLE [dbo].[GKSTAVKA]  WITH CHECK ADD  CONSTRAINT [IGKSTAVKA8] FOREIGN KEY([IDMJESTOTROSKA])
REFERENCES [MJESTOTROSKA] ([IDMJESTOTROSKA])
GO

ALTER TABLE [dbo].[GKSTAVKA] CHECK CONSTRAINT [IGKSTAVKA8]
GO


ALTER TABLE [dbo].[GOOBRACUN]  WITH CHECK ADD  CONSTRAINT [IGOOBRACUN1] FOREIGN KEY([IDRADNIK])
REFERENCES [RADNIK] ([IDRADNIK])
GO

ALTER TABLE [dbo].[GOOBRACUN] CHECK CONSTRAINT [IGOOBRACUN1]
GO


ALTER TABLE [dbo].[GRUPEKOEFLevel1]  WITH CHECK ADD  CONSTRAINT [IGRUPEKOEFLevel11] FOREIGN KEY([IDELEMENT])
REFERENCES [ELEMENT] ([IDELEMENT])
GO

ALTER TABLE [dbo].[GRUPEKOEFLevel1] CHECK CONSTRAINT [IGRUPEKOEFLevel11]
GO


ALTER TABLE [dbo].[GRUPEKOEFLevel1]  WITH CHECK ADD  CONSTRAINT [IGRUPEKOEFLevel12] FOREIGN KEY([IDGRUPEKOEF])
REFERENCES [GRUPEKOEF] ([IDGRUPEKOEF])
GO

ALTER TABLE [dbo].[GRUPEKOEFLevel1] CHECK CONSTRAINT [IGRUPEKOEFLevel12]
GO


ALTER TABLE [dbo].[GRUPEKOEFLevel1]  WITH CHECK ADD  CONSTRAINT [IGRUPEKOEFLevel13] FOREIGN KEY([IDMZOSTABLICE])
REFERENCES [MZOSTABLICE] ([IDMZOSTABLICE])
GO

ALTER TABLE [dbo].[GRUPEKOEFLevel1] CHECK CONSTRAINT [IGRUPEKOEFLevel13]
GO


ALTER TABLE [dbo].[IRA]  WITH CHECK ADD  CONSTRAINT [IIRA1] FOREIGN KEY([IRAPARTNERIDPARTNER])
REFERENCES [PARTNER] ([IDPARTNER])
GO

ALTER TABLE [dbo].[IRA] CHECK CONSTRAINT [IIRA1]
GO


ALTER TABLE [dbo].[IRA]  WITH CHECK ADD  CONSTRAINT [IIRA2] FOREIGN KEY([IRADOKIDDOKUMENT])
REFERENCES [DOKUMENT] ([IDDOKUMENT])
GO

ALTER TABLE [dbo].[IRA] CHECK CONSTRAINT [IIRA2]
GO


ALTER TABLE [dbo].[IRA]  WITH CHECK ADD  CONSTRAINT [IIRA3] FOREIGN KEY([IRAGODIDGODINE])
REFERENCES [GODINE] ([IDGODINE])
GO

ALTER TABLE [dbo].[IRA] CHECK CONSTRAINT [IIRA3]
GO


ALTER TABLE [dbo].[IRA]  WITH CHECK ADD  CONSTRAINT [IIRA4] FOREIGN KEY([IDTIPIRA])
REFERENCES [TIPIRA] ([IDTIPIRA])
GO

ALTER TABLE [dbo].[IRA] CHECK CONSTRAINT [IIRA4]
GO


ALTER TABLE [dbo].[KONTO]  WITH CHECK ADD  CONSTRAINT [IKONTO1] FOREIGN KEY([IDAKTIVNOST])
REFERENCES [AKTIVNOST] ([IDAKTIVNOST])
GO

ALTER TABLE [dbo].[KONTO] CHECK CONSTRAINT [IKONTO1]
GO


ALTER TABLE [dbo].[KORISNIKLevel1]  WITH CHECK ADD  CONSTRAINT [IKORISNIKLevel11] FOREIGN KEY([SIFRAIZVORA])
REFERENCES [IZVORDOKUMENTA] ([SIFRAIZVORA])
GO

ALTER TABLE [dbo].[KORISNIKLevel1] CHECK CONSTRAINT [IKORISNIKLevel11]
GO


ALTER TABLE [dbo].[KORISNIKLevel1]  WITH CHECK ADD  CONSTRAINT [IKORISNIKLevel12] FOREIGN KEY([IDKORISNIK])
REFERENCES [KORISNIK] ([IDKORISNIK])
GO

ALTER TABLE [dbo].[KORISNIKLevel1] CHECK CONSTRAINT [IKORISNIKLevel12]
GO


ALTER TABLE [dbo].[ObracunDoprinosi]  WITH CHECK ADD  CONSTRAINT [IOBRACUN31] FOREIGN KEY([IDDOPRINOS])
REFERENCES [DOPRINOS] ([IDDOPRINOS])
GO

ALTER TABLE [dbo].[ObracunDoprinosi] CHECK CONSTRAINT [IOBRACUN31]
GO


ALTER TABLE [dbo].[ObracunDoprinosi]  WITH CHECK ADD  CONSTRAINT [IOBRACUN32] FOREIGN KEY([IDOBRACUN], [IDRADNIK])
REFERENCES [ObracunRadnici] ([IDOBRACUN], [IDRADNIK])
GO

ALTER TABLE [dbo].[ObracunDoprinosi] CHECK CONSTRAINT [IOBRACUN32]
GO


ALTER TABLE [dbo].[ObracunElementi]  WITH CHECK ADD  CONSTRAINT [IOBRACUNOBRACUNLevel1Elementi1] FOREIGN KEY([IDELEMENT])
REFERENCES [ELEMENT] ([IDELEMENT])
GO

ALTER TABLE [dbo].[ObracunElementi] CHECK CONSTRAINT [IOBRACUNOBRACUNLevel1Elementi1]
GO


ALTER TABLE [dbo].[ObracunElementi]  WITH CHECK ADD  CONSTRAINT [IOBRACUNOBRACUNLevel1Elementi2] FOREIGN KEY([IDOBRACUN], [IDRADNIK])
REFERENCES [ObracunRadnici] ([IDOBRACUN], [IDRADNIK])
GO

ALTER TABLE [dbo].[ObracunElementi] CHECK CONSTRAINT [IOBRACUNOBRACUNLevel1Elementi2]
GO


ALTER TABLE [dbo].[OBRACUNKrediti]  WITH CHECK ADD  CONSTRAINT [IOBRACUNKrediti] FOREIGN KEY([IDKREDITOR])
REFERENCES [KREDITOR] ([IDKREDITOR])
GO

ALTER TABLE [dbo].[OBRACUNKrediti] CHECK CONSTRAINT [IOBRACUNKrediti]
GO


ALTER TABLE [dbo].[OBRACUNKrediti]  WITH CHECK ADD  CONSTRAINT [IOBRACUNOBRACUNLevel1ObracunK2] FOREIGN KEY([IDOBRACUN], [IDRADNIK])
REFERENCES [ObracunRadnici] ([IDOBRACUN], [IDRADNIK])
GO

ALTER TABLE [dbo].[OBRACUNKrediti] CHECK CONSTRAINT [IOBRACUNOBRACUNLevel1ObracunK2]
GO


ALTER TABLE [dbo].[OBRACUNOBRACUNLevel1ObracunKrizni]  WITH CHECK ADD  CONSTRAINT [IOBRACUNOBRACUNLevel1ObracunK3] FOREIGN KEY([IDKRIZNIPOREZ])
REFERENCES [KRIZNIPOREZ] ([IDKRIZNIPOREZ])
GO

ALTER TABLE [dbo].[OBRACUNOBRACUNLevel1ObracunKrizni] CHECK CONSTRAINT [IOBRACUNOBRACUNLevel1ObracunK3]
GO


ALTER TABLE [dbo].[OBRACUNOBRACUNLevel1ObracunKrizni]  WITH CHECK ADD  CONSTRAINT [IOBRACUNOBRACUNLevel1ObracunK4] FOREIGN KEY([IDOBRACUN], [IDRADNIK])
REFERENCES [ObracunRadnici] ([IDOBRACUN], [IDRADNIK])
GO

ALTER TABLE [dbo].[OBRACUNOBRACUNLevel1ObracunKrizni] CHECK CONSTRAINT [IOBRACUNOBRACUNLevel1ObracunK4]
GO


ALTER TABLE [dbo].[OBRACUNObustave]  WITH CHECK ADD  CONSTRAINT [IOBRACUNOBRACUNLevel1Level111] FOREIGN KEY([IDOBUSTAVA])
REFERENCES [OBUSTAVA] ([IDOBUSTAVA])
GO

ALTER TABLE [dbo].[OBRACUNObustave] CHECK CONSTRAINT [IOBRACUNOBRACUNLevel1Level111]
GO


ALTER TABLE [dbo].[OBRACUNObustave]  WITH CHECK ADD  CONSTRAINT [IOBRACUNOBRACUNLevel1Level112] FOREIGN KEY([IDOBRACUN], [IDRADNIK])
REFERENCES [ObracunRadnici] ([IDOBRACUN], [IDRADNIK])
GO

ALTER TABLE [dbo].[OBRACUNObustave] CHECK CONSTRAINT [IOBRACUNOBRACUNLevel1Level112]
GO


ALTER TABLE [dbo].[ObracunOlaksice]  WITH CHECK ADD  CONSTRAINT [IOBRACUN61] FOREIGN KEY([IDOLAKSICE])
REFERENCES [OLAKSICE] ([IDOLAKSICE])
GO

ALTER TABLE [dbo].[ObracunOlaksice] CHECK CONSTRAINT [IOBRACUN61]
GO


ALTER TABLE [dbo].[ObracunOlaksice]  WITH CHECK ADD  CONSTRAINT [IOBRACUN62] FOREIGN KEY([IDOBRACUN], [IDRADNIK])
REFERENCES [ObracunRadnici] ([IDOBRACUN], [IDRADNIK])
GO

ALTER TABLE [dbo].[ObracunOlaksice] CHECK CONSTRAINT [IOBRACUN62]
GO


ALTER TABLE [dbo].[ObracunPorezi]  WITH CHECK ADD  CONSTRAINT [IOBRACUN41] FOREIGN KEY([IDPOREZ])
REFERENCES [POREZ] ([IDPOREZ])
GO

ALTER TABLE [dbo].[ObracunPorezi] CHECK CONSTRAINT [IOBRACUN41]
GO


ALTER TABLE [dbo].[ObracunPorezi]  WITH CHECK ADD  CONSTRAINT [IOBRACUN42] FOREIGN KEY([IDOBRACUN], [IDRADNIK])
REFERENCES [ObracunRadnici] ([IDOBRACUN], [IDRADNIK])
GO

ALTER TABLE [dbo].[ObracunPorezi] CHECK CONSTRAINT [IOBRACUN42]
GO


ALTER TABLE [dbo].[ObracunRadnici]  WITH CHECK ADD  CONSTRAINT [IOBRACUN12] FOREIGN KEY([IDRADNIK])
REFERENCES [RADNIK] ([IDRADNIK])
GO

ALTER TABLE [dbo].[ObracunRadnici] CHECK CONSTRAINT [IOBRACUN12]
GO


ALTER TABLE [dbo].[ObracunRadnici]  WITH CHECK ADD  CONSTRAINT [IOBRACUN13] FOREIGN KEY([IDOBRACUN])
REFERENCES [OBRACUN] ([IDOBRACUN])
GO

ALTER TABLE [dbo].[ObracunRadnici] CHECK CONSTRAINT [IOBRACUN13]
GO


ALTER TABLE [dbo].[OBUSTAVA]  WITH CHECK ADD  CONSTRAINT [IOBUSTAVA1] FOREIGN KEY([VRSTAOBUSTAVE])
REFERENCES [VRSTEOBUSTAVA] ([VRSTAOBUSTAVE])
GO

ALTER TABLE [dbo].[OBUSTAVA] CHECK CONSTRAINT [IOBUSTAVA1]
GO


ALTER TABLE [dbo].[OLAKSICE]  WITH CHECK ADD  CONSTRAINT [IOLAKSICE1] FOREIGN KEY([IDTIPOLAKSICE])
REFERENCES [TIPOLAKSICE] ([IDTIPOLAKSICE])
GO

ALTER TABLE [dbo].[OLAKSICE] CHECK CONSTRAINT [IOLAKSICE1]
GO


ALTER TABLE [dbo].[OLAKSICE]  WITH CHECK ADD  CONSTRAINT [IOLAKSICE2] FOREIGN KEY([IDGRUPEOLAKSICA])
REFERENCES [GRUPEOLAKSICA] ([IDGRUPEOLAKSICA])
GO

ALTER TABLE [dbo].[OLAKSICE] CHECK CONSTRAINT [IOLAKSICE2]
GO


ALTER TABLE [dbo].[OSNOVAOSIGURANJA]  WITH CHECK ADD  CONSTRAINT [IOSNOVAOSIGURANJA1] FOREIGN KEY([ZAMOOIDOSNOVAOSIGURANJA])
REFERENCES [OSNOVAOSIGURANJA] ([IDOSNOVAOSIGURANJA])
GO

ALTER TABLE [dbo].[OSNOVAOSIGURANJA] CHECK CONSTRAINT [IOSNOVAOSIGURANJA1]
GO


ALTER TABLE [dbo].[PARTNERZADUZENJE]  WITH CHECK ADD  CONSTRAINT [IPARTNERZADUZENJE1] FOREIGN KEY([IDPROIZVOD])
REFERENCES [PROIZVOD] ([IDPROIZVOD])
GO

ALTER TABLE [dbo].[PARTNERZADUZENJE] CHECK CONSTRAINT [IPARTNERZADUZENJE1]
GO


ALTER TABLE [dbo].[PARTNERZADUZENJE]  WITH CHECK ADD  CONSTRAINT [IPARTNERZADUZENJE2] FOREIGN KEY([IDPARTNER])
REFERENCES [PARTNER] ([IDPARTNER])
GO

ALTER TABLE [dbo].[PARTNERZADUZENJE] CHECK CONSTRAINT [IPARTNERZADUZENJE2]
GO


ALTER TABLE [dbo].[PLAN]  WITH CHECK ADD  CONSTRAINT [IPLAN1] FOREIGN KEY([PLANGODINAIDGODINE])
REFERENCES [GODINE] ([IDGODINE])
GO

ALTER TABLE [dbo].[PLAN] CHECK CONSTRAINT [IPLAN1]
GO


ALTER TABLE [dbo].[PLANORG]  WITH CHECK ADD  CONSTRAINT [IPLANORG1] FOREIGN KEY([PLANOJIDORGJED])
REFERENCES [ORGJED] ([IDORGJED])
GO

ALTER TABLE [dbo].[PLANORG] CHECK CONSTRAINT [IPLANORG1]
GO


ALTER TABLE [dbo].[PLANORG]  WITH CHECK ADD  CONSTRAINT [IPLANORG2] FOREIGN KEY([IDPLAN], [PLANGODINAIDGODINE])
REFERENCES [PLAN] ([IDPLAN], [PLANGODINAIDGODINE])
GO

ALTER TABLE [dbo].[PLANORG] CHECK CONSTRAINT [IPLANORG2]
GO


ALTER TABLE [dbo].[PLANORGKON]  WITH CHECK ADD  CONSTRAINT [IPLANORGKON1] FOREIGN KEY([PLANKONTOIDKONTO])
REFERENCES [KONTO] ([IDKONTO])
GO

ALTER TABLE [dbo].[PLANORGKON] CHECK CONSTRAINT [IPLANORGKON1]
GO


ALTER TABLE [dbo].[PLANORGKON]  WITH CHECK ADD  CONSTRAINT [IPLANORGKON2] FOREIGN KEY([IDPLAN], [PLANGODINAIDGODINE], [PLANOJIDORGJED])
REFERENCES [PLANORG] ([IDPLAN], [PLANGODINAIDGODINE], [PLANOJIDORGJED])
GO

ALTER TABLE [dbo].[PLANORGKON] CHECK CONSTRAINT [IPLANORGKON2]
GO


ALTER TABLE [dbo].[PROIZVOD]  WITH CHECK ADD  CONSTRAINT [IPROIZVOD1] FOREIGN KEY([FINPOREZIDPOREZ])
REFERENCES [FINPOREZ] ([FINPOREZIDPOREZ])
GO

ALTER TABLE [dbo].[PROIZVOD] CHECK CONSTRAINT [IPROIZVOD1]
GO


ALTER TABLE [dbo].[PROIZVOD]  WITH CHECK ADD  CONSTRAINT [IPROIZVOD2] FOREIGN KEY([IDJEDINICAMJERE])
REFERENCES [JEDINICAMJERE] ([IDJEDINICAMJERE])
GO

ALTER TABLE [dbo].[PROIZVOD] CHECK CONSTRAINT [IPROIZVOD2]
GO


ALTER TABLE [dbo].[PRPLACEPRPLACEELEMENTI]  WITH CHECK ADD  CONSTRAINT [IPRPLACEPRPLACEELEMENTI1] FOREIGN KEY([IDELEMENT])
REFERENCES [ELEMENT] ([IDELEMENT])
GO

ALTER TABLE [dbo].[PRPLACEPRPLACEELEMENTI] CHECK CONSTRAINT [IPRPLACEPRPLACEELEMENTI1]
GO


ALTER TABLE [dbo].[PRPLACEPRPLACEELEMENTI]  WITH CHECK ADD  CONSTRAINT [IPRPLACEPRPLACEELEMENTI2] FOREIGN KEY([PRPLACEID], [PRPLACEZAMJESEC], [PRPLACEZAGODINU])
REFERENCES [PRPLACE] ([PRPLACEID], [PRPLACEZAMJESEC], [PRPLACEZAGODINU])
GO

ALTER TABLE [dbo].[PRPLACEPRPLACEELEMENTI] CHECK CONSTRAINT [IPRPLACEPRPLACEELEMENTI2]
GO


ALTER TABLE [dbo].[PRPLACEPRPLACEELEMENTIRADNIK]  WITH CHECK ADD  CONSTRAINT [IPRPLACEPRPLACEELEMENTIRADNIK1] FOREIGN KEY([IDRADNIK])
REFERENCES [RADNIK] ([IDRADNIK])
GO

ALTER TABLE [dbo].[PRPLACEPRPLACEELEMENTIRADNIK] CHECK CONSTRAINT [IPRPLACEPRPLACEELEMENTIRADNIK1]
GO


ALTER TABLE [dbo].[PRPLACEPRPLACEELEMENTIRADNIK]  WITH CHECK ADD  CONSTRAINT [IPRPLACEPRPLACEELEMENTIRADNIK2] FOREIGN KEY([PRPLACEID], [PRPLACEZAMJESEC], [PRPLACEZAGODINU], [IDELEMENT])
REFERENCES [PRPLACEPRPLACEELEMENTI] ([PRPLACEID], [PRPLACEZAMJESEC], [PRPLACEZAGODINU], [IDELEMENT])
GO

ALTER TABLE [dbo].[PRPLACEPRPLACEELEMENTIRADNIK] CHECK CONSTRAINT [IPRPLACEPRPLACEELEMENTIRADNIK2]
GO


ALTER TABLE [dbo].[RACUN]  WITH CHECK ADD  CONSTRAINT [IRACUN1] FOREIGN KEY([RACUNGODINAIDGODINE])
REFERENCES [GODINE] ([IDGODINE])
GO

ALTER TABLE [dbo].[RACUN] CHECK CONSTRAINT [IRACUN1]
GO


ALTER TABLE [dbo].[RACUN]  WITH CHECK ADD  CONSTRAINT [IRACUN2] FOREIGN KEY([IDPARTNER])
REFERENCES [PARTNER] ([IDPARTNER])
GO

ALTER TABLE [dbo].[RACUN] CHECK CONSTRAINT [IRACUN2]
GO


ALTER TABLE [dbo].[RACUNRacunStavke]  WITH CHECK ADD  CONSTRAINT [IRACUNRacunStavke1] FOREIGN KEY([IDPROIZVOD])
REFERENCES [PROIZVOD] ([IDPROIZVOD])
GO

ALTER TABLE [dbo].[RACUNRacunStavke] CHECK CONSTRAINT [IRACUNRacunStavke1]
GO


ALTER TABLE [dbo].[RACUNRacunStavke]  WITH CHECK ADD  CONSTRAINT [IRACUNRacunStavke2] FOREIGN KEY([IDRACUN], [RACUNGODINAIDGODINE])
REFERENCES [RACUN] ([IDRACUN], [RACUNGODINAIDGODINE])
GO

ALTER TABLE [dbo].[RACUNRacunStavke] CHECK CONSTRAINT [IRACUNRacunStavke2]
GO


ALTER TABLE [dbo].[RADNIK]  WITH CHECK ADD  CONSTRAINT [IRADNIK1] FOREIGN KEY([RADNIKPOREZIDOPRINOSIDSKUPPOREZAIDOPRINOSA])
REFERENCES [SKUPPOREZAIDOPRINOSA] ([IDSKUPPOREZAIDOPRINOSA])
GO

ALTER TABLE [dbo].[RADNIK] CHECK CONSTRAINT [IRADNIK1]
GO


ALTER TABLE [dbo].[RADNIK]  WITH CHECK ADD  CONSTRAINT [IRADNIK10] FOREIGN KEY([IDORGDIO])
REFERENCES [ORGDIO] ([IDORGDIO])
GO

ALTER TABLE [dbo].[RADNIK] CHECK CONSTRAINT [IRADNIK10]
GO


ALTER TABLE [dbo].[RADNIK]  WITH CHECK ADD  CONSTRAINT [IRADNIK11] FOREIGN KEY([IDBENEFICIRANI])
REFERENCES [BENEFICIRANI] ([IDBENEFICIRANI])
GO

ALTER TABLE [dbo].[RADNIK] CHECK CONSTRAINT [IRADNIK11]
GO


ALTER TABLE [dbo].[RADNIK]  WITH CHECK ADD  CONSTRAINT [IRADNIK12] FOREIGN KEY([IDBANKE])
REFERENCES [BANKE] ([IDBANKE])
GO

ALTER TABLE [dbo].[RADNIK] CHECK CONSTRAINT [IRADNIK12]
GO


ALTER TABLE [dbo].[RADNIK]  WITH CHECK ADD  CONSTRAINT [IRADNIK13] FOREIGN KEY([IDSPOL])
REFERENCES [SPOL] ([IDSPOL])
GO

ALTER TABLE [dbo].[RADNIK] CHECK CONSTRAINT [IRADNIK13]
GO


ALTER TABLE [dbo].[RADNIK]  WITH CHECK ADD  CONSTRAINT [IRADNIK14] FOREIGN KEY([IDIPIDENT])
REFERENCES [IPIDENT] ([IDIPIDENT])
GO

ALTER TABLE [dbo].[RADNIK] CHECK CONSTRAINT [IRADNIK14]
GO


ALTER TABLE [dbo].[RADNIK]  WITH CHECK ADD  CONSTRAINT [IRADNIK16] FOREIGN KEY([IDUGOVORORADU])
REFERENCES [UGOVORORADU] ([IDUGOVORORADU])
GO

ALTER TABLE [dbo].[RADNIK] CHECK CONSTRAINT [IRADNIK16]
GO


ALTER TABLE [dbo].[RADNIK]  WITH CHECK ADD  CONSTRAINT [IRADNIK17] FOREIGN KEY([IDDRZAVLJANSTVO])
REFERENCES [DRZAVLJANSTVO] ([IDDRZAVLJANSTVO])
GO

ALTER TABLE [dbo].[RADNIK] CHECK CONSTRAINT [IRADNIK17]
GO


ALTER TABLE [dbo].[RADNIK]  WITH CHECK ADD  CONSTRAINT [IRADNIK2] FOREIGN KEY([OPCINARADAIDOPCINE])
REFERENCES [OPCINA] ([IDOPCINE])
GO

ALTER TABLE [dbo].[RADNIK] CHECK CONSTRAINT [IRADNIK2]
GO


ALTER TABLE [dbo].[RADNIK]  WITH CHECK ADD  CONSTRAINT [IRADNIK3] FOREIGN KEY([OPCINASTANOVANJAIDOPCINE])
REFERENCES [OPCINA] ([IDOPCINE])
GO

ALTER TABLE [dbo].[RADNIK] CHECK CONSTRAINT [IRADNIK3]
GO


ALTER TABLE [dbo].[RADNIK]  WITH CHECK ADD  CONSTRAINT [IRADNIK4] FOREIGN KEY([IDBRACNOSTANJE])
REFERENCES [BRACNOSTANJE] ([IDBRACNOSTANJE])
GO

ALTER TABLE [dbo].[RADNIK] CHECK CONSTRAINT [IRADNIK4]
GO


ALTER TABLE [dbo].[RADNIK]  WITH CHECK ADD  CONSTRAINT [IRADNIK5] FOREIGN KEY([IDSTRUKA])
REFERENCES [STRUKA] ([IDSTRUKA])
GO

ALTER TABLE [dbo].[RADNIK] CHECK CONSTRAINT [IRADNIK5]
GO


ALTER TABLE [dbo].[RADNIK]  WITH CHECK ADD  CONSTRAINT [IRADNIK6] FOREIGN KEY([TRENUTNASTRUCNASPREMAIDSTRUCNASPREMA])
REFERENCES [STRUCNASPREMA] ([IDSTRUCNASPREMA])
GO

ALTER TABLE [dbo].[RADNIK] CHECK CONSTRAINT [IRADNIK6]
GO


ALTER TABLE [dbo].[RADNIK]  WITH CHECK ADD  CONSTRAINT [IRADNIK7] FOREIGN KEY([POTREBNASTRUCNASPREMAIDSTRUCNASPREMA])
REFERENCES [STRUCNASPREMA] ([IDSTRUCNASPREMA])
GO

ALTER TABLE [dbo].[RADNIK] CHECK CONSTRAINT [IRADNIK7]
GO


ALTER TABLE [dbo].[RADNIK]  WITH CHECK ADD  CONSTRAINT [IRADNIK8] FOREIGN KEY([IDRADNOMJESTO])
REFERENCES [RADNOMJESTO] ([IDRADNOMJESTO])
GO

ALTER TABLE [dbo].[RADNIK] CHECK CONSTRAINT [IRADNIK8]
GO


ALTER TABLE [dbo].[RADNIK]  WITH CHECK ADD  CONSTRAINT [IRADNIK9] FOREIGN KEY([IDTITULA])
REFERENCES [TITULA] ([IDTITULA])
GO

ALTER TABLE [dbo].[RADNIK] CHECK CONSTRAINT [IRADNIK9]
GO


ALTER TABLE [dbo].[RADNIKBruto]  WITH CHECK ADD  CONSTRAINT [IRADNIKLevel41] FOREIGN KEY([BRUTOELEMENTIDELEMENT])
REFERENCES [ELEMENT] ([IDELEMENT])
GO

ALTER TABLE [dbo].[RADNIKBruto] CHECK CONSTRAINT [IRADNIKLevel41]
GO


ALTER TABLE [dbo].[RADNIKBruto]  WITH CHECK ADD  CONSTRAINT [IRADNIKLevel42] FOREIGN KEY([IDRADNIK])
REFERENCES [RADNIK] ([IDRADNIK])
GO

ALTER TABLE [dbo].[RADNIKBruto] CHECK CONSTRAINT [IRADNIKLevel42]
GO


ALTER TABLE [dbo].[RADNIKKrediti]  WITH CHECK ADD  CONSTRAINT [IRADNIKKrediti1] FOREIGN KEY([ZADKREDITIIDKREDITOR])
REFERENCES [KREDITOR] ([IDKREDITOR])
GO

ALTER TABLE [dbo].[RADNIKKrediti] CHECK CONSTRAINT [IRADNIKKrediti1]
GO


ALTER TABLE [dbo].[RADNIKKrediti]  WITH CHECK ADD  CONSTRAINT [IRADNIKKrediti2] FOREIGN KEY([IDRADNIK])
REFERENCES [RADNIK] ([IDRADNIK])
GO

ALTER TABLE [dbo].[RADNIKKrediti] CHECK CONSTRAINT [IRADNIKKrediti2]
GO


ALTER TABLE [dbo].[RADNIKLevel7]  WITH CHECK ADD  CONSTRAINT [IRADNIKLevel71] FOREIGN KEY([IDGRUPEKOEF])
REFERENCES [GRUPEKOEF] ([IDGRUPEKOEF])
GO

ALTER TABLE [dbo].[RADNIKLevel7] CHECK CONSTRAINT [IRADNIKLevel71]
GO


ALTER TABLE [dbo].[RADNIKLevel7]  WITH CHECK ADD  CONSTRAINT [IRADNIKLevel72] FOREIGN KEY([IDRADNIK])
REFERENCES [RADNIK] ([IDRADNIK])
GO

ALTER TABLE [dbo].[RADNIKLevel7] CHECK CONSTRAINT [IRADNIKLevel72]
GO


ALTER TABLE [dbo].[RADNIKNeto]  WITH CHECK ADD  CONSTRAINT [IRADNIKZaduzeniNeto1] FOREIGN KEY([NETOELEMENTIDELEMENT])
REFERENCES [ELEMENT] ([IDELEMENT])
GO

ALTER TABLE [dbo].[RADNIKNeto] CHECK CONSTRAINT [IRADNIKZaduzeniNeto1]
GO


ALTER TABLE [dbo].[RADNIKNeto]  WITH CHECK ADD  CONSTRAINT [IRADNIKZaduzeniNeto2] FOREIGN KEY([IDRADNIK])
REFERENCES [RADNIK] ([IDRADNIK])
GO

ALTER TABLE [dbo].[RADNIKNeto] CHECK CONSTRAINT [IRADNIKZaduzeniNeto2]
GO


ALTER TABLE [dbo].[RADNIKObustava]  WITH CHECK ADD  CONSTRAINT [IRADNIKLevel61] FOREIGN KEY([ZADOBUSTAVAIDOBUSTAVA])
REFERENCES [OBUSTAVA] ([IDOBUSTAVA])
GO

ALTER TABLE [dbo].[RADNIKObustava] CHECK CONSTRAINT [IRADNIKLevel61]
GO


ALTER TABLE [dbo].[RADNIKObustava]  WITH CHECK ADD  CONSTRAINT [IRADNIKLevel62] FOREIGN KEY([IDRADNIK])
REFERENCES [RADNIK] ([IDRADNIK])
GO

ALTER TABLE [dbo].[RADNIKObustava] CHECK CONSTRAINT [IRADNIKLevel62]
GO


ALTER TABLE [dbo].[RADNIKOdbitak]  WITH CHECK ADD  CONSTRAINT [IRADNIK32] FOREIGN KEY([OSOBNIODBITAKZADUZENJEIDOSOBNIODBITAK])
REFERENCES [OSOBNIODBITAK] ([IDOSOBNIODBITAK])
GO

ALTER TABLE [dbo].[RADNIKOdbitak] CHECK CONSTRAINT [IRADNIK32]
GO


ALTER TABLE [dbo].[RADNIKOdbitak]  WITH CHECK ADD  CONSTRAINT [IRADNIK33] FOREIGN KEY([IDRADNIK])
REFERENCES [RADNIK] ([IDRADNIK])
GO

ALTER TABLE [dbo].[RADNIKOdbitak] CHECK CONSTRAINT [IRADNIK33]
GO


ALTER TABLE [dbo].[RADNIKOlaksica]  WITH CHECK ADD  CONSTRAINT [IRADNIK43] FOREIGN KEY([IDRADNIK])
REFERENCES [RADNIK] ([IDRADNIK])
GO

ALTER TABLE [dbo].[RADNIKOlaksica] CHECK CONSTRAINT [IRADNIK43]
GO


ALTER TABLE [dbo].[RADNIKOlaksica]  WITH CHECK ADD  CONSTRAINT [IRADNIKOlaksica] FOREIGN KEY([ZADOLAKSICEIDOLAKSICE])
REFERENCES [OLAKSICE] ([IDOLAKSICE])
GO

ALTER TABLE [dbo].[RADNIKOlaksica] CHECK CONSTRAINT [IRADNIKOlaksica]
GO


ALTER TABLE [dbo].[RSMA]  WITH CHECK ADD  CONSTRAINT [IRSMA1] FOREIGN KEY([IDRSVRSTEOBRACUNA])
REFERENCES [RSVRSTEOBRACUNA] ([IDRSVRSTEOBRACUNA])
GO

ALTER TABLE [dbo].[RSMA] CHECK CONSTRAINT [IRSMA1]
GO


ALTER TABLE [dbo].[RSMA]  WITH CHECK ADD  CONSTRAINT [IRSMA2] FOREIGN KEY([IDRSVRSTEOBVEZNIKA])
REFERENCES [RSVRSTEOBVEZNIKA] ([IDRSVRSTEOBVEZNIKA])
GO

ALTER TABLE [dbo].[RSMA] CHECK CONSTRAINT [IRSMA2]
GO


ALTER TABLE [dbo].[RSMA]  WITH CHECK ADD  CONSTRAINT [IRSMA3] FOREIGN KEY([IDOBRACUN])
REFERENCES [OBRACUN] ([IDOBRACUN])
GO

ALTER TABLE [dbo].[RSMA] CHECK CONSTRAINT [IRSMA3]
GO


ALTER TABLE [dbo].[RSMA1]  WITH CHECK ADD  CONSTRAINT [IRSMA12] FOREIGN KEY([IDENTIFIKATOROBRASCA])
REFERENCES [RSMA] ([IDENTIFIKATOROBRASCA])
GO

ALTER TABLE [dbo].[RSMA1] CHECK CONSTRAINT [IRSMA12]
GO


ALTER TABLE [dbo].[SHEMADD]  WITH CHECK ADD  CONSTRAINT [ISHEMADD1] FOREIGN KEY([SHEMADDOJIDORGJED])
REFERENCES [ORGJED] ([IDORGJED])
GO

ALTER TABLE [dbo].[SHEMADD] CHECK CONSTRAINT [ISHEMADD1]
GO


ALTER TABLE [dbo].[SHEMADDSHEMADDDOPRINOS]  WITH CHECK ADD  CONSTRAINT [ISHEMADDSHEMADDDOPRINOS1] FOREIGN KEY([STRANEDOPIDSTRANEKNJIZENJA])
REFERENCES [STRANEKNJIZENJA] ([IDSTRANEKNJIZENJA])
GO

ALTER TABLE [dbo].[SHEMADDSHEMADDDOPRINOS] CHECK CONSTRAINT [ISHEMADDSHEMADDDOPRINOS1]
GO


ALTER TABLE [dbo].[SHEMADDSHEMADDDOPRINOS]  WITH CHECK ADD  CONSTRAINT [ISHEMADDSHEMADDDOPRINOS2] FOREIGN KEY([MTDOPIDMJESTOTROSKA])
REFERENCES [MJESTOTROSKA] ([IDMJESTOTROSKA])
GO

ALTER TABLE [dbo].[SHEMADDSHEMADDDOPRINOS] CHECK CONSTRAINT [ISHEMADDSHEMADDDOPRINOS2]
GO


ALTER TABLE [dbo].[SHEMADDSHEMADDDOPRINOS]  WITH CHECK ADD  CONSTRAINT [ISHEMADDSHEMADDDOPRINOS3] FOREIGN KEY([KONTODOPIDKONTO])
REFERENCES [KONTO] ([IDKONTO])
GO

ALTER TABLE [dbo].[SHEMADDSHEMADDDOPRINOS] CHECK CONSTRAINT [ISHEMADDSHEMADDDOPRINOS3]
GO


ALTER TABLE [dbo].[SHEMADDSHEMADDDOPRINOS]  WITH CHECK ADD  CONSTRAINT [ISHEMADDSHEMADDDOPRINOS4] FOREIGN KEY([SHEMADDDOPRINOSIDDOPRINOS])
REFERENCES [DOPRINOS] ([IDDOPRINOS])
GO

ALTER TABLE [dbo].[SHEMADDSHEMADDDOPRINOS] CHECK CONSTRAINT [ISHEMADDSHEMADDDOPRINOS4]
GO


ALTER TABLE [dbo].[SHEMADDSHEMADDDOPRINOS]  WITH CHECK ADD  CONSTRAINT [ISHEMADDSHEMADDDOPRINOS5] FOREIGN KEY([IDSHEMADD])
REFERENCES [SHEMADD] ([IDSHEMADD])
GO

ALTER TABLE [dbo].[SHEMADDSHEMADDDOPRINOS] CHECK CONSTRAINT [ISHEMADDSHEMADDDOPRINOS5]
GO


ALTER TABLE [dbo].[SHEMADDSHEMADDSTANDARD]  WITH CHECK ADD  CONSTRAINT [ISHEMADDSHEMADDSTANDARD1] FOREIGN KEY([IDDDVRSTEIZNOSA])
REFERENCES [DDVRSTEIZNOSA] ([IDDDVRSTEIZNOSA])
GO

ALTER TABLE [dbo].[SHEMADDSHEMADDSTANDARD] CHECK CONSTRAINT [ISHEMADDSHEMADDSTANDARD1]
GO


ALTER TABLE [dbo].[SHEMADDSHEMADDSTANDARD]  WITH CHECK ADD  CONSTRAINT [ISHEMADDSHEMADDSTANDARD2] FOREIGN KEY([IDSHEMADD])
REFERENCES [SHEMADD] ([IDSHEMADD])
GO

ALTER TABLE [dbo].[SHEMADDSHEMADDSTANDARD] CHECK CONSTRAINT [ISHEMADDSHEMADDSTANDARD2]
GO


ALTER TABLE [dbo].[SHEMADDSHEMADDSTANDARD]  WITH CHECK ADD  CONSTRAINT [ISHEMADDSHEMADDSTANDARD3] FOREIGN KEY([KONTODDVRSTAIZNOSAIDKONTO])
REFERENCES [KONTO] ([IDKONTO])
GO

ALTER TABLE [dbo].[SHEMADDSHEMADDSTANDARD] CHECK CONSTRAINT [ISHEMADDSHEMADDSTANDARD3]
GO


ALTER TABLE [dbo].[SHEMADDSHEMADDSTANDARD]  WITH CHECK ADD  CONSTRAINT [ISHEMADDSHEMADDSTANDARD4] FOREIGN KEY([MTDDVRSTAIZNOSAIDMJESTOTROSKA])
REFERENCES [MJESTOTROSKA] ([IDMJESTOTROSKA])
GO

ALTER TABLE [dbo].[SHEMADDSHEMADDSTANDARD] CHECK CONSTRAINT [ISHEMADDSHEMADDSTANDARD4]
GO


ALTER TABLE [dbo].[SHEMADDSHEMADDSTANDARD]  WITH CHECK ADD  CONSTRAINT [ISHEMADDSHEMADDSTANDARD5] FOREIGN KEY([STRANEDDVRSTEIZNOSAIDSTRANEKNJIZENJA])
REFERENCES [STRANEKNJIZENJA] ([IDSTRANEKNJIZENJA])
GO

ALTER TABLE [dbo].[SHEMADDSHEMADDSTANDARD] CHECK CONSTRAINT [ISHEMADDSHEMADDSTANDARD5]
GO


ALTER TABLE [dbo].[SHEMAIRA]  WITH CHECK ADD  CONSTRAINT [ISHEMAIRA1] FOREIGN KEY([SHEMAIRADOKIDDOKUMENT])
REFERENCES [DOKUMENT] ([IDDOKUMENT])
GO

ALTER TABLE [dbo].[SHEMAIRA] CHECK CONSTRAINT [ISHEMAIRA1]
GO


ALTER TABLE [dbo].[SHEMAIRASHEMAIRAKONTIRANJE]  WITH CHECK ADD  CONSTRAINT [ISHEMAIRASHEMAIRAKONTIRANJE1] FOREIGN KEY([SHEMAIRAOJIDORGJED])
REFERENCES [ORGJED] ([IDORGJED])
GO

ALTER TABLE [dbo].[SHEMAIRASHEMAIRAKONTIRANJE] CHECK CONSTRAINT [ISHEMAIRASHEMAIRAKONTIRANJE1]
GO


ALTER TABLE [dbo].[SHEMAIRASHEMAIRAKONTIRANJE]  WITH CHECK ADD  CONSTRAINT [ISHEMAIRASHEMAIRAKONTIRANJE2] FOREIGN KEY([SHEMAIRAMTIDMJESTOTROSKA])
REFERENCES [MJESTOTROSKA] ([IDMJESTOTROSKA])
GO

ALTER TABLE [dbo].[SHEMAIRASHEMAIRAKONTIRANJE] CHECK CONSTRAINT [ISHEMAIRASHEMAIRAKONTIRANJE2]
GO


ALTER TABLE [dbo].[SHEMAIRASHEMAIRAKONTIRANJE]  WITH CHECK ADD  CONSTRAINT [ISHEMAIRASHEMAIRAKONTIRANJE3] FOREIGN KEY([SHEMAIRASTRANEIDSTRANEKNJIZENJA])
REFERENCES [STRANEKNJIZENJA] ([IDSTRANEKNJIZENJA])
GO

ALTER TABLE [dbo].[SHEMAIRASHEMAIRAKONTIRANJE] CHECK CONSTRAINT [ISHEMAIRASHEMAIRAKONTIRANJE3]
GO


ALTER TABLE [dbo].[SHEMAIRASHEMAIRAKONTIRANJE]  WITH CHECK ADD  CONSTRAINT [ISHEMAIRASHEMAIRAKONTIRANJE4] FOREIGN KEY([SHEMAIRAKONTOIDKONTO])
REFERENCES [KONTO] ([IDKONTO])
GO

ALTER TABLE [dbo].[SHEMAIRASHEMAIRAKONTIRANJE] CHECK CONSTRAINT [ISHEMAIRASHEMAIRAKONTIRANJE4]
GO


ALTER TABLE [dbo].[SHEMAIRASHEMAIRAKONTIRANJE]  WITH CHECK ADD  CONSTRAINT [ISHEMAIRASHEMAIRAKONTIRANJE5] FOREIGN KEY([IDIRAVRSTAIZNOSA])
REFERENCES [IRAVRSTAIZNOSA] ([IDIRAVRSTAIZNOSA])
GO

ALTER TABLE [dbo].[SHEMAIRASHEMAIRAKONTIRANJE] CHECK CONSTRAINT [ISHEMAIRASHEMAIRAKONTIRANJE5]
GO


ALTER TABLE [dbo].[SHEMAIRASHEMAIRAKONTIRANJE]  WITH CHECK ADD  CONSTRAINT [ISHEMAIRASHEMAIRAKONTIRANJE6] FOREIGN KEY([IDSHEMAIRA])
REFERENCES [SHEMAIRA] ([IDSHEMAIRA])
GO

ALTER TABLE [dbo].[SHEMAIRASHEMAIRAKONTIRANJE] CHECK CONSTRAINT [ISHEMAIRASHEMAIRAKONTIRANJE6]
GO


ALTER TABLE [dbo].[SHEMAPLACA]  WITH CHECK ADD  CONSTRAINT [ISHEMAPLACA1] FOREIGN KEY([SHEMAPLOJIDORGJED])
REFERENCES [ORGJED] ([IDORGJED])
GO

ALTER TABLE [dbo].[SHEMAPLACA] CHECK CONSTRAINT [ISHEMAPLACA1]
GO


ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACADOP]  WITH CHECK ADD  CONSTRAINT [ISHEMAPLACASHEMAPLACADOP1] FOREIGN KEY([STRANEDOPIDSTRANEKNJIZENJA])
REFERENCES [STRANEKNJIZENJA] ([IDSTRANEKNJIZENJA])
GO

ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACADOP] CHECK CONSTRAINT [ISHEMAPLACASHEMAPLACADOP1]
GO


ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACADOP]  WITH CHECK ADD  CONSTRAINT [ISHEMAPLACASHEMAPLACADOP2] FOREIGN KEY([MTDOPIDMJESTOTROSKA])
REFERENCES [MJESTOTROSKA] ([IDMJESTOTROSKA])
GO

ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACADOP] CHECK CONSTRAINT [ISHEMAPLACASHEMAPLACADOP2]
GO


ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACADOP]  WITH CHECK ADD  CONSTRAINT [ISHEMAPLACASHEMAPLACADOP3] FOREIGN KEY([KONTODOPIDKONTO])
REFERENCES [KONTO] ([IDKONTO])
GO

ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACADOP] CHECK CONSTRAINT [ISHEMAPLACASHEMAPLACADOP3]
GO


ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACADOP]  WITH CHECK ADD  CONSTRAINT [ISHEMAPLACASHEMAPLACADOP4] FOREIGN KEY([SHEMAPLDOPIDDOPRINOS])
REFERENCES [DOPRINOS] ([IDDOPRINOS])
GO

ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACADOP] CHECK CONSTRAINT [ISHEMAPLACASHEMAPLACADOP4]
GO


ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACADOP]  WITH CHECK ADD  CONSTRAINT [ISHEMAPLACASHEMAPLACADOP5] FOREIGN KEY([IDSHEMAPLACA])
REFERENCES [SHEMAPLACA] ([IDSHEMAPLACA])
GO

ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACADOP] CHECK CONSTRAINT [ISHEMAPLACASHEMAPLACADOP5]
GO


ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACAELEMENT]  WITH CHECK ADD  CONSTRAINT [ISHEMAPLACASHEMAPLACAELEMENT1] FOREIGN KEY([MTELEMENTIDMJESTOTROSKA])
REFERENCES [MJESTOTROSKA] ([IDMJESTOTROSKA])
GO

ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACAELEMENT] CHECK CONSTRAINT [ISHEMAPLACASHEMAPLACAELEMENT1]
GO


ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACAELEMENT]  WITH CHECK ADD  CONSTRAINT [ISHEMAPLACASHEMAPLACAELEMENT2] FOREIGN KEY([STRANEELEMENTIDSTRANEKNJIZENJA])
REFERENCES [STRANEKNJIZENJA] ([IDSTRANEKNJIZENJA])
GO

ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACAELEMENT] CHECK CONSTRAINT [ISHEMAPLACASHEMAPLACAELEMENT2]
GO


ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACAELEMENT]  WITH CHECK ADD  CONSTRAINT [ISHEMAPLACASHEMAPLACAELEMENT3] FOREIGN KEY([KONTOELEMENTIDKONTO])
REFERENCES [KONTO] ([IDKONTO])
GO

ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACAELEMENT] CHECK CONSTRAINT [ISHEMAPLACASHEMAPLACAELEMENT3]
GO


ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACAELEMENT]  WITH CHECK ADD  CONSTRAINT [ISHEMAPLACASHEMAPLACAELEMENT4] FOREIGN KEY([SHEMAPLELEMENTIDELEMENT])
REFERENCES [ELEMENT] ([IDELEMENT])
GO

ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACAELEMENT] CHECK CONSTRAINT [ISHEMAPLACASHEMAPLACAELEMENT4]
GO


ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACAELEMENT]  WITH CHECK ADD  CONSTRAINT [ISHEMAPLACASHEMAPLACAELEMENT5] FOREIGN KEY([IDSHEMAPLACA])
REFERENCES [SHEMAPLACA] ([IDSHEMAPLACA])
GO

ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACAELEMENT] CHECK CONSTRAINT [ISHEMAPLACASHEMAPLACAELEMENT5]
GO


ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACASTANDARD]  WITH CHECK ADD  CONSTRAINT [ISHEMAPLACASHEMAPLACASTANDARD1] FOREIGN KEY([STRANEVRSTEIZNOSAIDSTRANEKNJIZENJA])
REFERENCES [STRANEKNJIZENJA] ([IDSTRANEKNJIZENJA])
GO

ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACASTANDARD] CHECK CONSTRAINT [ISHEMAPLACASHEMAPLACASTANDARD1]
GO


ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACASTANDARD]  WITH CHECK ADD  CONSTRAINT [ISHEMAPLACASHEMAPLACASTANDARD2] FOREIGN KEY([MTPLACAVRSTAIZNOSAIDMJESTOTROSKA])
REFERENCES [MJESTOTROSKA] ([IDMJESTOTROSKA])
GO

ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACASTANDARD] CHECK CONSTRAINT [ISHEMAPLACASHEMAPLACASTANDARD2]
GO


ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACASTANDARD]  WITH CHECK ADD  CONSTRAINT [ISHEMAPLACASHEMAPLACASTANDARD3] FOREIGN KEY([KONTOPLACAVRSTAIZNOSAIDKONTO])
REFERENCES [KONTO] ([IDKONTO])
GO

ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACASTANDARD] CHECK CONSTRAINT [ISHEMAPLACASHEMAPLACASTANDARD3]
GO


ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACASTANDARD]  WITH CHECK ADD  CONSTRAINT [ISHEMAPLACASHEMAPLACASTANDARD4] FOREIGN KEY([IDPLVRSTEIZNOSA])
REFERENCES [PLVRSTEIZNOSA] ([IDPLVRSTEIZNOSA])
GO

ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACASTANDARD] CHECK CONSTRAINT [ISHEMAPLACASHEMAPLACASTANDARD4]
GO


ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACASTANDARD]  WITH CHECK ADD  CONSTRAINT [ISHEMAPLACASHEMAPLACASTANDARD5] FOREIGN KEY([IDSHEMAPLACA])
REFERENCES [SHEMAPLACA] ([IDSHEMAPLACA])
GO

ALTER TABLE [dbo].[SHEMAPLACASHEMAPLACASTANDARD] CHECK CONSTRAINT [ISHEMAPLACASHEMAPLACASTANDARD5]
GO


ALTER TABLE [dbo].[SHEMAURA]  WITH CHECK ADD  CONSTRAINT [ISHEMAURA1] FOREIGN KEY([PARTNERSHEMAURAIDPARTNER])
REFERENCES [PARTNER] ([IDPARTNER])
GO

ALTER TABLE [dbo].[SHEMAURA] CHECK CONSTRAINT [ISHEMAURA1]
GO


ALTER TABLE [dbo].[SHEMAURASHEMAURAKONTIRANJE]  WITH CHECK ADD  CONSTRAINT [ISHEMAURASHEMAURAKONTIRANJE1] FOREIGN KEY([SHEMAURAOJIDORGJED])
REFERENCES [ORGJED] ([IDORGJED])
GO

ALTER TABLE [dbo].[SHEMAURASHEMAURAKONTIRANJE] CHECK CONSTRAINT [ISHEMAURASHEMAURAKONTIRANJE1]
GO


ALTER TABLE [dbo].[SHEMAURASHEMAURAKONTIRANJE]  WITH CHECK ADD  CONSTRAINT [ISHEMAURASHEMAURAKONTIRANJE2] FOREIGN KEY([SHEMAURAMTIDMJESTOTROSKA])
REFERENCES [MJESTOTROSKA] ([IDMJESTOTROSKA])
GO

ALTER TABLE [dbo].[SHEMAURASHEMAURAKONTIRANJE] CHECK CONSTRAINT [ISHEMAURASHEMAURAKONTIRANJE2]
GO


ALTER TABLE [dbo].[SHEMAURASHEMAURAKONTIRANJE]  WITH CHECK ADD  CONSTRAINT [ISHEMAURASHEMAURAKONTIRANJE3] FOREIGN KEY([SHEMAURASTRANEIDSTRANEKNJIZENJA])
REFERENCES [STRANEKNJIZENJA] ([IDSTRANEKNJIZENJA])
GO

ALTER TABLE [dbo].[SHEMAURASHEMAURAKONTIRANJE] CHECK CONSTRAINT [ISHEMAURASHEMAURAKONTIRANJE3]
GO


ALTER TABLE [dbo].[SHEMAURASHEMAURAKONTIRANJE]  WITH CHECK ADD  CONSTRAINT [ISHEMAURASHEMAURAKONTIRANJE4] FOREIGN KEY([SHEMAURAKONTOIDKONTO])
REFERENCES [KONTO] ([IDKONTO])
GO

ALTER TABLE [dbo].[SHEMAURASHEMAURAKONTIRANJE] CHECK CONSTRAINT [ISHEMAURASHEMAURAKONTIRANJE4]
GO


ALTER TABLE [dbo].[SHEMAURASHEMAURAKONTIRANJE]  WITH CHECK ADD  CONSTRAINT [ISHEMAURASHEMAURAKONTIRANJE5] FOREIGN KEY([IDURAVRSTAIZNOSA])
REFERENCES [URAVRSTAIZNOSA] ([IDURAVRSTAIZNOSA])
GO

ALTER TABLE [dbo].[SHEMAURASHEMAURAKONTIRANJE] CHECK CONSTRAINT [ISHEMAURASHEMAURAKONTIRANJE5]
GO


ALTER TABLE [dbo].[SHEMAURASHEMAURAKONTIRANJE]  WITH CHECK ADD  CONSTRAINT [ISHEMAURASHEMAURAKONTIRANJE6] FOREIGN KEY([IDSHEMAURA])
REFERENCES [SHEMAURA] ([IDSHEMAURA])
GO

ALTER TABLE [dbo].[SHEMAURASHEMAURAKONTIRANJE] CHECK CONSTRAINT [ISHEMAURASHEMAURAKONTIRANJE6]
GO


ALTER TABLE [dbo].[SKUPPOREZAIDOPRINOSA1]  WITH CHECK ADD  CONSTRAINT [ISKUPPOREZAIDOPRINOSA11] FOREIGN KEY([IDPOREZ])
REFERENCES [POREZ] ([IDPOREZ])
GO

ALTER TABLE [dbo].[SKUPPOREZAIDOPRINOSA1] CHECK CONSTRAINT [ISKUPPOREZAIDOPRINOSA11]
GO


ALTER TABLE [dbo].[SKUPPOREZAIDOPRINOSA1]  WITH CHECK ADD  CONSTRAINT [ISKUPPOREZAIDOPRINOSA12] FOREIGN KEY([IDSKUPPOREZAIDOPRINOSA])
REFERENCES [SKUPPOREZAIDOPRINOSA] ([IDSKUPPOREZAIDOPRINOSA])
GO

ALTER TABLE [dbo].[SKUPPOREZAIDOPRINOSA1] CHECK CONSTRAINT [ISKUPPOREZAIDOPRINOSA12]
GO


ALTER TABLE [dbo].[SKUPPOREZAIDOPRINOSA2]  WITH CHECK ADD  CONSTRAINT [ISKUPPOREZAIDOPRINOSA21] FOREIGN KEY([IDDOPRINOS])
REFERENCES [DOPRINOS] ([IDDOPRINOS])
GO

ALTER TABLE [dbo].[SKUPPOREZAIDOPRINOSA2] CHECK CONSTRAINT [ISKUPPOREZAIDOPRINOSA21]
GO


ALTER TABLE [dbo].[SKUPPOREZAIDOPRINOSA2]  WITH CHECK ADD  CONSTRAINT [ISKUPPOREZAIDOPRINOSA22] FOREIGN KEY([IDSKUPPOREZAIDOPRINOSA])
REFERENCES [SKUPPOREZAIDOPRINOSA] ([IDSKUPPOREZAIDOPRINOSA])
GO

ALTER TABLE [dbo].[SKUPPOREZAIDOPRINOSA2] CHECK CONSTRAINT [ISKUPPOREZAIDOPRINOSA22]
GO


ALTER TABLE [dbo].[URA]  WITH CHECK ADD  CONSTRAINT [IURA1] FOREIGN KEY([URADOKIDDOKUMENT])
REFERENCES [DOKUMENT] ([IDDOKUMENT])
GO

ALTER TABLE [dbo].[URA] CHECK CONSTRAINT [IURA1]
GO


ALTER TABLE [dbo].[URA]  WITH CHECK ADD  CONSTRAINT [IURA2] FOREIGN KEY([URAGODIDGODINE])
REFERENCES [GODINE] ([IDGODINE])
GO

ALTER TABLE [dbo].[URA] CHECK CONSTRAINT [IURA2]
GO


ALTER TABLE [dbo].[URA]  WITH CHECK ADD  CONSTRAINT [IURA3] FOREIGN KEY([IDTIPURA])
REFERENCES [TIPURA] ([IDTIPURA])
GO

ALTER TABLE [dbo].[URA] CHECK CONSTRAINT [IURA3]
GO


ALTER TABLE [dbo].[URA]  WITH CHECK ADD  CONSTRAINT [IURA4] FOREIGN KEY([urapartnerIDPARTNER])
REFERENCES [PARTNER] ([IDPARTNER])
GO

ALTER TABLE [dbo].[URA] CHECK CONSTRAINT [IURA4]
GO


ALTER TABLE [dbo].[ZATVARANJA]  WITH CHECK ADD  CONSTRAINT [IZATVARANJA1] FOREIGN KEY([GK1IDGKSTAVKA])
REFERENCES [GKSTAVKA] ([IDGKSTAVKA])
GO

ALTER TABLE [dbo].[ZATVARANJA] CHECK CONSTRAINT [IZATVARANJA1]
GO


ALTER TABLE [dbo].[ZATVARANJA]  WITH CHECK ADD  CONSTRAINT [IZATVARANJA2] FOREIGN KEY([GK2IDGKSTAVKA])
REFERENCES [GKSTAVKA] ([IDGKSTAVKA])
GO

ALTER TABLE [dbo].[ZATVARANJA] CHECK CONSTRAINT [IZATVARANJA2]
GO







-- Kraj foreign keys

-- Pocetak funkcije

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[fnSplitter]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[fnSplitter]
GO



create Function [dbo].[fnSplitter] (@IDs Varchar(1000) )  
Returns @Tbl_IDs Table  (ID varchar(20))  As  

Begin 
 -- Append comma
 Set @IDs =  @IDs + ',' 
 -- Indexes to keep the position of searching
 Declare @Pos1 Int
 Declare @pos2 Int
 
 -- Start from first character 
 Set @Pos1=1
 Set @Pos2=1
 
 While @Pos1&lt;Len(@IDs)
 Begin
  Set @Pos1 = CharIndex(',',@IDs,@Pos1)
  Insert @Tbl_IDs Select  Cast(Substring(@IDs,@Pos2,@Pos1-@Pos2) As varchar)
  -- Go to next non comma character
  Set @Pos2=@Pos1+1
  -- Search from the next charcater
  Set @Pos1 = @Pos1+1
 End 
 Return
End
GO
-- Kraj funkcije

--Pocetak views


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_ZADUZENI_PARTNERI]'))
DROP VIEW [dbo].[VW_ZADUZENI_PARTNERI]
GO


CREATE VIEW [dbo].[VW_ZADUZENI_PARTNERI]
AS
SELECT     IDPARTNER
FROM         dbo.PARTNERZADUZENJE
GROUP BY IDPARTNER
GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_DD_GODINE_ISPLATE]'))
DROP VIEW [dbo].[VW_DD_GODINE_ISPLATE]
GO

CREATE VIEW dbo.VW_DD_GODINE_ISPLATE
AS
SELECT     TOP (100) PERCENT  SUBSTRING(dbo.DDOBRACUN.DDOBRACUNIDOBRACUN, 1, 4) AS GODINAISPLATE
FROM         dbo.DDOBRACUN
GROUP BY SUBSTRING(dbo.DDOBRACUN.DDOBRACUNIDOBRACUN, 1, 4)
ORDER BY SUBSTRING(dbo.DDOBRACUN.DDOBRACUNIDOBRACUN, 1, 4) 


GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[vw_DD_MJESECI_GODINE_ISPLATE]'))
DROP VIEW [dbo].[vw_DD_MJESECI_GODINE_ISPLATE]
GO




CREATE VIEW [dbo].[vw_DD_MJESECI_GODINE_ISPLATE]
AS
SELECT     TOP (100) PERCENT  SUBSTRING(dbo.DDOBRACUN.DDOBRACUNIDOBRACUN, 6, 2) AS MJESECISPLATE,SUBSTRING(dbo.DDOBRACUN.DDOBRACUNIDOBRACUN, 1, 4) AS GODINAISPLATE
FROM         dbo.DDOBRACUN
GROUP BY SUBSTRING(dbo.DDOBRACUN.DDOBRACUNIDOBRACUN, 6, 2),SUBSTRING(dbo.DDOBRACUN.DDOBRACUNIDOBRACUN, 1, 4)
ORDER BY SUBSTRING(dbo.DDOBRACUN.DDOBRACUNIDOBRACUN, 1, 4) + SUBSTRING(dbo.DDOBRACUN.DDOBRACUNIDOBRACUN, 6, 2)


GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_DD_OBRACUN_DOPRINOSI_OSNOVICE_MIO]'))
DROP VIEW [dbo].[VW_DD_OBRACUN_DOPRINOSI_OSNOVICE_MIO]
GO


CREATE VIEW dbo.VW_DD_OBRACUN_DOPRINOSI_OSNOVICE_MIO
AS
SELECT     dbo.DDOBRACUNRadniciDoprinosi.DDOBRACUNIDOBRACUN, dbo.DDOBRACUNRadniciDoprinosi.DDIDRADNIK, 
                      dbo.DDOBRACUNRadniciDoprinosi.DDOSNOVICADOPRINOS
FROM         dbo.DDOBRACUNRadniciDoprinosi INNER JOIN
                      dbo.TIPIZNOSA ON dbo.DDOBRACUNRadniciDoprinosi.VBDIDOPRINOS = dbo.TIPIZNOSA.VBDITIPAIZNOSA AND 
                      dbo.DDOBRACUNRadniciDoprinosi.ZRNDOPRINOS = dbo.TIPIZNOSA.ZIROTIPAIZNOSA AND 
                      dbo.DDOBRACUNRadniciDoprinosi.MODOPRINOS = dbo.TIPIZNOSA.MOTIPAIZNOSA AND 
                      dbo.DDOBRACUNRadniciDoprinosi.PODOPRINOS = dbo.TIPIZNOSA.POTIPAIZNOSA INNER JOIN
                      dbo.DDOBRACUN ON dbo.DDOBRACUNRadniciDoprinosi.DDOBRACUNIDOBRACUN = dbo.DDOBRACUN.DDOBRACUNIDOBRACUN
WHERE     (dbo.TIPIZNOSA.OZNAKATIPAIZNOSA = N'MIOI') OR
                      (dbo.TIPIZNOSA.OZNAKATIPAIZNOSA = N'MIOI-P') OR
                      (dbo.TIPIZNOSA.OZNAKATIPAIZNOSA = N'MIOII') OR
                      (dbo.TIPIZNOSA.OZNAKATIPAIZNOSA = N'MIOII-P')
GROUP BY dbo.DDOBRACUNRadniciDoprinosi.DDOBRACUNIDOBRACUN, dbo.DDOBRACUNRadniciDoprinosi.DDIDRADNIK, 
                      dbo.DDOBRACUNRadniciDoprinosi.DDOSNOVICADOPRINOS




GO





IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_DD_OBRACUN_DOPRINOSI_UKUPNO]'))
DROP VIEW [dbo].[VW_DD_OBRACUN_DOPRINOSI_UKUPNO]
GO


CREATE VIEW dbo.VW_DD_OBRACUN_DOPRINOSI_UKUPNO
AS
SELECT     dbo.DDOBRACUNRadniciDoprinosi.DDOBRACUNIDOBRACUN, SUBSTRING(dbo.DDOBRACUN.DDOBRACUNIDOBRACUN, 6, 2) AS MJESECOBRACUNA, 
                      SUBSTRING(dbo.DDOBRACUN.DDOBRACUNIDOBRACUN, 1, 4) AS GODINAOBRACUNA, dbo.TIPIZNOSA.OZNAKATIPAIZNOSA, 
                      dbo.DDOBRACUNRadniciDoprinosi.STOPA, SUM(dbo.DDOBRACUNRadniciDoprinosi.DDOSNOVICADOPRINOS) AS UKUPNOOSNOVICADOPRINOS, 
                      SUM(dbo.DDOBRACUNRadniciDoprinosi.DDOBRACUNATIDOPRINOS) AS UKUPNODOPRINOS, dbo.DDOBRACUNRadniciDoprinosi.DDIDRADNIK
FROM         dbo.DDOBRACUNRadniciDoprinosi INNER JOIN
                      dbo.TIPIZNOSA ON dbo.DDOBRACUNRadniciDoprinosi.VBDIDOPRINOS = dbo.TIPIZNOSA.VBDITIPAIZNOSA AND 
                      dbo.DDOBRACUNRadniciDoprinosi.ZRNDOPRINOS = dbo.TIPIZNOSA.ZIROTIPAIZNOSA AND 
                      dbo.DDOBRACUNRadniciDoprinosi.MODOPRINOS = dbo.TIPIZNOSA.MOTIPAIZNOSA AND 
                      dbo.DDOBRACUNRadniciDoprinosi.PODOPRINOS = dbo.TIPIZNOSA.POTIPAIZNOSA INNER JOIN
                      dbo.DDOBRACUN ON dbo.DDOBRACUNRadniciDoprinosi.DDOBRACUNIDOBRACUN = dbo.DDOBRACUN.DDOBRACUNIDOBRACUN
GROUP BY dbo.DDOBRACUNRadniciDoprinosi.DDOBRACUNIDOBRACUN, dbo.TIPIZNOSA.OZNAKATIPAIZNOSA, 
                      SUBSTRING(dbo.DDOBRACUN.DDOBRACUNIDOBRACUN, 6, 2), SUBSTRING(dbo.DDOBRACUN.DDOBRACUNIDOBRACUN, 1, 4), 
                      dbo.DDOBRACUNRadniciDoprinosi.STOPA, dbo.DDOBRACUNRadniciDoprinosi.DDIDRADNIK

GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_DD_OBRACUN_DOPRINOSI_PO_TIPU]'))
DROP VIEW [dbo].[VW_DD_OBRACUN_DOPRINOSI_PO_TIPU]
GO




CREATE VIEW dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU
AS
SELECT     DDOBRACUNIDOBRACUN, MJESECOBRACUNA, GODINAOBRACUNA, MAX(CASE WHEN OZNAKATIPAIZNOSA = 'MIOI' THEN STOPA ELSE 0 END) 
                      AS STOPAMIOI, MAX(CASE WHEN OZNAKATIPAIZNOSA = 'MIOI' THEN UKUPNOOSNOVICADOPRINOS ELSE 0 END) AS OSNOVICAMIOI, 
                      SUM(CASE WHEN OZNAKATIPAIZNOSA = 'MIOI' THEN UKUPNODOPRINOS ELSE 0 END) AS UKUPNOMIOI, 
                      MAX(CASE WHEN OZNAKATIPAIZNOSA = 'MIOII' THEN STOPA ELSE 0 END) AS STOPAMIOII, 
                      MAX(CASE WHEN OZNAKATIPAIZNOSA = 'MIOII' THEN UKUPNOOSNOVICADOPRINOS ELSE 0 END) AS OSNOVICAMIOII, 
                      SUM(CASE WHEN OZNAKATIPAIZNOSA = 'MIOII' THEN UKUPNODOPRINOS ELSE 0 END) AS UKUPNOMIOII, 
                      MAX(CASE WHEN OZNAKATIPAIZNOSA = 'ZDR-O' THEN STOPA ELSE 0 END) AS STOPAZDRO, 
                      MAX(CASE WHEN OZNAKATIPAIZNOSA = 'ZDR-O' THEN UKUPNOOSNOVICADOPRINOS ELSE 0 END) AS OSNOVICAZDRO, 
                      SUM(CASE WHEN OZNAKATIPAIZNOSA = 'ZDR-O' THEN UKUPNODOPRINOS ELSE 0 END) AS UKUPNOZDRO, DDIDRADNIK
FROM         dbo.VW_DD_OBRACUN_DOPRINOSI_UKUPNO
GROUP BY DDOBRACUNIDOBRACUN, MJESECOBRACUNA, GODINAOBRACUNA, DDIDRADNIK
GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO]'))
DROP VIEW [dbo].[VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO]
GO


CREATE VIEW dbo.VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO
AS
SELECT     dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, dbo.DDOBRACUN.DDDATUMOBRACUNA, dbo.DDOBRACUNRadnici.DDIDRADNIK, 
                      ISNULL(SUM(obracun_bruto.iznosbruto), 0) AS UKUPNOBRUTO, 
                      ISNULL(dbo.VW_DD_OBRACUN_DOPRINOSI_OSNOVICE_MIO.DDOSNOVICADOPRINOS, 0) AS UKUPNOOSNOVICAZADOPRINOS, 
                      ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) AS UKUPNODOPRINOSI, ISNULL(SUM(obracun_bruto.iznosbruto), 0) 
                      - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) - ISNULL(SUM(obracun_izdaci.izdaci), 0) AS POREZNAOSNOVICA, 
                      ISNULL(SUM(obracun_porezi.iznosporez), 0) AS UKUPNOPOREZ, ISNULL(SUM(dbo.DDOBRACUNRadnici.DDOBRACUNATIPRIREZ), 0) 
                      AS UKUPNOPRIREZ, ISNULL(SUM(obracun_porezi.iznosporez), 0) + ISNULL(SUM(dbo.DDOBRACUNRadnici.DDOBRACUNATIPRIREZ), 0) 
                      AS UKUPNOPOREZIPRIREZ, ISNULL(SUM(obracun_bruto.iznosbruto), 0) - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) 
                      - ISNULL(SUM(obracun_porezi.iznosporez), 0) - ISNULL(SUM(dbo.DDOBRACUNRadnici.DDOBRACUNATIPRIREZ), 0) AS NETOPLACA, 
                      ISNULL(SUM(obracun_bruto.iznosbruto), 0) - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) - ISNULL(SUM(obracun_porezi.iznosporez), 0) 
                      - ISNULL(SUM(dbo.DDOBRACUNRadnici.DDOBRACUNATIPRIREZ), 0) - ISNULL(SUM(obracun_krizni.porezkrizni), 0)   AS NETOPLACAMANJEKRIZNI, 
                      ISNULL(SUM(obracun_doprinosi_na.iznosdoprinos), 0) AS UKUPNODOPRINOSINA, ISNULL(SUM(obracun_krizni.porezkrizni), 0) AS porezkrizni, 
                      ISNULL(SUM(obracun_izdaci.izdaci), 0) AS izdaci,ISNULL(SUM(dbo.DDOBRACUNRadnici.DDOBRACUNATIPDV), 0) AS PDV,
				ISNULL(SUM(obracun_bruto.iznosbruto), 0) - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) - ISNULL(SUM(obracun_porezi.iznosporez), 0) 
                      - ISNULL(SUM(dbo.DDOBRACUNRadnici.DDOBRACUNATIPRIREZ), 0) - ISNULL(SUM(obracun_krizni.porezkrizni), 0) +  ISNULL(SUM(dbo.DDOBRACUNRadnici.ddobracunatipdv), 0) as ZAISPLATU,
ISNULL(SUM(obracun_izdaci.izdaci), 0) as ukupnoizdaci,
ISNULL(SUM(obracun_izdaci.postotakizdatka), 0) as postotakizdatka
 FROM         dbo.DDOBRACUNRadnici INNER JOIN
                      dbo.DDOBRACUN ON dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.DDOBRACUN.DDOBRACUNIDOBRACUN LEFT OUTER JOIN
                      dbo.VW_DD_OBRACUN_DOPRINOSI_OSNOVICE_MIO ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.VW_DD_OBRACUN_DOPRINOSI_OSNOVICE_MIO.DDOBRACUNIDOBRACUN AND 
                      dbo.DDOBRACUNRadnici.DDIDRADNIK = dbo.VW_DD_OBRACUN_DOPRINOSI_OSNOVICE_MIO.DDIDRADNIK LEFT OUTER JOIN
                          (SELECT     dbo.DDOBRACUNRadniciVrstePosla.DDOBRACUNIDOBRACUN, dbo.DDOBRACUNRadniciVrstePosla.DDIDRADNIK, 
                                                   SUM(dbo.DDOBRACUNRadniciVrstePosla.DDIZNOS) AS iznosbruto
                            FROM          dbo.DDOBRACUNRadniciVrstePosla INNER JOIN
                                                   dbo.DDVRSTEPOSLA ON dbo.DDOBRACUNRadniciVrstePosla.DDIDVRSTAPOSLA = dbo.DDVRSTEPOSLA.DDIDVRSTAPOSLA
                            GROUP BY dbo.DDOBRACUNRadniciVrstePosla.DDOBRACUNIDOBRACUN, dbo.DDOBRACUNRadniciVrstePosla.DDIDRADNIK) AS obracun_bruto ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = obracun_bruto.DDOBRACUNIDOBRACUN AND 
                      dbo.DDOBRACUNRadnici.DDIDRADNIK = obracun_bruto.DDIDRADNIK LEFT OUTER JOIN
                          (SELECT     DDOBRACUNIDOBRACUN, DDIDRADNIK, 0 AS osnovicadoprinos, SUM(DDOBRACUNATIDOPRINOS) AS iznosdoprinos
                            FROM          dbo.DDOBRACUNRadniciDoprinosi
                            WHERE      (IDVRSTADOPRINOS = 2)
                            GROUP BY DDOBRACUNIDOBRACUN, DDIDRADNIK) AS obracun_doprinosi ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = obracun_doprinosi.DDOBRACUNIDOBRACUN AND 
                      dbo.DDOBRACUNRadnici.DDIDRADNIK = obracun_doprinosi.DDIDRADNIK LEFT OUTER JOIN
                          (SELECT     DDOBRACUNIDOBRACUN, DDIDRADNIK, 0 AS osnovicadoprinos, SUM(DDOBRACUNATIDOPRINOS) AS iznosdoprinos
                            FROM          dbo.DDOBRACUNRadniciDoprinosi AS ObracunDoprinosi_1
                            WHERE      (IDVRSTADOPRINOS = 1)
                            GROUP BY DDOBRACUNIDOBRACUN, DDIDRADNIK) AS obracun_doprinosi_na ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = obracun_doprinosi_na.DDOBRACUNIDOBRACUN AND 
                      dbo.DDOBRACUNRadnici.DDIDRADNIK = obracun_doprinosi_na.DDIDRADNIK LEFT OUTER JOIN
                          (SELECT     DDOBRACUNIDOBRACUN, DDIDRADNIK, SUM(DDOBRACUNATIPOREZ) AS iznosporez
                            FROM          dbo.DDOBRACUNRadniciPorezi
                            GROUP BY DDOBRACUNIDOBRACUN, DDIDRADNIK) AS obracun_porezi ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = obracun_porezi.DDOBRACUNIDOBRACUN AND 
                      dbo.DDOBRACUNRadnici.DDIDRADNIK = obracun_porezi.DDIDRADNIK LEFT OUTER JOIN
                          (SELECT     DDOBRACUNIDOBRACUN, DDIDRADNIK, SUM(DDPOREZKRIZNI) AS porezkrizni
                            FROM          dbo.DDOBRACUNRadniciDDKrizniPorez
                            GROUP BY DDOBRACUNIDOBRACUN, DDIDRADNIK) AS obracun_krizni ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = obracun_krizni.DDOBRACUNIDOBRACUN AND 
                      dbo.DDOBRACUNRadnici.DDIDRADNIK = obracun_krizni.DDIDRADNIK LEFT OUTER JOIN
                          (SELECT     DDOBRACUNIDOBRACUN, DDIDRADNIK, SUM(DDOBRACUNATIIZDATAK) AS izdaci ,sum(ddpostotakizdatka) as postotakizdatka
                            FROM          dbo.DDOBRACUNRadniciIzdaci
                            GROUP BY DDOBRACUNIDOBRACUN, DDIDRADNIK) AS obracun_izdaci ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = obracun_izdaci.DDOBRACUNIDOBRACUN AND 
                     dbo.DDOBRACUNRadnici.DDIDRADNIK = obracun_izdaci.DDIDRADNIK


GROUP BY dbo.DDOBRACUNRadnici.DDIDRADNIK, dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, dbo.DDOBRACUN.DDDATUMOBRACUNA, 
                      dbo.VW_DD_OBRACUN_DOPRINOSI_OSNOVICE_MIO.DDOSNOVICADOPRINOS




GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_DD_PREGLED_OBRACUNA]'))
DROP VIEW [dbo].[VW_DD_PREGLED_OBRACUNA]
GO


CREATE VIEW dbo.VW_DD_PREGLED_OBRACUNA
AS
SELECT     TOP (100) PERCENT DDOBRACUNIDOBRACUN, DDOPISOBRACUN, DDDATUMOBRACUNA, DDZAKLJUCAN, DDRSM
FROM         dbo.DDOBRACUN
ORDER BY DDOBRACUNIDOBRACUN


GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_FIN_IRA_DETALJNO]'))
DROP VIEW [dbo].[VW_FIN_IRA_DETALJNO]
GO

CREATE VIEW dbo.VW_FIN_IRA_DETALJNO
AS
SELECT     TOP 100 PERCENT *
FROM         (SELECT     GKSTAVKA_1.IDGKSTAVKA AS IRA_ID, GKSTAVKA_1.DATUMDOKUMENTA AS IRA_DATUM, GKSTAVKA_1.BROJDOKUMENTA AS IRA_BROJ, 
                                              dbo.GKSTAVKA.IDGKSTAVKA AS ZATVARANJE_ID, dbo.GKSTAVKA.DATUMDOKUMENTA AS ZATVARANJE_DATUM, 
                                              dbo.GKSTAVKA.BROJDOKUMENTA AS ZATVARANJE_BROJ, dbo.GKSTAVKA.potrazuje AS ZATVARANJE_IZNOS, 
                                              dbo.DOKUMENT.NAZIVDOKUMENT AS ZATVARANJE_DOK, GKSTAVKA_1.IDDOKUMENT, GKSTAVKA.GKGODIDGODINE
                       FROM          dbo.GKSTAVKA INNER JOIN
                                              dbo.ZATVARANJA ON dbo.GKSTAVKA.IDGKSTAVKA = dbo.ZATVARANJA.GK1IDGKSTAVKA INNER JOIN
                                              dbo.GKSTAVKA GKSTAVKA_1 ON dbo.ZATVARANJA.GK2IDGKSTAVKA = GKSTAVKA_1.IDGKSTAVKA LEFT OUTER JOIN
                                              dbo.DOKUMENT ON dbo.GKSTAVKA.IDDOKUMENT = dbo.DOKUMENT.IDDOKUMENT
                       WHERE      (GKSTAVKA_1.IDDOKUMENT IN
                                                  (SELECT     IDDOKUMENT
                                                    FROM          DOKUMENT
                                                    WHERE      IDTIPDOKUMENTA = 3))
                       UNION ALL
                       SELECT     dbo.GKSTAVKA.IDGKSTAVKA AS IRA_ID, dbo.GKSTAVKA.DATUMDOKUMENTA AS IRA_DATUM, 
                                             dbo.GKSTAVKA.BROJDOKUMENTA AS IRA_BROJ, GKSTAVKA_1.IDGKSTAVKA AS ZATVARANJE_ID, 
                                             GKSTAVKA_1.DATUMDOKUMENTA AS ZATVARANJE_DATUM, GKSTAVKA_1.BROJDOKUMENTA AS ZATVARANJE_BROJ, 
                                             GKSTAVKA_1.potrazuje AS ZATVARANJE_IZNOS, dbo.DOKUMENT.NAZIVDOKUMENT AS ZATVARANJE_DOK, GKSTAVKA.IDDOKUMENT, 
                                             GKSTAVKA.GKGODIDGODINE
                       FROM         dbo.GKSTAVKA INNER JOIN
                                             dbo.ZATVARANJA ON dbo.GKSTAVKA.IDGKSTAVKA = dbo.ZATVARANJA.GK1IDGKSTAVKA INNER JOIN
                                             dbo.GKSTAVKA GKSTAVKA_1 ON dbo.ZATVARANJA.GK2IDGKSTAVKA = GKSTAVKA_1.IDGKSTAVKA LEFT OUTER JOIN
                                             dbo.DOKUMENT ON GKSTAVKA_1.IDDOKUMENT = dbo.DOKUMENT.IDDOKUMENT
                       WHERE     (GKSTAVKA.IDDOKUMENT IN
                                                 (SELECT     IDDOKUMENT
                                                   FROM          DOKUMENT
                                                   WHERE      IDTIPDOKUMENTA = 3))) a
ORDER BY IRA_BROJ


GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_FIN_IRA_UKUPNO]'))
DROP VIEW [dbo].[VW_FIN_IRA_UKUPNO]
GO



CREATE VIEW dbo.VW_FIN_IRA_UKUPNO
AS
SELECT     TOP 100 PERCENT IRA_BROJ, MAX(ZATVARANJE_DATUM) AS ZATVARANJE_DATUM, SUM(ZATVARANJE_IZNOS) AS ZATVARANJE_IZNOS, 
                      IDDOKUMENT, GKGODIDGODINE
FROM         dbo.VW_FIN_IRA_DETALJNO
GROUP BY IRA_BROJ, IDDOKUMENT, GKGODIDGODINE
ORDER BY IRA_BROJ



GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_FIN_URA_DETALJNO]'))
DROP VIEW [dbo].[VW_FIN_URA_DETALJNO]
GO

CREATE VIEW dbo.VW_FIN_URA_DETALJNO
AS
SELECT     TOP 100 PERCENT *
FROM         (SELECT     GKSTAVKA_1.IDGKSTAVKA AS URA_ID, GKSTAVKA_1.DATUMDOKUMENTA AS URA_DATUM, GKSTAVKA_1.BROJDOKUMENTA AS URA_BROJ,
                                               dbo.GKSTAVKA.IDGKSTAVKA AS ZATVARANJE_ID, dbo.GKSTAVKA.DATUMDOKUMENTA AS ZATVARANJE_DATUM, 
                                              dbo.GKSTAVKA.BROJDOKUMENTA AS ZATVARANJE_BROJ, dbo.GKSTAVKA.duguje AS ZATVARANJE_IZNOS, 
                                              dbo.DOKUMENT.NAZIVDOKUMENT AS ZATVARANJE_DOK, GKSTAVKA_1.IDDOKUMENT, GKSTAVKA_1.GKGODIDGODINE
                       FROM          dbo.GKSTAVKA INNER JOIN
                                              dbo.ZATVARANJA ON dbo.GKSTAVKA.IDGKSTAVKA = dbo.ZATVARANJA.GK1IDGKSTAVKA INNER JOIN
                                              dbo.GKSTAVKA GKSTAVKA_1 ON dbo.ZATVARANJA.GK2IDGKSTAVKA = GKSTAVKA_1.IDGKSTAVKA LEFT OUTER JOIN
                                              dbo.DOKUMENT ON dbo.GKSTAVKA.IDDOKUMENT = dbo.DOKUMENT.IDDOKUMENT
                       WHERE      (GKSTAVKA_1.IDDOKUMENT IN
                                                  (SELECT     IDDOKUMENT
                                                    FROM          DOKUMENT
                                                    WHERE      IDTIPDOKUMENTA = 2))
                       UNION ALL
                       SELECT     dbo.GKSTAVKA.IDGKSTAVKA AS URA_ID, dbo.GKSTAVKA.DATUMDOKUMENTA AS URA_DATUM, 
                                             dbo.GKSTAVKA.BROJDOKUMENTA AS URA_BROJ, GKSTAVKA_1.IDGKSTAVKA AS ZATVARANJE_ID, 
                                             GKSTAVKA_1.DATUMDOKUMENTA AS ZATVARANJE_DATUM, GKSTAVKA_1.BROJDOKUMENTA AS ZATVARANJE_BROJ, 
                                             GKSTAVKA_1.duguje AS ZATVARANJE_IZNOS, dbo.DOKUMENT.NAZIVDOKUMENT AS ZATVARANJE_DOK, GKSTAVKA.IDDOKUMENT, 
                                             GKSTAVKA.GKGODIDGODINE
                       FROM         dbo.GKSTAVKA INNER JOIN
                                             dbo.ZATVARANJA ON dbo.GKSTAVKA.IDGKSTAVKA = dbo.ZATVARANJA.GK1IDGKSTAVKA INNER JOIN
                                             dbo.GKSTAVKA GKSTAVKA_1 ON dbo.ZATVARANJA.GK2IDGKSTAVKA = GKSTAVKA_1.IDGKSTAVKA LEFT OUTER JOIN
                                             dbo.DOKUMENT ON GKSTAVKA_1.IDDOKUMENT = dbo.DOKUMENT.IDDOKUMENT
                       WHERE     (GKSTAVKA.IDDOKUMENT IN
                                                 (SELECT     IDDOKUMENT
                                                   FROM          DOKUMENT
                                                   WHERE      IDTIPDOKUMENTA = 2))) a
ORDER BY URA_BROJ


GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_FIN_URA_UKUPNO]'))
DROP VIEW [dbo].[VW_FIN_URA_UKUPNO]
GO


CREATE VIEW dbo.VW_FIN_URA_UKUPNO
AS
SELECT     TOP 100 PERCENT URA_BROJ, MAX(ZATVARANJE_DATUM) AS ZATVARANJE_DATUM, SUM(ZATVARANJE_IZNOS) AS ZATVARANJE_IZNOS, 
                      IDDOKUMENT, GKGODIDGODINE
FROM         dbo.VW_FIN_URA_DETALJNO
GROUP BY URA_BROJ, IDDOKUMENT, GKGODIDGODINE
ORDER BY URA_BROJ



GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_PLACA_DD_MJESECI_GODINE_ISPLATE]'))
DROP VIEW [dbo].[VW_PLACA_DD_MJESECI_GODINE_ISPLATE]
GO




CREATE VIEW dbo.VW_PLACA_DD_MJESECI_GODINE_ISPLATE
AS
SELECT TOP 100 PERCENT P.MJESECISPLATE,P.GODINAISPLATE FROM 
(
SELECT     TOP (100) PERCENT MJESECISPLATE, GODINAISPLATE
FROM         dbo.OBRACUN
GROUP BY GODINAISPLATE, MJESECISPLATE
UNION ALL
SELECT     TOP (100) PERCENT SUBSTRING(DDOBRACUNIDOBRACUN, 6, 2) AS MJESECISPLATE, SUBSTRING(DDOBRACUNIDOBRACUN, 1, 4) 
                      AS GODINAISPLATE
FROM         dbo.DDOBRACUN
GROUP BY SUBSTRING(DDOBRACUNIDOBRACUN, 6, 2), SUBSTRING(DDOBRACUNIDOBRACUN, 1, 4)
) AS P
GROUP BY P.GODINAISPLATE,P.MJESECISPLATE
ORDER BY P.GODINAISPLATE + P.MJESECISPLATE DESC


GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_PLACA_UKUPNO_DOPRINOSI]'))
DROP VIEW [dbo].[VW_PLACA_UKUPNO_DOPRINOSI]
GO




CREATE VIEW dbo.VW_PLACA_UKUPNO_DOPRINOSI
AS
SELECT     dbo.OBRACUNDOPRINOSI.IDOBRACUN, dbo.OBRACUN.MJESECOBRACUNA, dbo.OBRACUN.GODINAOBRACUNA, dbo.TIPIZNOSA.OZNAKATIPAIZNOSA, 
                      dbo.OBRACUNDOPRINOSI.STOPA, SUM(dbo.OBRACUNDOPRINOSI.OSNOVICADOPRINOS) AS UKUPNOOSNOVICADOPRINOS, SUM(dbo.OBRACUNDOPRINOSI.OBRACUNATIDOPRINOS)
                       AS UKUPNODOPRINOS
FROM         dbo.OBRACUNDOPRINOSI INNER JOIN
                      dbo.TIPIZNOSA ON dbo.OBRACUNDOPRINOSI.VBDIDOPRINOS = dbo.TIPIZNOSA.VBDITIPAIZNOSA AND 
                      dbo.OBRACUNDOPRINOSI.ZRNDOPRINOS = dbo.TIPIZNOSA.ZIROTIPAIZNOSA AND dbo.OBRACUNDOPRINOSI.MODOPRINOS = dbo.TIPIZNOSA.MOTIPAIZNOSA AND 
                      dbo.OBRACUNDOPRINOSI.PODOPRINOS = dbo.TIPIZNOSA.POTIPAIZNOSA INNER JOIN
                      dbo.OBRACUN ON dbo.OBRACUNDOPRINOSI.IDOBRACUN = dbo.OBRACUN.IDOBRACUN
GROUP BY dbo.OBRACUNDOPRINOSI.IDOBRACUN, dbo.TIPIZNOSA.OZNAKATIPAIZNOSA, dbo.OBRACUN.MJESECOBRACUNA, dbo.OBRACUN.GODINAOBRACUNA, 
                      dbo.OBRACUNDOPRINOSI.STOPA

GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_PLACA_DOPRINOSI]'))
DROP VIEW [dbo].[VW_PLACA_DOPRINOSI]
GO




CREATE VIEW dbo.VW_PLACA_DOPRINOSI
AS
SELECT     IDOBRACUN, MJESECOBRACUNA, GODINAOBRACUNA, MAX(CASE WHEN OZNAKATIPAIZNOSA = 'MIOI' THEN STOPA ELSE 0 END) AS STOPAMIOI, 
                      MAX(CASE WHEN OZNAKATIPAIZNOSA = 'MIOI' THEN UKUPNOOSNOVICADOPRINOS ELSE 0 END) AS OSNOVICAMIOI, 
                      SUM(CASE WHEN OZNAKATIPAIZNOSA = 'MIOI' THEN UKUPNODOPRINOS ELSE 0 END) AS UKUPNOMIOI, 
                      MAX(CASE WHEN OZNAKATIPAIZNOSA = 'MIOII' THEN STOPA ELSE 0 END) AS STOPAMIOII, 
                      MAX(CASE WHEN OZNAKATIPAIZNOSA = 'MIOII' THEN UKUPNOOSNOVICADOPRINOS ELSE 0 END) AS OSNOVICAMIOII, 
                      SUM(CASE WHEN OZNAKATIPAIZNOSA = 'MIOII' THEN UKUPNODOPRINOS ELSE 0 END) AS UKUPNOMIOII,
                      MAX(CASE WHEN OZNAKATIPAIZNOSA = 'ZDR-O' THEN STOPA ELSE 0 END) AS STOPAZDRO, 
                      MAX(CASE WHEN OZNAKATIPAIZNOSA = 'ZDR-O' THEN UKUPNOOSNOVICADOPRINOS ELSE 0 END) AS OSNOVICAZDRO, 
                      SUM(CASE WHEN OZNAKATIPAIZNOSA = 'ZDR-O' THEN UKUPNODOPRINOS ELSE 0 END) AS UKUPNOZDRO,
                      MAX(CASE WHEN OZNAKATIPAIZNOSA = 'ZDR-P' THEN STOPA ELSE 0 END) AS STOPAZDRP, 
                      MAX(CASE WHEN OZNAKATIPAIZNOSA = 'ZDR-P' THEN UKUPNOOSNOVICADOPRINOS ELSE 0 END) AS OSNOVICAZDRP, 
                      SUM(CASE WHEN OZNAKATIPAIZNOSA = 'ZDR-P' THEN UKUPNODOPRINOS ELSE 0 END) AS UKUPNOZDRP,
                      MAX(CASE WHEN OZNAKATIPAIZNOSA = 'ZAP' THEN STOPA ELSE 0 END) AS STOPAZAP, 
                      MAX(CASE WHEN OZNAKATIPAIZNOSA = 'ZAP' THEN UKUPNOOSNOVICADOPRINOS ELSE 0 END) AS OSNOVICAZAP, 
                      SUM(CASE WHEN OZNAKATIPAIZNOSA = 'ZAP' THEN UKUPNODOPRINOS ELSE 0 END) AS UKUPNOZAP,
                      MAX(CASE WHEN OZNAKATIPAIZNOSA = 'ZAP-I' THEN STOPA ELSE 0 END) AS STOPAZAPI, 
                      MAX(CASE WHEN OZNAKATIPAIZNOSA = 'ZAP-I' THEN UKUPNOOSNOVICADOPRINOS ELSE 0 END) AS OSNOVICAZAPI, 
                      SUM(CASE WHEN OZNAKATIPAIZNOSA = 'ZAP-I' THEN UKUPNODOPRINOS ELSE 0 END) AS UKUPNOZAPI
FROM         dbo.VW_PLACA_UKUPNO_DOPRINOSI
GROUP BY IDOBRACUN, MJESECOBRACUNA, GODINAOBRACUNA






GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_PLACA_DOPRINOSI_BC]'))
DROP VIEW [dbo].[VW_PLACA_DOPRINOSI_BC]
GO

CREATE VIEW [dbo].[VW_PLACA_DOPRINOSI_BC]
AS
SELECT     obracunradnici.IDIPIDENT,obracundoprinosi.idradnik,dbo.OBRACUNDOPRINOSI.IDOBRACUN, dbo.TIPIZNOSA.OZNAKATIPAIZNOSA, SUM(dbo.OBRACUNDOPRINOSI.OBRACUNATIDOPRINOS) AS UKUPNODOPRINOS
FROM         dbo.OBRACUNDOPRINOSI INNER JOIN
                      dbo.TIPIZNOSA ON dbo.OBRACUNDOPRINOSI.VBDIDOPRINOS = dbo.TIPIZNOSA.VBDITIPAIZNOSA AND 
                      dbo.OBRACUNDOPRINOSI.ZRNDOPRINOS = dbo.TIPIZNOSA.ZIROTIPAIZNOSA AND dbo.OBRACUNDOPRINOSI.MODOPRINOS = dbo.TIPIZNOSA.MOTIPAIZNOSA AND 
                      dbo.OBRACUNDOPRINOSI.PODOPRINOS = dbo.TIPIZNOSA.POTIPAIZNOSA INNER JOIN
                      dbo.OBRACUN ON dbo.OBRACUNDOPRINOSI.IDOBRACUN = dbo.OBRACUN.IDOBRACUN
                      INNER JOIN obracunradnici ON dbo.OBRACUN.IDOBRACUN = dbo.ObracunRadnici.IDOBRACUN AND obracundoprinosi.idradnik = obracunradnici.idradnik
                      
WHERE     (dbo.OBRACUN.GODINAOBRACUNA &lt; 2003)
GROUP BY obracundoprinosi.idradnik,obracunradnici.IDIPIDENT,dbo.OBRACUNDOPRINOSI.IDOBRACUN, dbo.TIPIZNOSA.OZNAKATIPAIZNOSA, dbo.TIPIZNOSA.OZNAKATIPAIZNOSA
GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_PLACA_GODINE_ISPLATE]'))
DROP VIEW [dbo].[VW_PLACA_GODINE_ISPLATE]
GO




CREATE VIEW dbo.VW_PLACA_GODINE_ISPLATE
AS
SELECT     TOP (100) PERCENT GODINAISPLATE AS godinaisplate
FROM         dbo.OBRACUN
GROUP BY GODINAISPLATE
UNION
SELECT     TOP (100) PERCENT DOSISPLATAUGODINI AS godinaisplate
FROM         dbo.DOSIPZAGLAVLJE
GROUP BY DOSISPLATAUGODINI
ORDER BY GODINAISPLATE DESC





GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_PLACA_GODINE_OBRACUNA]'))
DROP VIEW [dbo].[VW_PLACA_GODINE_OBRACUNA]
GO




CREATE VIEW dbo.VW_PLACA_GODINE_OBRACUNA
AS
SELECT     TOP (100) PERCENT GODINAOBRACUNA
FROM         dbo.OBRACUN
GROUP BY GODINAOBRACUNA
ORDER BY GODINAOBRACUNA DESC





GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_PLACA_ID_DOP]'))
DROP VIEW [dbo].[VW_PLACA_ID_DOP]
GO

CREATE VIEW [dbo].[VW_PLACA_ID_DOP]
AS
SELECT     TOP 100 PERCENT obracundoprinosi.idradnik,dbo.OBRACUNDOPRINOSI.IDOBRACUN, dbo.TIPIZNOSA.OZNAKATIPAIZNOSA, SUM(dbo.OBRACUNDOPRINOSI.OBRACUNATIDOPRINOS) AS UKUPNODOPRINOS,obracunradnici.IDIPIDENT
FROM         dbo.OBRACUNDOPRINOSI INNER JOIN
                      dbo.TIPIZNOSA ON dbo.OBRACUNDOPRINOSI.VBDIDOPRINOS = dbo.TIPIZNOSA.VBDITIPAIZNOSA AND
                      dbo.OBRACUNDOPRINOSI.ZRNDOPRINOS = dbo.TIPIZNOSA.ZIROTIPAIZNOSA AND dbo.OBRACUNDOPRINOSI.MODOPRINOS = dbo.TIPIZNOSA.MOTIPAIZNOSA AND
                      dbo.OBRACUNDOPRINOSI.PODOPRINOS = dbo.TIPIZNOSA.POTIPAIZNOSA INNER JOIN
                      dbo.OBRACUN ON dbo.OBRACUNDOPRINOSI.IDOBRACUN = dbo.OBRACUN.IDOBRACUN
                      INNER JOIN obracunradnici ON dbo.OBRACUN.IDOBRACUN = dbo.ObracunRadnici.IDOBRACUN AND obracundoprinosi.idradnik = obracunradnici.idradnik
WHERE     (dbo.OBRACUN.GODINAOBRACUNA &gt; 2002)
GROUP BY obracundoprinosi.idradnik,dbo.OBRACUNDOPRINOSI.IDOBRACUN, dbo.TIPIZNOSA.OZNAKATIPAIZNOSA, dbo.TIPIZNOSA.OZNAKATIPAIZNOSA,obracunradnici.IDIPIDENT
ORDER BY dbo.OBRACUNDOPRINOSI.IDOBRACUn
GO



IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_PLACA_OLAKSICE_PRIZNATE_VRSTE]'))
DROP VIEW [dbo].[VW_PLACA_OLAKSICE_PRIZNATE_VRSTE]
GO

CREATE VIEW dbo.VW_PLACA_OLAKSICE_PRIZNATE_VRSTE
AS
SELECT     IDOBRACUN, IDRADNIK, IDGRUPEOLAKSICA, MAXIMALNIIZNOSGRUPE - ISNULL
                          ((SELECT     SUM(IZNOSPOREZNOPRIZNATEOLAKSICE)
                              FROM         VW_PLACA_OLAKSICE_VRSTA a
                              WHERE     a.IDOBRACUN = b.IDOBRACUN AND a.IDRADNIK = b.IDRADNIK AND a.IDTIPOLAKSICE &lt; b.IDTIPOLAKSICE), 0) 
                      AS MAXIMALNIIZNOSGRUPE, IDTIPOLAKSICE, IZNOSOLAKSICE, 
                      CASE WHEN IZNOSPOREZNOPRIZNATEOLAKSICE &gt; MAXIMALNIIZNOSGRUPE - ISNULL
                          ((SELECT     SUM(IZNOSPOREZNOPRIZNATEOLAKSICE)
                              FROM         VW_PLACA_OLAKSICE_VRSTA a
                              WHERE     a.IDOBRACUN = b.IDOBRACUN AND a.IDRADNIK = b.IDRADNIK AND a.IDTIPOLAKSICE &lt; b.IDTIPOLAKSICE), 0) 
                      THEN MAXIMALNIIZNOSGRUPE - ISNULL
                          ((SELECT     SUM(IZNOSPOREZNOPRIZNATEOLAKSICE)
                              FROM         VW_PLACA_OLAKSICE_VRSTA a
                              WHERE     a.IDOBRACUN = b.IDOBRACUN AND a.IDRADNIK = b.IDRADNIK AND a.IDTIPOLAKSICE &lt; b.IDTIPOLAKSICE), 0) 
                      ELSE IZNOSPOREZNOPRIZNATEOLAKSICE END AS IZNOSPOREZNOPRIZNATEOLAKSICE
FROM         dbo.VW_PLACA_OLAKSICE_VRSTA b
GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_PLACA_ID_UKUPNO]'))
DROP VIEW [dbo].[VW_PLACA_ID_UKUPNO]
GO
CREATE VIEW [dbo].[VW_PLACA_ID_UKUPNO]
AS
SELECT     TOP 100 PERCENT dbo.OBRACUNradnici.IDOBRACUN, dbo.OBRACUN.MJESECISPLATE, dbo.OBRACUN.GODINAISPLATE, ISNULL(sum(OBRACUN_BRUTO.UKUPNOBRUTO),0)
                      AS UKUPNOBRUTO, ISNULL(sum(OBRACUN_MIOIO.UKUPNOMIOIO),0) + ISNULL(sum(OBRACUN_MIOIP.UKUPNOMIOIP),0) AS UKUPNOMIOI, 
                      ISNULL(sum(OBRACUN_MIOIIO.UKUPNOMIOIIO),0) + ISNULL(sum(OBRACUN_MIOIIP.UKUPNOMIOIIP),0) AS UKUPNOMIOII,
                      ISNULL(sum(OBRACUN_MIOPRIJE2003.UKUPNOMIOPRIJE2003),0) AS UKUPNOMIOPRIJE2003, ISNULL(sum(OBRACUN_ZIVOTNO.UKUPNOZIVOTNO) ,0)
                      AS UKUPNOZIVOTNO, ISNULL(sum(OBRACUN_DOPZDRAV.UKUPNODOPZDRAV),0) AS UKUPNODOPZDRAV, 
                      ISNULL(sum(OBRACUN_DOBMIROV.UKUPNODOBMIROV),0) AS UKUPNODOBMIROV, 
                      ISNULL(sum(OBRACUN_POREZ.UKUPNOPOREZ),0) AS UKUPNOPOREZ,
                      ISNULL(sum(OBRACUN_MIOIO.UKUPNOMIOIO),0) AS UKUPNOMIOIO, ISNULL(sum(OBRACUN_MIOIP.UKUPNOMIOIP),0) AS UKUPNOMIOIP, 
                      ISNULL(sum(OBRACUN_MIOIIO.UKUPNOMIOIIO),0) AS UKUPNOMIOIIO, ISNULL(sum(OBRACUN_MIOIIP.UKUPNOMIOIIP),0) AS UKUPNOMIOIIP, 
                      ISNULL(sum(OBRACUN_ZDRO.UKUPNOZDRO),0) AS UKUPNOZDRO, ISNULL(sum(OBRACUN_ZDRP.UKUPNOZDRP),0) AS UKUPNOZDRP, 
                      ISNULL(sum(OBRACUN_ZDRI.UKUPNOZDRI),0) AS UKUPNOZDRI, ISNULL(sum(OBRACUN_ZAP.UKUPNOZAP),0) AS UKUPNOZAP, 
                      ISNULL(sum(OBRACUN_ZAPI.UKUPNOZAPI),0) AS UKUPNOZAPI,obracunradnici.IDIPIDENT AS IDENTIFIKATOR,obracunradnici.idradnik,
                      ISNULL(SUM(ISKORISTENOOO),0) AS UKUPNOOO, ISNULL(SUM(OBRACUNATIPRIREZ),0) + ISNULL(SUM(KOREKCIJAPRIREZA),0) AS UKUPNOPRIREZ
FROM         dbo.OBRACUNradnici 
INNER JOIN obracun ON dbo.ObracunRadnici.IDOBRACUN = dbo.OBRACUN.IDOBRACUN
LEFT OUTER JOIN
                          (SELECT     idradnik,IDOBRACUN, SUM(UKUPNODOPRINOS) AS UKUPNOMIOPRIJE2003
                            FROM          dbo.VW_PLACA_DOPRINOSI_BC
                            WHERE      (OZNAKATIPAIZNOSA IN ('MIOI', 'MIOI-P', 'MIOII', 'MIOII-P'))
                            GROUP BY dbo.VW_PLACA_DOPRINOSI_BC.idradnik,IDOBRACUN) AS OBRACUN_MIOPRIJE2003 ON dbo.obracunradnici.IDOBRACUN = OBRACUN_MIOPRIJE2003.IDOBRACUN  AND obracunradnici.idradnik = OBRACUN_MIOPRIJE2003.idradnik
                            LEFT OUTER JOIN
                          (SELECT     obracunelementi.idradnik,obracunelementi.IDOBRACUN, SUM(OBRIZNOS) AS UKUPNOBRUTO
                            FROM          dbo.ObracunElementi
                            WHERE      (IDVRSTAELEMENTA = 2)
                            GROUP BY obracunelementi.IDOBRACUN,obracunelementi.idradnik) AS OBRACUN_BRUTO ON dbo.obracunradnici.IDOBRACUN = OBRACUN_BRUTO.IDOBRACUN AND obracunradnici.idradnik = OBRACUN_BRUTO.idradnik
                            LEFT OUTER JOIN
                          (SELECT     VW_PLACA_ID_DOP.idradnik,IDOBRACUN, SUM(UKUPNODOPRINOS) AS UKUPNOMIOIO
                            FROM          dbo.VW_PLACA_ID_DOP
                            WHERE      (OZNAKATIPAIZNOSA = 'MIOI')
                            GROUP BY VW_PLACA_ID_DOP.idradnik,IDOBRACUN) AS OBRACUN_MIOIO ON dbo.OBRACUNradnici.IDOBRACUN = OBRACUN_MIOIO.IDOBRACUN  AND obracunradnici.idradnik = OBRACUN_MIOIO.idradnik
                            LEFT OUTER JOIN
                          (SELECT     VW_PLACA_ID_DOP_8.idradnik,IDOBRACUN, SUM(UKUPNODOPRINOS) AS UKUPNOMIOIP
                            FROM          dbo.VW_PLACA_ID_DOP AS VW_PLACA_ID_DOP_8
                            WHERE      (OZNAKATIPAIZNOSA IN ('MIOI-P'))
                            GROUP BY VW_PLACA_ID_DOP_8.idradnik,IDOBRACUN) AS OBRACUN_MIOIP ON dbo.OBRACUNradnici.IDOBRACUN  = OBRACUN_MIOIP.IDOBRACUN AND obracunradnici.idradnik = OBRACUN_MIOIP.idradnik
                            LEFT OUTER JOIN
                          (SELECT     VW_PLACA_ID_DOP_7.idradnik,IDOBRACUN, SUM(UKUPNODOPRINOS) AS UKUPNOMIOIIO
                            FROM          dbo.VW_PLACA_ID_DOP AS VW_PLACA_ID_DOP_7
                            WHERE      (OZNAKATIPAIZNOSA = 'MIOII')
                            GROUP BY VW_PLACA_ID_DOP_7.idradnik,IDOBRACUN) AS OBRACUN_MIOIIO ON dbo.OBRACUNradnici.IDOBRACUN = OBRACUN_MIOIIO.IDOBRACUN AND obracunradnici.idradnik = OBRACUN_MIOIIO.idradnik
                            LEFT OUTER JOIN
                          (SELECT     VW_PLACA_ID_DOP_6.idradnik,IDOBRACUN, SUM(UKUPNODOPRINOS) AS UKUPNOMIOIIP
                            FROM          dbo.VW_PLACA_ID_DOP AS VW_PLACA_ID_DOP_6
                            WHERE      (OZNAKATIPAIZNOSA = 'MIOII-P')
                            GROUP BY VW_PLACA_ID_DOP_6.idradnik,IDOBRACUN) AS OBRACUN_MIOIIP ON dbo.OBRACUNradnici.IDOBRACUN = OBRACUN_MIOIIP.IDOBRACUN AND obracunradnici.idradnik = OBRACUN_MIOIIP.idradnik
                            LEFT OUTER JOIN
                          (SELECT     VW_PLACA_OLAKSICE_PRIZNATE_VRSTE.idradnik,IDOBRACUN, SUM(IZNOSPOREZNOPRIZNATEOLAKSICE) AS UKUPNOZIVOTNO
                            FROM          dbo.VW_PLACA_OLAKSICE_PRIZNATE_VRSTE
                            WHERE      (IDTIPOLAKSICE = 1)
                            GROUP BY VW_PLACA_OLAKSICE_PRIZNATE_VRSTE.idradnik,IDOBRACUN) AS OBRACUN_ZIVOTNO ON dbo.OBRACUNradnici.IDOBRACUN = OBRACUN_ZIVOTNO.IDOBRACUN AND dbo.OBRACUNradnici.idradnik = OBRACUN_ZIVOTNO.idradnik
                            LEFT OUTER JOIN
                          (SELECT     VW_PLACA_OLAKSICE_PRIZNATE_VRSTE_2.idradnik,IDOBRACUN, SUM(IZNOSPOREZNOPRIZNATEOLAKSICE) AS UKUPNODOPZDRAV
                            FROM          dbo.VW_PLACA_OLAKSICE_PRIZNATE_VRSTE AS VW_PLACA_OLAKSICE_PRIZNATE_VRSTE_2
                            WHERE      (IDTIPOLAKSICE = 2)
                            GROUP BY VW_PLACA_OLAKSICE_PRIZNATE_VRSTE_2.idradnik,IDOBRACUN) AS OBRACUN_DOPZDRAV ON dbo.OBRACUNradnici.IDOBRACUN = OBRACUN_DOPZDRAV.IDOBRACUN  AND dbo.OBRACUNradnici.idradnik = OBRACUN_DOPZDRAV.idradnik
                            LEFT OUTER JOIN
                          (SELECT     VW_PLACA_OLAKSICE_PRIZNATE_VRSTE_1.idradnik,IDOBRACUN, SUM(IZNOSPOREZNOPRIZNATEOLAKSICE) AS UKUPNODOBMIROV
                            FROM          dbo.VW_PLACA_OLAKSICE_PRIZNATE_VRSTE AS VW_PLACA_OLAKSICE_PRIZNATE_VRSTE_1
                            WHERE      (IDTIPOLAKSICE = 3)
                            GROUP BY VW_PLACA_OLAKSICE_PRIZNATE_VRSTE_1.idradnik,IDOBRACUN) AS OBRACUN_DOBMIROV ON dbo.OBRACUNradnici.IDOBRACUN = OBRACUN_DOBMIROV.IDOBRACUN AND dbo.OBRACUNradnici.idradnik = OBRACUN_DOBMIROV.idradnik
                            LEFT OUTER JOIN
                          (SELECT     obracunporezi.idradnik,IDOBRACUN, SUM(OBRACUNATIPOREZ) AS UKUPNOPOREZ
                            FROM          dbo.ObracunPorezi
                            GROUP BY obracunporezi.idradnik,IDOBRACUN) AS OBRACUN_POREZ ON dbo.obracunradnici.IDOBRACUN = OBRACUN_POREZ.IDOBRACUN AND  obracunradnici.idradnik = OBRACUN_POREZ.idradnik
                            LEFT OUTER JOIN
                          (SELECT     VW_PLACA_ID_DOP_5.idradnik,IDOBRACUN, SUM(UKUPNODOPRINOS) AS UKUPNOZDRO
                            FROM          dbo.VW_PLACA_ID_DOP AS VW_PLACA_ID_DOP_5
                            WHERE      (OZNAKATIPAIZNOSA = 'ZDR-O')
                            GROUP BY VW_PLACA_ID_DOP_5.idradnik,IDOBRACUN) AS OBRACUN_ZDRO ON dbo.obracunradnici.IDOBRACUN = OBRACUN_ZDRO.IDOBRACUN AND obracunradnici.idradnik = obracun_zdro.idradnik
                            LEFT OUTER JOIN
                          (SELECT     VW_PLACA_ID_DOP_4.idradnik,IDOBRACUN, SUM(UKUPNODOPRINOS) AS UKUPNOZDRP
                            FROM          dbo.VW_PLACA_ID_DOP AS VW_PLACA_ID_DOP_4
                            WHERE      (OZNAKATIPAIZNOSA = 'ZDR-P')
                            GROUP BY VW_PLACA_ID_DOP_4.idradnik,IDOBRACUN) AS OBRACUN_ZDRP ON dbo.OBRACUNradnici.IDOBRACUN = OBRACUN_ZDRP.IDOBRACUN AND obracunradnici.idradnik = obracun_zdrp.idradnik
                            LEFT OUTER JOIN
                          (SELECT     VW_PLACA_ID_DOP_3.idradnik,IDOBRACUN, SUM(UKUPNODOPRINOS) AS UKUPNOZDRI
                            FROM          dbo.VW_PLACA_ID_DOP AS VW_PLACA_ID_DOP_3
                            WHERE      (OZNAKATIPAIZNOSA = 'ZDR-I')
                            GROUP BY VW_PLACA_ID_DOP_3.idradnik,IDOBRACUN) AS OBRACUN_ZDRI ON dbo.OBRACUN.IDOBRACUN = OBRACUN_ZDRI.IDOBRACUN  AND obracunradnici.idradnik = OBRACUN_ZDRI.idradnik
                            LEFT OUTER JOIN
                          (SELECT     VW_PLACA_ID_DOP_2.idradnik,IDOBRACUN, SUM(UKUPNODOPRINOS) AS UKUPNOZAP
                            FROM          dbo.VW_PLACA_ID_DOP AS VW_PLACA_ID_DOP_2
                            WHERE      (OZNAKATIPAIZNOSA = 'ZAP')
                            GROUP BY VW_PLACA_ID_DOP_2.idradnik,IDOBRACUN) AS OBRACUN_ZAP ON dbo.OBRACUN.IDOBRACUN = OBRACUN_ZAP.IDOBRACUN AND obracunradnici.idradnik = OBRACUN_ZAP.idradnik
                            LEFT OUTER JOIN
                          (SELECT     VW_PLACA_ID_DOP_1.idradnik,IDOBRACUN, SUM(UKUPNODOPRINOS) AS UKUPNOZAPI
                            FROM          dbo.VW_PLACA_ID_DOP AS VW_PLACA_ID_DOP_1
                            WHERE      (OZNAKATIPAIZNOSA = 'ZAP-I')
GROUP BY VW_PLACA_ID_DOP_1.idradnik,IDOBRACUN) AS OBRACUN_ZAPI ON dbo.OBRACUN.IDOBRACUN = OBRACUN_ZAPI.IDOBRACUN AND obracunradnici.idradnik = OBRACUN_ZAPI.idradnik
GROUP BY obracunradnici.idobracun,dbo.OBRACUN.MJESECISPLATE, dbo.OBRACUN.GODINAISPLATE,obracunradnici.IDIPIDENT,dbo.OBRACUNradnici.IDRADNIK
ORDER BY obracunradnici.IDOBRACUN           
GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_PLACA_OLAKSICE]'))
DROP VIEW [dbo].[VW_PLACA_OLAKSICE]
GO




CREATE VIEW dbo.VW_PLACA_OLAKSICE
AS
SELECT     IDOBRACUN, IDRADNIK, IDGRUPEOLAKSICA, IDTIPOLAKSICE, IDOLAKSICE, MAXIMALNIIZNOSGRUPE, SUM(OBRACUNATAOLAKSICA) 
                      AS IZNOSOLAKSICE, CASE WHEN SUM(OBRACUNATAOLAKSICA) 
                      &gt; MAXIMALNIIZNOSGRUPE THEN MAXIMALNIIZNOSGRUPE ELSE SUM(OBRACUNATAOLAKSICA) END AS IZNOSPOREZNOPRIZNATEOLAKSICE
FROM         dbo.OBRACUNOLAKSICE
GROUP BY IDOBRACUN, IDRADNIK, IDGRUPEOLAKSICA, IDTIPOLAKSICE, IDOLAKSICE, MAXIMALNIIZNOSGRUPE





GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_PLACA_OLAKSICE_GRUPE]'))
DROP VIEW [dbo].[VW_PLACA_OLAKSICE_GRUPE]
GO




CREATE VIEW dbo.VW_PLACA_OLAKSICE_GRUPE
AS
SELECT     IDOBRACUN, IDRADNIK, IDGRUPEOLAKSICA, MAXIMALNIIZNOSGRUPE, SUM(OBRACUNATAOLAKSICA) AS IZNOSOLAKSICE, 
                      CASE WHEN SUM(OBRACUNATAOLAKSICA) &gt; MAXIMALNIIZNOSGRUPE THEN MAXIMALNIIZNOSGRUPE ELSE SUM(OBRACUNATAOLAKSICA) 
                      END AS IZNOSPOREZNOPRIZNATEOLAKSICE
FROM         dbo.OBRACUNOLAKSICE
GROUP BY IDOBRACUN, IDRADNIK, MAXIMALNIIZNOSGRUPE, IDGRUPEOLAKSICA





GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_PLACA_OLAKSICE_PRIZNATE]'))
DROP VIEW [dbo].[VW_PLACA_OLAKSICE_PRIZNATE]
GO




CREATE VIEW dbo.VW_PLACA_OLAKSICE_PRIZNATE
AS
SELECT     IDOBRACUN, IDRADNIK, IDGRUPEOLAKSICA, IDOLAKSICE, MAXIMALNIIZNOSGRUPE - ISNULL
                          ((SELECT     SUM(IZNOSPOREZNOPRIZNATEOLAKSICE)
                              FROM         VW_PLACA_OLAKSICE a
                              WHERE     a.IDOBRACUN = b.IDOBRACUN AND a.IDRADNIK = b.IDRADNIK AND a.IDTIPOLAKSICE &lt;= b.IDTIPOLAKSICE AND 
                                                    a.IDOLAKSICE &lt; b.IDOLAKSICE), 0) AS MAXIMALNIIZNOSGRUPE, IDTIPOLAKSICE, IZNOSOLAKSICE, 
                      CASE WHEN IZNOSPOREZNOPRIZNATEOLAKSICE &gt; MAXIMALNIIZNOSGRUPE - ISNULL
                          ((SELECT     SUM(IZNOSPOREZNOPRIZNATEOLAKSICE)
                              FROM         VW_PLACA_OLAKSICE a
                              WHERE     a.IDOBRACUN = b.IDOBRACUN AND a.IDRADNIK = b.IDRADNIK AND a.IDTIPOLAKSICE &lt;= b.IDTIPOLAKSICE AND 
                                                    a.IDOLAKSICE &lt; b.IDOLAKSICE), 0) THEN MAXIMALNIIZNOSGRUPE - ISNULL
                          ((SELECT     SUM(IZNOSPOREZNOPRIZNATEOLAKSICE)
                              FROM         VW_PLACA_OLAKSICE a
                              WHERE     a.IDOBRACUN = b.IDOBRACUN AND a.IDRADNIK = b.IDRADNIK AND a.IDTIPOLAKSICE &lt;= b.IDTIPOLAKSICE AND 
                                                    a.IDOLAKSICE &lt; b.IDOLAKSICE), 0) ELSE IZNOSPOREZNOPRIZNATEOLAKSICE END AS IZNOSPOREZNOPRIZNATEOLAKSICE
FROM         dbo.VW_PLACA_OLAKSICE b






GO









IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_PLACA_OLAKSICE_VRSTA]'))
DROP VIEW [dbo].[VW_PLACA_OLAKSICE_VRSTA]
GO




CREATE VIEW dbo.VW_PLACA_OLAKSICE_VRSTA AS SELECT IDOBRACUN, IDRADNIK, IDGRUPEOLAKSICA, MAXIMALNIIZNOSGRUPE, IDTIPOLAKSICE, SUM(OBRACUNATAOLAKSICA) AS IZNOSOLAKSICE, CASE WHEN SUM(OBRACUNATAOLAKSICA) &gt; MAXIMALNIIZNOSGRUPE THEN MAXIMALNIIZNOSGRUPE ELSE SUM(OBRACUNATAOLAKSICA) END AS IZNOSPOREZNOPRIZNATEOLAKSICE FROM dbo.OBRACUNOLAKSICE GROUP BY IDOBRACUN, IDRADNIK, MAXIMALNIIZNOSGRUPE, IDGRUPEOLAKSICA, IDTIPOLAKSICE





GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_PLACA_OO_UKUPNO_PO_ZAPOSLENIKU]'))
DROP VIEW [dbo].[VW_PLACA_OO_UKUPNO_PO_ZAPOSLENIKU]
GO




CREATE VIEW dbo.VW_PLACA_OO_UKUPNO_PO_ZAPOSLENIKU
AS
SELECT     SUM(FAKTOROSOBNOGODBITKA) AS FAKTOROSOBNOGODBITKASUMARNO, IDRADNIK
FROM         dbo.VW_PLACA_OO_ZAPOSLENIKA
GROUP BY IDRADNIK






GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_PLACA_OO_ZAPOSLENIKA]'))
DROP VIEW [dbo].[VW_PLACA_OO_ZAPOSLENIKA]
GO




CREATE VIEW dbo.VW_PLACA_OO_ZAPOSLENIKA
AS
SELECT     TOP 100 PERCENT dbo.RADNIKODBITAK.IDRADNIK, dbo.RADNIKODBITAK.OSOBNIODBITAKZADUZENJEIDOSOBNIODBITAK, 
                      dbo.OSOBNIODBITAK.FAKTOROSOBNOGODBITKA
FROM         dbo.RADNIKODBITAK INNER JOIN
                      dbo.OSOBNIODBITAK ON dbo.RADNIKODBITAK.OSOBNIODBITAKZADUZENJEIDOSOBNIODBITAK = dbo.OSOBNIODBITAK.IDOSOBNIODBITAK
GROUP BY dbo.RADNIKODBITAK.IDRADNIK, dbo.RADNIKODBITAK.OSOBNIODBITAKZADUZENJEIDOSOBNIODBITAK, dbo.OSOBNIODBITAK.FAKTOROSOBNOGODBITKA
ORDER BY dbo.RADNIKODBITAK.IDRADNIK





GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_PLACA_OSNOVICE_MIO]'))
DROP VIEW [dbo].[VW_PLACA_OSNOVICE_MIO]
GO




CREATE VIEW dbo.VW_PLACA_OSNOVICE_MIO
AS
SELECT     dbo.OBRACUNDOPRINOSI.IDOBRACUN, dbo.OBRACUNDOPRINOSI.IDRADNIK, dbo.OBRACUNDOPRINOSI.OSNOVICADOPRINOS
FROM         dbo.OBRACUNDOPRINOSI INNER JOIN
                      dbo.TIPIZNOSA ON dbo.OBRACUNDOPRINOSI.VBDIDOPRINOS = dbo.TIPIZNOSA.VBDITIPAIZNOSA AND 
                      dbo.OBRACUNDOPRINOSI.ZRNDOPRINOS = dbo.TIPIZNOSA.ZIROTIPAIZNOSA AND dbo.OBRACUNDOPRINOSI.MODOPRINOS = dbo.TIPIZNOSA.MOTIPAIZNOSA AND 
                      dbo.OBRACUNDOPRINOSI.PODOPRINOS = dbo.TIPIZNOSA.POTIPAIZNOSA INNER JOIN
                      dbo.OBRACUN ON dbo.OBRACUNDOPRINOSI.IDOBRACUN = dbo.OBRACUN.IDOBRACUN
WHERE     (dbo.TIPIZNOSA.OZNAKATIPAIZNOSA = N'MIOI') OR
                      (dbo.TIPIZNOSA.OZNAKATIPAIZNOSA = N'MIOI-P') OR
                      (dbo.TIPIZNOSA.OZNAKATIPAIZNOSA = N'MIOII') OR
                      (dbo.TIPIZNOSA.OZNAKATIPAIZNOSA = N'MIOII-P')
GROUP BY dbo.OBRACUNDOPRINOSI.IDOBRACUN, dbo.OBRACUNDOPRINOSI.IDRADNIK, dbo.OBRACUNDOPRINOSI.OSNOVICADOPRINOS





GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_PLACA_PODACI_ZAPOSLENIKA]'))
DROP VIEW [dbo].[VW_PLACA_PODACI_ZAPOSLENIKA]
GO


CREATE VIEW dbo.VW_PLACA_PODACI_ZAPOSLENIKA
AS
SELECT     dbo.RADNIK.IDRADNIK, dbo.RADNIK.PREZIME, dbo.RADNIK.IME, dbo.RADNIK.OPCINARADAIDOPCINE, dbo.RADNIK.OPCINASTANOVANJAIDOPCINE, 
                      dbo.BANKE.NAZIVBANKE1, dbo.RADNIK.TEKUCI, dbo.VW_PLACA_OO_UKUPNO_PO_ZAPOSLENIKU.FAKTOROSOBNOGODBITKASUMARNO, 
                      dbo.RADNIK.TJEDNIFONDSATI, dbo.RADNIK.KOEFICIJENT, dbo.RADNIK.GODINESTAZA, dbo.RADNIK.MJESECISTAZA, dbo.RADNIK.DANISTAZA, 
                      dbo.RADNIK.DATUMZADNJEGZAPOSLENJAPROMJENEFONDASATI, dbo.RADNIK.RADNIKPOREZIDOPRINOSIDSKUPPOREZAIDOPRINOSA, 
                      dbo.SKUPPOREZAIDOPRINOSA.NAZIVSKUPPOREZAIDOPRINOSA, dbo.RADNIK.JMBG, dbo.RADNIK.POSTOTAKOSLOBODJENJAODPOREZA, 
                      dbo.RADNIK.TJEDNIFONDSATISTAZ, dbo.BENEFICIRANI.BROJPRIZNATIHMJESECI, dbo.RADNIK.AKTIVAN, dbo.RADNIK.ZBIRNINETO, dbo.RADNIK.OIB, 
                      dbo.SPOL.NAZIVSPOL, dbo.RADNIK.GODINESTAZAPRO, dbo.RADNIK.MJESECISTAZAPRO, dbo.RADNIK.DANISTAZAPRO
FROM         dbo.RADNIK INNER JOIN
                      dbo.BANKE ON dbo.RADNIK.IDBANKE = dbo.BANKE.IDBANKE INNER JOIN
                      dbo.SKUPPOREZAIDOPRINOSA ON 
                      dbo.RADNIK.RADNIKPOREZIDOPRINOSIDSKUPPOREZAIDOPRINOSA = dbo.SKUPPOREZAIDOPRINOSA.IDSKUPPOREZAIDOPRINOSA INNER JOIN
                      dbo.SPOL ON dbo.RADNIK.IDSPOL = dbo.SPOL.IDSPOL LEFT OUTER JOIN
                      dbo.VW_PLACA_OO_UKUPNO_PO_ZAPOSLENIKU ON 
                      dbo.RADNIK.IDRADNIK = dbo.VW_PLACA_OO_UKUPNO_PO_ZAPOSLENIKU.IDRADNIK LEFT OUTER JOIN
                      dbo.BENEFICIRANI ON dbo.RADNIK.IDBENEFICIRANI = dbo.BENEFICIRANI.IDBENEFICIRANI




GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_PLACA_POREZI_PO_SKUPINAMA]'))
DROP VIEW [dbo].[VW_PLACA_POREZI_PO_SKUPINAMA]
GO




CREATE VIEW dbo.VW_PLACA_POREZI_PO_SKUPINAMA
AS
SELECT     dbo.OBRACUN.IDOBRACUN, dbo.OBRACUN.MJESECOBRACUNA, dbo.OBRACUN.GODINAOBRACUNA, dbo.OBRACUNRADNICI.IDRADNIK, 
                       ISNULL(SUM(CASE WHEN dbo.OBRACUNPOREZI.stopaporeza = 15 THEN dbo.OBRACUNPOREZI.OBRACUNATIPOREZ ELSE 0 END), 0) 
                      AS UKUPNOPOREZDOFAKTOO2, ISNULL(SUM(CASE WHEN OBRACUNPOREZI.stopaporeza = 25  
                      THEN dbo.OBRACUNPOREZI.OBRACUNATIPOREZ ELSE 0 END), 0) AS UKUPNOPOREZODFAKTOO2DO5, 
                      ISNULL(SUM(CASE WHEN OBRACUNPOREZI.stopaporeza &gt; 25 THEN dbo.OBRACUNPOREZI.OBRACUNATIPOREZ ELSE 0 END), 0) 
                      AS UKUPNOPOREZODFAKTOO5
FROM         dbo.OBRACUN INNER JOIN
                      dbo.OBRACUNRADNICI ON dbo.OBRACUN.IDOBRACUN = dbo.OBRACUNRADNICI.IDOBRACUN LEFT OUTER JOIN
                      dbo.OBRACUNPOREZI ON dbo.OBRACUNRADNICI.IDOBRACUN = dbo.OBRACUNPOREZI.IDOBRACUN AND dbo.OBRACUNRADNICI.IDRADNIK = dbo.OBRACUNPOREZI.IDRADNIK
GROUP BY dbo.OBRACUN.IDOBRACUN, dbo.OBRACUN.MJESECOBRACUNA, dbo.OBRACUN.GODINAOBRACUNA, dbo.OBRACUNRADNICI.IDRADNIK






GO





IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_PLACA_ZAPOSLENIK_UKUPNO]'))
DROP VIEW [dbo].[VW_PLACA_ZAPOSLENIK_UKUPNO]
GO



CREATE VIEW [dbo].[VW_PLACA_ZAPOSLENIK_UKUPNO]
AS
SELECT     dbo.ObracunRadnici.IDOBRACUN, dbo.ObracunRadnici.IDIPIDENT, dbo.OBRACUN.MJESECOBRACUNA, dbo.OBRACUN.GODINAOBRACUNA, 
                      dbo.OBRACUN.MJESECISPLATE, dbo.OBRACUN.GODINAISPLATE, dbo.OBRACUN.DATUMISPLATE, dbo.ObracunRadnici.IDRADNIK, 
                      ISNULL(SUM(obracun_bruto.iznosbruto), 0) AS UKUPNOBRUTO, ISNULL(dbo.VW_PLACA_OSNOVICE_MIO.OSNOVICADOPRINOS, 0) 
                      AS UKUPNOOSNOVICAZADOPRINOS, ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) AS UKUPNODOPRINOSI, 
                      ISNULL(SUM(dbo.ObracunRadnici.ISKORISTENOOO), 0) AS UKUPNOOO, ISNULL(SUM(obracun_olaksice.iznosolaksice), 0) AS UKUPNOOLAKSICE, 
                      ISNULL(SUM(obracun_olaksice.iznosporeznopriznateolaksice), 0) AS UKUPNOPOREZNOPRIZNATEOLAKSICE, ISNULL(SUM(obracun_bruto.iznosbruto), 
                      0) - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) - ISNULL(SUM(dbo.ObracunRadnici.ISKORISTENOOO), 0) 
                      - ISNULL(SUM(obracun_olaksice.iznosporeznopriznateolaksice), 0) AS POREZNAOSNOVICA, ISNULL(SUM(obracun_porezi.iznosporez), 0) 
                      AS UKUPNOPOREZ, ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) + ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) 
                      AS UKUPNOPRIREZ, ISNULL(SUM(obracun_porezi.iznosporez), 0) + ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) 
                      + ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) AS UKUPNOPOREZIPRIREZ, ISNULL(SUM(obracun_bruto.iznosbruto), 0) 
                      - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) - ISNULL(SUM(obracun_porezi.iznosporez), 0) 
                      - ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) - ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) AS NETOPLACA, 
                      ISNULL(SUM(obracun_bruto.iznosbruto), 0) - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) - ISNULL(SUM(obracun_porezi.iznosporez), 0) 
                      - ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) - ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) 
                      - ISNULL(SUM(obracun_krizni.porezkrizni), 0) AS NETOPLACAMANJEKRIZNI, ISNULL(SUM(obracun_netonaknade.iznosnetonaknade), 0) 
                      AS UKUPNONETONAKNADE, ISNULL(SUM(obracun_bruto.iznosbruto), 0) - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) 
                      - ISNULL(SUM(obracun_porezi.iznosporez), 0) - ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) 
                      - ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) + ISNULL(SUM(obracun_netonaknade.iznosnetonaknade), 0) 
                      - ISNULL(SUM(obracun_krizni.porezkrizni), 0) AS NETOPRIMANJA, ISNULL(SUM(obracun_obustave.iznosobustave), 0) 
                      + ISNULL(SUM(obracun_krediti.iznoskredita), 0) AS UKUPNOOBUSTAVE, ISNULL(SUM(obracun_bruto.iznosbruto), 0) 
                      - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) - ISNULL(SUM(obracun_olaksice.iznosolaksice), 0) - ISNULL(SUM(obracun_porezi.iznosporez), 0) 
                      - ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) - ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) 
                      - ISNULL(SUM(obracun_krizni.porezkrizni), 0) + ISNULL(SUM(obracun_netonaknade.iznosnetonaknade), 0) 
                      - ISNULL(SUM(obracun_obustave.iznosobustave), 0) - ISNULL(SUM(obracun_krediti.iznoskredita), 0) AS UKUPNOZAISPLATU, 
                      ISNULL(SUM(obracun_bruto.satiukupno), 0) AS SATIBRUTO, ISNULL(SUM(obracun_doprinosi_na.iznosdoprinos), 0) AS UKUPNODOPRINOSINA, 
                      ISNULL(SUM(obracun_krizni.porezkrizni), 0) AS porezkrizni, ISNULL(MAX(dbo.ObracunRadnici.faktoo), 0) AS FAKTOR
FROM         dbo.ObracunRadnici INNER JOIN
                      dbo.OBRACUN ON dbo.ObracunRadnici.IDOBRACUN = dbo.OBRACUN.IDOBRACUN LEFT OUTER JOIN
                      dbo.VW_PLACA_OSNOVICE_MIO ON dbo.ObracunRadnici.IDOBRACUN = dbo.VW_PLACA_OSNOVICE_MIO.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = dbo.VW_PLACA_OSNOVICE_MIO.IDRADNIK LEFT OUTER JOIN
                          (SELECT     dbo.ObracunElementi.IDOBRACUN, dbo.ObracunElementi.IDRADNIK, SUM(dbo.ObracunElementi.OBRIZNOS) AS iznosbruto, 
                                                   SUM(CASE WHEN element.zbrajasateufondsati = 1 THEN OBRSATI ELSE 0 END) AS satiukupno
                            FROM          dbo.ObracunElementi INNER JOIN
                                                   dbo.ELEMENT ON dbo.ObracunElementi.IDELEMENT = dbo.ELEMENT.IDELEMENT
                            WHERE      (dbo.ELEMENT.IDVRSTAELEMENTA = 2)
                            GROUP BY dbo.ObracunElementi.IDOBRACUN, dbo.ObracunElementi.IDRADNIK) AS obracun_bruto ON 
                      dbo.ObracunRadnici.IDOBRACUN = obracun_bruto.IDOBRACUN AND dbo.ObracunRadnici.IDRADNIK = obracun_bruto.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, 0 AS osnovicadoprinos, SUM(OBRACUNATIDOPRINOS) AS iznosdoprinos
                            FROM          dbo.ObracunDoprinosi
                            WHERE      (IDVRSTADOPRINOS = 2)
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_doprinosi ON dbo.ObracunRadnici.IDOBRACUN = obracun_doprinosi.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_doprinosi.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, 0 AS osnovicadoprinos, SUM(OBRACUNATIDOPRINOS) AS iznosdoprinos
                            FROM          dbo.ObracunDoprinosi AS ObracunDoprinosi_1
                            WHERE      (IDVRSTADOPRINOS = 1)
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_doprinosi_na ON dbo.ObracunRadnici.IDOBRACUN = obracun_doprinosi_na.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_doprinosi_na.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(OBRACUNATIPOREZ) AS iznosporez
                            FROM          dbo.ObracunPorezi
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_porezi ON dbo.ObracunRadnici.IDOBRACUN = obracun_porezi.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_porezi.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(IZNOSOLAKSICE) AS iznosolaksice, SUM(IZNOSPOREZNOPRIZNATEOLAKSICE) 
                                                   AS iznosporeznopriznateolaksice
                            FROM          dbo.VW_PLACA_OLAKSICE_GRUPE
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_olaksice ON dbo.ObracunRadnici.IDOBRACUN = obracun_olaksice.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_olaksice.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(OBRIZNOS) AS iznosnetonaknade
                            FROM          dbo.ObracunElementi AS ObracunElementi_1
                            WHERE      (IDVRSTAELEMENTA = 1)
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_netonaknade ON dbo.ObracunRadnici.IDOBRACUN = obracun_netonaknade.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_netonaknade.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(OBRACUNATAOBUSTAVAUKUNAMA) AS iznosobustave
                            FROM          dbo.OBRACUNObustave
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_obustave ON dbo.ObracunRadnici.IDOBRACUN = obracun_obustave.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_obustave.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(OBRACUNATIKUNSKIIZNOS) AS iznoskredita
                            FROM          dbo.OBRACUNKrediti
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_krediti ON dbo.ObracunRadnici.IDOBRACUN = obracun_krediti.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_krediti.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(POREZKRIZNI) AS porezkrizni
                            FROM          dbo.OBRACUNOBRACUNLevel1ObracunKrizni
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_krizni ON dbo.ObracunRadnici.IDOBRACUN = obracun_krizni.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_krizni.IDRADNIK
GROUP BY dbo.ObracunRadnici.IDRADNIK, dbo.ObracunRadnici.IDOBRACUN, dbo.OBRACUN.MJESECOBRACUNA, dbo.OBRACUN.GODINAOBRACUNA, 
                      dbo.OBRACUN.MJESECISPLATE, dbo.OBRACUN.GODINAISPLATE, dbo.OBRACUN.DATUMISPLATE, dbo.ObracunRadnici.IDIPIDENT, 
                      dbo.VW_PLACA_OSNOVICE_MIO.OSNOVICADOPRINOS
GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_PLACA_ZAPOSLENIK_UKUPNO_MI]'))
DROP VIEW [dbo].[VW_PLACA_ZAPOSLENIK_UKUPNO_MI]
GO



CREATE VIEW dbo.VW_PLACA_ZAPOSLENIK_UKUPNO_MI
AS
SELECT     MJESECISPLATE, GODINAISPLATE, IDRADNIK, SUM(UKUPNOBRUTO) AS UKUPNOBRUTO, SUM(UKUPNOOSNOVICAZADOPRINOS) 
                      AS UKUPNOOSNOVICAZADOPRINOS, SUM(UKUPNODOPRINOSI) AS UKUPNODOPRINOSI, SUM(UKUPNOOO) AS UKUPNOOO, SUM(UKUPNOOLAKSICE) 
                      AS UKUPNOOLAKSICE, SUM(UKUPNOPOREZNOPRIZNATEOLAKSICE) AS UKUPNOPOREZNOPRIZNATEOLAKSICE, SUM(POREZNAOSNOVICA) 
                      AS POREZNAOSNOVICA, SUM(UKUPNOPOREZ) AS UKUPNOPOREZ, SUM(UKUPNOPRIREZ) AS UKUPNOPRIREZ, SUM(UKUPNOPOREZIPRIREZ) 
                      AS UKUPNOPOREZIPRIREZ, SUM(NETOPLACA) AS NETOPLACA, SUM(UKUPNONETONAKNADE) AS UKUPNONETONAKNADE, SUM(NETOPRIMANJA) 
                      AS NETOPRIMANJA, SUM(UKUPNOOBUSTAVE) AS UKUPNOOBUSTAVE, SUM(UKUPNOZAISPLATU) AS UKUPNOZAISPLATU, SUM(SATIBRUTO) 
                      AS SATIBRUTO, SUM(porezkrizni) AS porezkrizni
FROM         dbo.VW_PLACA_ZAPOSLENIK_UKUPNO
GROUP BY MJESECISPLATE, GODINAISPLATE, IDRADNIK





GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_PLACA_ZAPOSLENIK_UKUPNO_MO]'))
DROP VIEW [dbo].[VW_PLACA_ZAPOSLENIK_UKUPNO_MO]
GO



CREATE VIEW dbo.VW_PLACA_ZAPOSLENIK_UKUPNO_MO
AS
SELECT     MJESECOBRACUNA, GODINAOBRACUNA, IDRADNIK, SUM(UKUPNOBRUTO) AS UKUPNOBRUTO, SUM(UKUPNOOSNOVICAZADOPRINOS) 
                      AS UKUPNOOSNOVICAZADOPRINOS, SUM(UKUPNODOPRINOSI) AS UKUPNODOPRINOSI, SUM(UKUPNOOO) AS UKUPNOOO, SUM(UKUPNOOLAKSICE) 
                      AS UKUPNOOLAKSICE, SUM(UKUPNOPOREZNOPRIZNATEOLAKSICE) AS UKUPNOPOREZNOPRIZNATEOLAKSICE, SUM(POREZNAOSNOVICA) 
                      AS POREZNAOSNOVICA, SUM(UKUPNOPOREZ) AS UKUPNOPOREZ, SUM(UKUPNOPRIREZ) AS UKUPNOPRIREZ, SUM(UKUPNOPOREZIPRIREZ) 
                      AS UKUPNOPOREZIPRIREZ, SUM(NETOPLACA) AS NETOPLACA, SUM(UKUPNONETONAKNADE) AS UKUPNONETONAKNADE, SUM(NETOPRIMANJA) 
                      AS NETOPRIMANJA, SUM(UKUPNOOBUSTAVE) AS UKUPNOOBUSTAVE, SUM(UKUPNOZAISPLATU) AS UKUPNOZAISPLATU, SUM(SATIBRUTO) 
                      AS SATIBRUTO, SUM(UKUPNODOPRINOSINA) AS UKUPNODOPRINOSINA, SUM(porezkrizni) AS porezkrizni
FROM         dbo.VW_PLACA_ZAPOSLENIK_UKUPNO
GROUP BY MJESECOBRACUNA, GODINAOBRACUNA, IDRADNIK, UKUPNODOPRINOSINA
GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VW_MJESECI_GODINE_OBRACUNA]'))
DROP VIEW [dbo].[VW_MJESECI_GODINE_OBRACUNA]
GO

CREATE VIEW [dbo].[VW_MJESECI_GODINE_OBRACUNA]
AS
SELECT     TOP (100) PERCENT MJESECOBRACUNA, GODINAOBRACUNA
FROM         (SELECT     TOP (100) PERCENT MJESECOBRACUNA, GODINAOBRACUNA
                       FROM          dbo.OBRACUN
                       GROUP BY GODINAOBRACUNA, MJESECOBRACUNA) AS P
ORDER BY GODINAOBRACUNA + MJESECOBRACUNA DESC
GO



IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[vwPregledObracuna]'))
DROP VIEW [dbo].[vwPregledObracuna]
GO




CREATE VIEW [dbo].[vwPregledObracuna]
AS
SELECT     TOP (100) PERCENT dbo.OBRACUN.IDOBRACUN, dbo.OBRACUN.VRSTAOBRACUNA, dbo.OBRACUN.MJESECOBRACUNA, 
                      dbo.OBRACUN.GODINAOBRACUNA, dbo.OBRACUN.MJESECISPLATE, dbo.OBRACUN.GODINAISPLATE, dbo.OBRACUN.DATUMISPLATE, 
                      dbo.OBRACUN.tjednifondsatiobracun, dbo.OBRACUN.MJESECNIFONDSATIOBRACUN, dbo.OBRACUN.OSNOVNIOO, 
                      dbo.OBRACUN.OBRACUNSKAOSNOVICA, dbo.OBRACUN.DATUMOBRACUNASTAZA, dbo.OBRACUN.OBRPOSTOTNIH, dbo.OBRACUN.OBRFIKSNIH, 
                      dbo.OBRACUN.OBRKREDITNIH, dbo.OBRACUN.ZAKLJ, dbo.OBRACUN.SVRHAOBRACUNA, dbo.RSMA.IDENTIFIKATOROBRASCA
FROM         dbo.OBRACUN LEFT OUTER JOIN
                      dbo.RSMA ON dbo.OBRACUN.IDOBRACUN = dbo.RSMA.IDOBRACUN
ORDER BY dbo.OBRACUN.IDOBRACUN asc
GO

-- Kraj views
-- Pocetak store

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BRISI]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BRISI]
GO


CREATE PROCEDURE [dbo].[BRISI]
AS
BEGIN
DECLARE @dbname sysname 
DECLARE @SQL nvarchar(1000) 
DECLARE cur CURSOR FORWARD_ONLY KEYSET FOR 
SELECT name FROM MASTER.DBO.sysdatabases WHERE sid &lt;&gt; 0x01 
OPEN cur 
FETCH NEXT FROM cur INTO @dbname 
WHILE @@FETCH_STATUS = 0 
BEGIN 
SET @SQL = N'DROP DATABASE ' + @dbname 
exec sp_executesql @SQL
FETCH NEXT FROM cur INTO @dbname 
END 
CLOSE cur 
DEALLOCATE cur
END

GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[proc_genscript]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[proc_genscript]
GO


CREATE PROCEDURE proc_genscript 
	@ServerName varchar(30), 
	@DBName varchar(30), 
	@ObjectName varchar(50), 
	@ObjectType varchar(10), 
	@TableName varchar(50),
	@ScriptFile varchar(255)
AS

DECLARE @CmdStr varchar(255)
DECLARE @object int
DECLARE @hr int

SET NOCOUNT ON
SET @CmdStr = 'Connect('+@ServerName+')'
EXEC @hr = sp_OACreate 'SQLDMO.SQLServer', @object OUT

--Comment out for standard login
EXEC @hr = sp_OASetProperty @object, 'LoginSecure', TRUE

/* Uncomment for Standard Login
EXEC @hr = sp_OASetProperty @object, 'Login', 'sa'
EXEC @hr = sp_OASetProperty @object, 'password', 'sapassword'
*/

EXEC @hr = sp_OAMethod @object,@CmdStr
SET @CmdStr = 
  CASE @ObjectType
    WHEN 'Database' 	THEN 'Databases("' 
    WHEN 'Procedure'	THEN 'Databases("' + @DBName + '").StoredProcedures("'
    WHEN 'View' 	THEN 'Databases("' + @DBName + '").Views("'
    WHEN 'Table'	THEN 'Databases("' + @DBName + '").Tables("'
    WHEN 'Index'	THEN 'Databases("' + @DBName + '").Tables("' + @TableName + '").Indexes("'
    WHEN 'Trigger'	THEN 'Databases("' + @DBName + '").Tables("' + @TableName + '").Triggers("'
    WHEN 'Key'	THEN 'Databases("' + @DBName + '").Tables("' + @TableName + '").Keys("'
    WHEN 'Check'	THEN 'Databases("' + @DBName + '").Tables("' + @TableName + '").Checks("'
    WHEN 'Job'	THEN 'Jobserver.Jobs("'
  END

SET @CmdStr = @CmdStr + @ObjectName + '").Script(5,"' + @ScriptFile + '")'
EXEC @hr = sp_OAMethod @object, @CmdStr
EXEC @hr = sp_OADestroy @object


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_DD_IDD]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_DD_IDD]
GO


CREATE PROCEDURE dbo.S_DD_IDD
(
@MJESECISPLATE varchar(2) ,
@GODINAISPLATE varchar(4),
@KOLONA INT
)
AS
BEGIN
SELECT     


isnull((SELECT COUNT(dbo.DDOBRACUNRadnici.DDIDRADNIK) AS brojprimatelja
FROM DDOBRACUNRADNICI
where ddobracunradnici.idkolonaidd=@KOLONA and SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4) = @godinaisplate and 
SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2) = @mjesecisplate
group by SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4),SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2)),0) AS BROJPRIMATELJA,

			isnull((SELECT SUM(dbo.DDOBRACUNRadniciVrstePosla.DDIZNOS) FROM DDOBRACUNRADNICIVRSTEPOSLA inner join 
ddobracunradnici on ddobracunradnicivrsteposla.ddobracunidobracun = ddobracunradnici.ddobracunidobracun AND ddobracunradnicivrsteposla.DDIDRADNIK = ddobracunradnici.DDIDRADNIK
where ddobracunradnici.idkolonaidd=@KOLONA and SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4) = @godinaisplate and 
SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2) = @mjesecisplate
group by SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4),SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2)),0) AS PRIMICI,


isnull((SELECT SUM(dbo.DDOBRACUNRadniciPorezi.DDOBRACUNATIPOREZ) FROM DDOBRACUNRadniciPorezi inner join 
ddobracunradnici on dbo.DDOBRACUNRadniciPorezi.ddobracunidobracun = ddobracunradnici.ddobracunidobracun AND  ddobracunradniciPOREZI.DDIDRADNIK = ddobracunradnici.DDIDRADNIK
where ddobracunradnici.idkolonaidd=@KOLONA and SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4) = @godinaisplate and 
SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2) = @mjesecisplate
group by SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4),SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2)),0) AS POREZ,


isnull((SELECT SUM(dbo.DDOBRACUNRadnici.DDOBRACUNATIPRIREZ) FROM DDOBRACUNRADNICI
where ddobracunradnici.idkolonaidd=@KOLONA and SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4) = @godinaisplate and 
SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2) = @mjesecisplate
group by SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4),SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2)),0) AS PRIREZ,



isnull((SELECT SUM(dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.UKUPNOMIOI) FROM VW_DD_OBRACUN_DOPRINOSI_PO_TIPU inner join 
ddobracunradnici on dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.ddobracunidobracun = ddobracunradnici.ddobracunidobracun and
dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.ddidradnik = ddobracunradnici.ddidradnik
where ddobracunradnici.idkolonaidd=@KOLONA and SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4) = @godinaisplate and 
SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2) = @mjesecisplate
group by SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4),SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2)),0) AS MIO1,

isnull((SELECT SUM(dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.UKUPNOMIOII) FROM VW_DD_OBRACUN_DOPRINOSI_PO_TIPU inner join 
ddobracunradnici on dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.ddobracunidobracun = ddobracunradnici.ddobracunidobracun and
dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.ddidradnik = ddobracunradnici.ddidradnik
where ddobracunradnici.idkolonaidd=@KOLONA and SUBSTRING(VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.DDOBRACUNIDOBRACUN, 1, 4) = @godinaisplate and 
SUBSTRING(VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.DDOBRACUNIDOBRACUN, 6, 2) = @mjesecisplate
group by SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4),SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2)),0) AS MIO2,


isnull((SELECT SUM(dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.UKUPNOZDRO) FROM VW_DD_OBRACUN_DOPRINOSI_PO_TIPU 
INNER JOIN
                      dbo.DDOBRACUNRadnici ON 
                      dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.DDOBRACUNIDOBRACUN = dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN AND 
                      dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.DDIDRADNIK = dbo.DDOBRACUNRadnici.DDIDRADNIK
where ddobracunradnici.idkolonaidd=@KOLONA and SUBSTRING(VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.DDOBRACUNIDOBRACUN, 1, 4) = @godinaisplate and 
SUBSTRING(VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.DDOBRACUNIDOBRACUN, 6, 2) = @mjesecisplate
group by SUBSTRING(dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.DDOBRACUNIDOBRACUN, 1, 4),SUBSTRING(dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.DDOBRACUNIDOBRACUN, 6, 2)),0) AS ZDR,
		0 AS ZAST,
		0 AS INOZ,
ISNULL((SELECT SUM(dbo.DDOBRACUNRadniciIzdaci.DDOBRACUNATIIZDATAK) FROM DDOBRACUNRADNICIIZDACI inner join 
ddobracunradnici on DDOBRACUNRADNICIIZDACI.ddobracunidobracun = ddobracunradnici.ddobracunidobracun AND DDOBRACUNRADNICIIZDACI.DDIDRADNIK = ddobracunradnici.ddIDRADNIK
where ddobracunradnici.idkolonaidd=@KOLONA and SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4) = @godinaisplate and 
SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2) = @mjesecisplate
group by SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4),SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2)),0) AS IZDATAK,

isnull((SELECT SUM(dbo.DDOBRACUNRadniciVrstePosla.DDIZNOS) FROM DDOBRACUNRADNICIVRSTEPOSLA inner join 
ddobracunradnici on ddobracunradnicivrsteposla.ddobracunidobracun = ddobracunradnici.ddobracunidobracun AND dDobracunradnicivrsteposla.DDIDRADNIK = ddobracunradnici.ddIDRADNIK
where ddobracunradnici.idkolonaidd=@KOLONA and SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4) = @godinaisplate and 
SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2) = @mjesecisplate
group by SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4),SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2)) 
- ISNULL((SELECT SUM(dbo.DDOBRACUNRadniciIzdaci.DDOBRACUNATIIZDATAK) FROM DDOBRACUNRADNICIIZDACI inner join 
ddobracunradnici on DDOBRACUNRADNICIIZDACI.ddobracunidobracun = ddobracunradnici.ddobracunidobracun AND DDOBRACUNRADNICIIZDACI.DDIDRADNIK = ddobracunradnici.ddIDRADNIK
where ddobracunradnici.idkolonaidd=@KOLONA and SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4) = @godinaisplate and 
SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2) = @mjesecisplate
group by SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4),SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2)),0),0) AS OSNOVICADOPRINOS,


isnull((SELECT SUM(dbo.DDOBRACUNRadniciVrstePosla.DDIZNOS) FROM DDOBRACUNRADNICIVRSTEPOSLA inner join 
ddobracunradnici on ddobracunradnicivrsteposla.ddobracunidobracun = ddobracunradnici.ddobracunidobracun AND dDobracunradnicivrsteposla.DDIDRADNIK = ddobracunradnici.ddIDRADNIK
where ddobracunradnici.idkolonaidd=@KOLONA and SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4) = @godinaisplate and 
SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2) = @mjesecisplate
group by SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4),SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2)) 
- ISNULL((SELECT SUM(dbo.DDOBRACUNRadniciIzdaci.DDOBRACUNATIIZDATAK) FROM DDOBRACUNRADNICIIZDACI inner join 
ddobracunradnici on DDOBRACUNRADNICIIZDACI.ddobracunidobracun = ddobracunradnici.ddobracunidobracun AND DDOBRACUNRADNICIIZDACI.DDIDRADNIK = ddobracunradnici.ddIDRADNIK
where ddobracunradnici.idkolonaidd=@KOLONA and SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4) = @godinaisplate and 
SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2) = @mjesecisplate
group by SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4),SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2)),0),0) 

-
isnull((SELECT SUM(dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.UKUPNOMIOI) FROM VW_DD_OBRACUN_DOPRINOSI_PO_TIPU inner join 
ddobracunradnici on dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.ddobracunidobracun = ddobracunradnici.ddobracunidobracun and
dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.ddidradnik = ddobracunradnici.ddidradnik
where ddobracunradnici.idkolonaidd=@KOLONA and SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4) = @godinaisplate and 
SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2) = @mjesecisplate
group by SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4),SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2)),0)
-
isnull((SELECT SUM(dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.UKUPNOMIOII) FROM VW_DD_OBRACUN_DOPRINOSI_PO_TIPU inner join 
ddobracunradnici on dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.ddobracunidobracun = ddobracunradnici.ddobracunidobracun and
dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.ddidradnik = ddobracunradnici.ddidradnik
where ddobracunradnici.idkolonaidd=@KOLONA and SUBSTRING(VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.DDOBRACUNIDOBRACUN, 1, 4) = @godinaisplate and 
SUBSTRING(VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.DDOBRACUNIDOBRACUN, 6, 2) = @mjesecisplate
group by SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4),SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2)),0)

AS OSNOVICAPOREZ,


99 AS IDTEST
END


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_DD_IDD_KOLONA3]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_DD_IDD_KOLONA3]
GO





CREATE PROCEDURE dbo.S_DD_IDD_KOLONA3
(

@MJESECISPLATE varchar(2) = '08',
@GODINAISPLATE varchar(4) = '2009'
)
AS
BEGIN
SELECT     COUNT(dbo.DDOBRACUNRadnici.DDIDRADNIK) AS IDRADNIK, SUM(dbo.DDOBRACUNRadniciVrstePosla.DDIZNOS) AS PRIMICI, 
                      SUM(dbo.DDOBRACUNRadniciPorezi.DDOSNOVICAPOREZ) AS OSNOVICAPOREZ, SUM(dbo.DDOBRACUNRadniciPorezi.DDOBRACUNATIPOREZ) AS POREZ, 
                      SUM(dbo.DDOBRACUNRadnici.DDOBRACUNATIPRIREZ) AS PRIREZ, SUM(dbo.DDOBRACUNRadnici.DDOBRACUNATIPDV) AS PDV, 
					SUM(dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.UKUPNOZDRO) AS ZDR, 
					0 AS ZAST, 
                      0 AS INOZ, SUM(dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.UKUPNOMIOII) AS MIOII, SUM(dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.UKUPNOMIOI) AS MIO1, 
                      SUM(dbo.DDOBRACUNRadniciIzdaci.DDOBRACUNATIIZDATAK) AS IZDATAK,
SUM(dbo.DDOBRACUNRadniciVrstePosla.DDIZNOS) - SUM(dbo.DDOBRACUNRadniciIzdaci.DDOBRACUNATIIZDATAK) AS OSNOVICADOPRINOS
FROM         dbo.DDOBRACUNRadnici LEFT OUTER JOIN
                      dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.DDOBRACUNIDOBRACUN LEFT OUTER JOIN
                      dbo.DDOBRACUNRadniciIzdaci ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.DDOBRACUNRadniciIzdaci.DDOBRACUNIDOBRACUN AND 
                      dbo.DDOBRACUNRadnici.DDIDRADNIK = dbo.DDOBRACUNRadniciIzdaci.DDIDRADNIK RIGHT OUTER JOIN
                      dbo.DDOBRACUNRadniciVrstePosla ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.DDOBRACUNRadniciVrstePosla.DDOBRACUNIDOBRACUN AND 
                      dbo.DDOBRACUNRadnici.DDIDRADNIK = dbo.DDOBRACUNRadniciVrstePosla.DDIDRADNIK LEFT OUTER JOIN
                      dbo.DDOBRACUNRadniciPorezi ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.DDOBRACUNRadniciPorezi.DDOBRACUNIDOBRACUN AND 
                      dbo.DDOBRACUNRadnici.DDIDRADNIK = dbo.DDOBRACUNRadniciPorezi.DDIDRADNIK LEFT OUTER JOIN
                      dbo.DDOBRACUN ON dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.DDOBRACUN.DDOBRACUNIDOBRACUN
WHERE     (SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4) = @GODINAISPLATE) AND 
                      (SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2) = @MJESECISPLATE) AND DDOBRACUNRADNICI.IDKOLONAIDD = 3



end









GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_DD_IDD_KOLONA4]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_DD_IDD_KOLONA4]
GO




CREATE PROCEDURE dbo.S_DD_IDD_KOLONA4
(

@MJESECISPLATE varchar(2) = '01',
@GODINAISPLATE varchar(4) = '1900'
)
AS
BEGIN
SELECT     COUNT(dbo.DDOBRACUNRadnici.DDIDRADNIK) AS IDRADNIK, SUM(dbo.DDOBRACUNRadniciVrstePosla.DDIZNOS) AS PRIMICI, 
                      SUM(dbo.DDOBRACUNRadniciPorezi.DDOSNOVICAPOREZ) AS OSNOVICAPOREZ, SUM(dbo.DDOBRACUNRadniciPorezi.DDOBRACUNATIPOREZ) AS POREZ, 
                      SUM(dbo.DDOBRACUNRadnici.DDOBRACUNATIPRIREZ) AS PRIREZ, SUM(dbo.DDOBRACUNRadnici.DDOBRACUNATIPDV) AS PDV, 
					0 AS ZDR, 
					0 AS ZAST, 
                      0 AS INOZ, 0 AS MIOII, 0 AS MIO1, 
                      0 AS IZDATAK,
0 AS OSNOVICADOPRINOS
FROM         dbo.DDOBRACUNRadnici LEFT OUTER JOIN
                      dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.DDOBRACUNIDOBRACUN LEFT OUTER JOIN
                      dbo.DDOBRACUNRadniciIzdaci ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.DDOBRACUNRadniciIzdaci.DDOBRACUNIDOBRACUN AND 
                      dbo.DDOBRACUNRadnici.DDIDRADNIK = dbo.DDOBRACUNRadniciIzdaci.DDIDRADNIK RIGHT OUTER JOIN
                      dbo.DDOBRACUNRadniciVrstePosla ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.DDOBRACUNRadniciVrstePosla.DDOBRACUNIDOBRACUN AND 
                      dbo.DDOBRACUNRadnici.DDIDRADNIK = dbo.DDOBRACUNRadniciVrstePosla.DDIDRADNIK LEFT OUTER JOIN
                      dbo.DDOBRACUNRadniciPorezi ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.DDOBRACUNRadniciPorezi.DDOBRACUNIDOBRACUN AND 
                      dbo.DDOBRACUNRadnici.DDIDRADNIK = dbo.DDOBRACUNRadniciPorezi.DDIDRADNIK LEFT OUTER JOIN
                      dbo.DDOBRACUN ON dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.DDOBRACUN.DDOBRACUNIDOBRACUN
WHERE     (SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4) = @GODINAISPLATE) AND 
          (SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2) = @MJESECISPLATE) AND DDOBRACUNRADNICI.IDKOLONAIDD = 4

END 





GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_DD_IDD_KOLONA5]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_DD_IDD_KOLONA5]
GO





CREATE PROCEDURE dbo.S_DD_IDD_KOLONA5
(

@MJESECISPLATE varchar(2) = '01',
@GODINAISPLATE varchar(4) = '1900'
)
AS
BEGIN
SELECT     COUNT(dbo.DDOBRACUNRadnici.DDIDRADNIK) AS IDRADNIK, SUM(dbo.DDOBRACUNRadniciVrstePosla.DDIZNOS) AS PRIMICI, 
                      SUM(dbo.DDOBRACUNRadniciPorezi.DDOSNOVICAPOREZ) AS OSNOVICAPOREZ, SUM(dbo.DDOBRACUNRadniciPorezi.DDOBRACUNATIPOREZ) AS POREZ, 
                      SUM(dbo.DDOBRACUNRadnici.DDOBRACUNATIPRIREZ) AS PRIREZ, SUM(dbo.DDOBRACUNRadnici.DDOBRACUNATIPDV) AS PDV, 
					0 AS ZDR, 
					0 AS ZAST, 
                      0 AS INOZ, 0 AS MIOII, 0 AS MIO1, 
                      SUM(dbo.DDOBRACUNRadniciIZDACI.DDOBRACUNATIIZDATAK) AS IZDATAK,
0 AS OSNOVICADOPRINOS
FROM         dbo.DDOBRACUNRadnici LEFT OUTER JOIN
                      dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.DDOBRACUNIDOBRACUN LEFT OUTER JOIN
                      dbo.DDOBRACUNRadniciIzdaci ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.DDOBRACUNRadniciIzdaci.DDOBRACUNIDOBRACUN AND 
                      dbo.DDOBRACUNRadnici.DDIDRADNIK = dbo.DDOBRACUNRadniciIzdaci.DDIDRADNIK RIGHT OUTER JOIN
                      dbo.DDOBRACUNRadniciVrstePosla ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.DDOBRACUNRadniciVrstePosla.DDOBRACUNIDOBRACUN AND 
                      dbo.DDOBRACUNRadnici.DDIDRADNIK = dbo.DDOBRACUNRadniciVrstePosla.DDIDRADNIK LEFT OUTER JOIN
                      dbo.DDOBRACUNRadniciPorezi ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.DDOBRACUNRadniciPorezi.DDOBRACUNIDOBRACUN AND 
                      dbo.DDOBRACUNRadnici.DDIDRADNIK = dbo.DDOBRACUNRadniciPorezi.DDIDRADNIK LEFT OUTER JOIN
                      dbo.DDOBRACUN ON dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.DDOBRACUN.DDOBRACUNIDOBRACUN
WHERE     (SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4) = @GODINAISPLATE) AND 
          (SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2) = @MJESECISPLATE) AND DDOBRACUNRADNICI.IDKOLONAIDD = 5
END 





GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_DD_IDD_KOLONA6]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_DD_IDD_KOLONA6]
GO





CREATE PROCEDURE dbo.S_DD_IDD_KOLONA6
(

@MJESECISPLATE varchar(2) = '01',
@GODINAISPLATE varchar(4) = '1900'
)
AS
BEGIN
SELECT     COUNT(dbo.DDOBRACUNRadnici.DDIDRADNIK) AS IDRADNIK, SUM(dbo.DDOBRACUNRadniciVrstePosla.DDIZNOS) AS PRIMICI, 
                      SUM(dbo.DDOBRACUNRadniciPorezi.DDOSNOVICAPOREZ) AS OSNOVICAPOREZ, SUM(dbo.DDOBRACUNRadniciPorezi.DDOBRACUNATIPOREZ) AS POREZ, 
                      SUM(dbo.DDOBRACUNRadnici.DDOBRACUNATIPRIREZ) AS PRIREZ, SUM(dbo.DDOBRACUNRadnici.DDOBRACUNATIPDV) AS PDV, 
					0 AS ZDR, 
					0 AS ZAST, 
                      0 AS INOZ, 0 AS MIOII, 0 AS MIO1, 
                      SUM(dbo.DDOBRACUNRadniciIZDACI.DDOBRACUNATIIZDATAK) AS IZDATAK,
0 AS OSNOVICADOPRINOS
FROM         dbo.DDOBRACUNRadnici LEFT OUTER JOIN
                      dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.DDOBRACUNIDOBRACUN LEFT OUTER JOIN
                      dbo.DDOBRACUNRadniciIzdaci ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.DDOBRACUNRadniciIzdaci.DDOBRACUNIDOBRACUN AND 
                      dbo.DDOBRACUNRadnici.DDIDRADNIK = dbo.DDOBRACUNRadniciIzdaci.DDIDRADNIK RIGHT OUTER JOIN
                      dbo.DDOBRACUNRadniciVrstePosla ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.DDOBRACUNRadniciVrstePosla.DDOBRACUNIDOBRACUN AND 
                      dbo.DDOBRACUNRadnici.DDIDRADNIK = dbo.DDOBRACUNRadniciVrstePosla.DDIDRADNIK LEFT OUTER JOIN
                      dbo.DDOBRACUNRadniciPorezi ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.DDOBRACUNRadniciPorezi.DDOBRACUNIDOBRACUN AND 
                      dbo.DDOBRACUNRadnici.DDIDRADNIK = dbo.DDOBRACUNRadniciPorezi.DDIDRADNIK LEFT OUTER JOIN
                      dbo.DDOBRACUN ON dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.DDOBRACUN.DDOBRACUNIDOBRACUN
WHERE     (SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4) = @GODINAISPLATE) AND 
          (SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2) = @MJESECISPLATE) AND DDOBRACUNRADNICI.IDKOLONAIDD = 6
END 





GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_DD_IDD_KOLONA7]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_DD_IDD_KOLONA7]
GO





CREATE PROCEDURE dbo.S_DD_IDD_KOLONA7
(

@MJESECISPLATE varchar(2) = '01',
@GODINAISPLATE varchar(4) = '1900'
)
AS
BEGIN
SELECT     COUNT(dbo.DDOBRACUNRadnici.DDIDRADNIK) AS IDRADNIK, SUM(dbo.DDOBRACUNRadniciVrstePosla.DDIZNOS) AS PRIMICI, 
                      SUM(dbo.DDOBRACUNRadniciPorezi.DDOSNOVICAPOREZ) AS OSNOVICAPOREZ, SUM(dbo.DDOBRACUNRadniciPorezi.DDOBRACUNATIPOREZ) AS POREZ, 
                      SUM(dbo.DDOBRACUNRadnici.DDOBRACUNATIPRIREZ) AS PRIREZ, SUM(dbo.DDOBRACUNRadnici.DDOBRACUNATIPDV) AS PDV, 
					SUM(dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.UKUPNOZDRO) AS ZDR, 
					0 AS ZAST, 
                      0 AS INOZ, SUM(dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.UKUPNOMIOII) AS MIOII, SUM(dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.UKUPNOMIOI) AS MIO1, 
                      SUM(dbo.DDOBRACUNRadniciIzdaci.DDOBRACUNATIIZDATAK) AS IZDATAK,
SUM(dbo.DDOBRACUNRadniciVrstePosla.DDIZNOS) - SUM(dbo.DDOBRACUNRadniciIzdaci.DDOBRACUNATIIZDATAK) AS OSNOVICADOPRINOS
FROM         dbo.DDOBRACUNRadnici LEFT OUTER JOIN
                      dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.VW_DD_OBRACUN_DOPRINOSI_PO_TIPU.DDOBRACUNIDOBRACUN LEFT OUTER JOIN
                      dbo.DDOBRACUNRadniciIzdaci ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.DDOBRACUNRadniciIzdaci.DDOBRACUNIDOBRACUN AND 
                      dbo.DDOBRACUNRadnici.DDIDRADNIK = dbo.DDOBRACUNRadniciIzdaci.DDIDRADNIK RIGHT OUTER JOIN
                      dbo.DDOBRACUNRadniciVrstePosla ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.DDOBRACUNRadniciVrstePosla.DDOBRACUNIDOBRACUN AND 
                      dbo.DDOBRACUNRadnici.DDIDRADNIK = dbo.DDOBRACUNRadniciVrstePosla.DDIDRADNIK LEFT OUTER JOIN
                      dbo.DDOBRACUNRadniciPorezi ON 
                      dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.DDOBRACUNRadniciPorezi.DDOBRACUNIDOBRACUN AND 
                      dbo.DDOBRACUNRadnici.DDIDRADNIK = dbo.DDOBRACUNRadniciPorezi.DDIDRADNIK LEFT OUTER JOIN
                      dbo.DDOBRACUN ON dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN = dbo.DDOBRACUN.DDOBRACUNIDOBRACUN
WHERE     (SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4) = @GODINAISPLATE) AND 
                      (SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 6, 2) = @MJESECISPLATE) AND DDOBRACUNRADNICI.IDKOLONAIDD = 7
END 





GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_DD_IP1]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_DD_IP1]
GO


CREATE PROCEDURE dbo.S_DD_IP1
(
@GODINAISPLATE varchar(4)
)
AS
BEGIN
select ddoib,
	ddjmbg,
	DDIDRADNIK, 
	DDPREZIME, 
	DDIME,
	sum(ukupnobruto) as bruto,
	sum(ukupnoizdaci) as izdaci,
	sum(ukupnodoprinosi) as doprinosiiz,
	sum(ukupnoporeziprirez) as poreziprirez,
	sum(netoplaca) as neto,
	OPCINASTANOVANJAIDOPCINE,
		 sum(p1422) as p1422,
			sum(p1805) as p1805,
			sum(p1457) as p1457,
			sum(p1465) as p1465,
			sum(p1473) as p1473,
			sum(p1546) as p1546,
			sum(p1570) as p1570,
			sum(p1589) as p1589,
			sum(p1597) as p1597,
			sum(p1600) as p1600,		
			sum(p1813) as p1813,
			sum(p1821) as p1821,
			sum(p1830) as p1830,
			sum(p1848) as p1848,
			1 AS DDOZNACEN
from
(		SELECT
			ddradnik.ddjmbg,
			ddradnik.ddoib,
	    	VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDIDRADNIK, 
			DDRADNIK.DDPREZIME, 
			DDRADNIK.DDIME, 
			VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOBRUTO, 
			VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOIZDACI, 
			VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNODOPRINOSI,
			VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOPOREZIPRIREZ, 
			VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.NETOPLACA,
			DDRADNIK.OPCINASTANOVANJAIDOPCINE,
			CASE WHEN DDOBRACUNRADNICIPOREZI.DDPOPOREZ = '1422-' then VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOPOREZIPRIREZ else 0 end as p1422,
			CASE WHEN DDOBRACUNRADNICIPOREZI.DDPOPOREZ = '1805-' then VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOPOREZIPRIREZ else 0 end as p1805,
			CASE WHEN DDOBRACUNRADNICIPOREZI.DDPOPOREZ = '1457-' then VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOPOREZIPRIREZ else 0 end as p1457,
			CASE WHEN DDOBRACUNRADNICIPOREZI.DDPOPOREZ = '1465-' then VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOPOREZIPRIREZ else 0 end as p1465,
			CASE WHEN DDOBRACUNRADNICIPOREZI.DDPOPOREZ = '1473-' then VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOPOREZIPRIREZ else 0 end as p1473,
			CASE WHEN DDOBRACUNRADNICIPOREZI.DDPOPOREZ = '1546-' then VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOPOREZIPRIREZ else 0 end as p1546,
			CASE WHEN DDOBRACUNRADNICIPOREZI.DDPOPOREZ = '1570-' then VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOPOREZIPRIREZ else 0 end as p1570,
			CASE WHEN DDOBRACUNRADNICIPOREZI.DDPOPOREZ = '1589-' then VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOPOREZIPRIREZ else 0 end as p1589,
			CASE WHEN DDOBRACUNRADNICIPOREZI.DDPOPOREZ = '1597-' then VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOPOREZIPRIREZ else 0 end as p1597,
			CASE WHEN DDOBRACUNRADNICIPOREZI.DDPOPOREZ = '1600-' then VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOPOREZIPRIREZ else 0 end as p1600,		
			CASE WHEN DDOBRACUNRADNICIPOREZI.DDPOPOREZ = '1813-' then VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOPOREZIPRIREZ else 0 end as p1813,
			CASE WHEN DDOBRACUNRADNICIPOREZI.DDPOPOREZ = '1821-' then VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOPOREZIPRIREZ else 0 end as p1821,
			CASE WHEN DDOBRACUNRADNICIPOREZI.DDPOPOREZ = '1830-' then VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOPOREZIPRIREZ else 0 end as p1830,
			CASE WHEN DDOBRACUNRADNICIPOREZI.DDPOPOREZ = '1848-' then VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOPOREZIPRIREZ else 0 end as p1848
		FROM         	VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO 
		INNER JOIN 	DDRADNIK
		ON 		VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDIDRADNIK = DDRADNIK.DDIDRADNIK
		INNER JOIN 	DDOBRACUNRADNICI
		ON 		VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDOBRACUNIDOBRACUN = DDOBRACUNRADNICI.DDOBRACUNIDOBRACUN
		AND		VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDIDRADNIK = DDOBRACUNRADNICI.DDIDRADNIK
	
		INNER JOIN 	DDOBRACUNRADNICIPOREZI
		ON 		VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDOBRACUNIDOBRACUN = DDOBRACUNRADNICIPOREZI.DDOBRACUNIDOBRACUN
		AND		VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDIDRADNIK = DDOBRACUNRADNICIPOREZI.DDIDRADNIK
		INNER JOIN DDKATEGORIJA ON DDOBRACUNRADNICI.IDKATEGORIJA = DDKATEGORIJA.IDKATEGORIJA
where SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4) = @godinaisplate
) as test
group by ddidradnik,ddprezime,ddime,OPCINASTANOVANJAIDOPCINE,ddjmbg,ddoib
order by ddprezime,ddime
end


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_DD_IPP]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_DD_IPP]
GO

CREATE PROCEDURE dbo.S_DD_IPP
(
	@MJESEC VARCHAR(2),
	@GODINA VARCHAR(4)


)
AS
BEGIN

	SET NOCOUNT ON
	

SELECT SUM(NETOPLACA) AS OSNOVICAKRIZNOGPOREZA,SUM(POREZKRIZNI) AS KRIZNIPOREZ,COUNT(distinct DDIDRADNIK) AS BROJRADNIKA  
FROM  (
SELECT     DDIDRADNIK, ISNULL(SUM(porezkrizni), 0) AS POREZKRIZNI, ISNULL(SUM(NETOPLACA), 0) AS NETOPLACA
FROM         dbo.VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO
WHERE     
(SUBSTRING(dbo.VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDOBRACUNIDOBRACUN, 1, 4) = @GODINA) AND 
                      (SUBSTRING(dbo.VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDOBRACUNIDOBRACUN, 6, 2) = @MJESEC)
and porezkrizni &gt; 0
GROUP BY DDIDRADNIK

) AS P
END


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_DD_KRIZNI_POREZ]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_DD_KRIZNI_POREZ]
GO





CREATE PROCEDURE dbo.S_DD_KRIZNI_POREZ
(
	@IDOBRACUN VARCHAR(11),
	@MJESECISPLATE VARCHAR(2),
	@GODINAISPLATE VARCHAR(4)
)
AS
BEGIN
	SET NOCOUNT ON
SELECT     DDIDRADNIK,isnull(SUM(POREZKRIZNI),0) as POREZKRIZNI,isnull(SUM(NETOPLACA),0) as NETOPLACA
FROM         dbo.VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO
WHERE DDOBRACUNIDOBRACUN &lt; @IDOBRACUN AND SUBSTRING(DDOBRACUNIDOBRACUN,1,4) = @godinaisplate
AND SUBSTRING(DDOBRACUNIDOBRACUN,6,2) = @mjesecisplate
group by DDIDRADNIK
END


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_DD_LISTA_IZNOSA_RADNIKA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_DD_LISTA_IZNOSA_RADNIKA]
GO



CREATE PROCEDURE dbo.S_DD_LISTA_IZNOSA_RADNIKA

@IDOBRACUN varchar(11) = NULL,

@SORT int = 0

AS
BEGIN
	


	
		SELECT
	    	VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDIDRADNIK, 
			DDRADNIK.DDPREZIME, 
			DDRADNIK.DDIME, 
			VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOBRUTO, 
VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOIZDACI, 
			VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNODOPRINOSI,
	VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOPOREZ, 
	VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOPRIREZ, 
			VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOPOREZIPRIREZ, 
			VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.NETOPLACA, 
			VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNODOPRINOSINA,
	VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.POREZKRIZNI,
VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.NETOPLACAMANJEKRIZNI,
VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.pdv AS PDVDRUGIDOHODAK,
VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.ZAISPLATU,
	DDKATEGORIJA.NAZIVKATEGORIJA
		FROM         	VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO 
		INNER JOIN 	DDRADNIK
		ON 		VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDIDRADNIK = DDRADNIK.DDIDRADNIK
		INNER JOIN 	DDOBRACUNRADNICI
		ON 		VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDOBRACUNIDOBRACUN = DDOBRACUNRADNICI.DDOBRACUNIDOBRACUN
		AND		VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDIDRADNIK = DDOBRACUNRADNICI.DDIDRADNIK
		INNER JOIN DDKATEGORIJA ON DDOBRACUNRADNICI.IDKATEGORIJA = DDKATEGORIJA.IDKATEGORIJA
		WHERE	VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDOBRACUNIDOBRACUN = @IDOBRACUN
		ORDER BY	CASE WHEN @sort = 1 THEN DDRADNIK.DDPREZIME ELSE Right('000000000000000' + Convert(varchar, VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDIDRADNIK), 15) END, 
				CASE WHEN @sort = 1 THEN DDRADNIK.DDIME ELSE Right('000000000000000' + Convert(varchar, VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDIDRADNIK), 15) END, 
				VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDIDRADNIK
END




GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_DD_POCISTIRADNIKA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_DD_POCISTIRADNIKA]
GO









CREATE PROCEDURE [dbo].[S_DD_POCISTIRADNIKA]
(

	@IDOBRACUN VARCHAR(11),	
	@IDRADNIK INT
	
)
AS
BEGIN

	SET NOCOUNT ON
	
	DELETE FROM DDOBRACUNRADNICIDOPRINOSI WHERE DDOBRACUNIDOBRACUN = @IDOBRACUN AND DDIDRADNIK = @IDRADNIK
	DELETE FROM DDOBRACUNRADNICIPOREZI WHERE DDOBRACUNIDOBRACUN = @IDOBRACUN AND DDIDRADNIK = @IDRADNIK
	DELETE FROM DDOBRACUNRADNICIIZDACI WHERE DDOBRACUNIDOBRACUN = @IDOBRACUN AND DDIDRADNIK = @IDRADNIK
	DELETE FROM DDOBRACUNRadniciDDKrizniPorez WHERE DDOBRACUNIDOBRACUN = @IDOBRACUN AND DDIDRADNIK = @IDRADNIK
	
END

GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_DD_POTVRDA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_DD_POTVRDA]
GO



CREATE PROCEDURE dbo.S_DD_POTVRDA
(
@GODINAISPLATE varchar(4)
)
AS
BEGIN
select DDIDRADNIK, 
	DDPREZIME, 
	DDIME,
	sum(ukupnobruto) as bruto,
	sum(ukupnoizdaci) as izdaci,
	sum(ukupnodoprinosi) as doprinosiiz,
	sum(ukupnoporeziprirez) as poreziprirez,
	sum(netoplaca) as neto,
	OPCINASTANOVANJAIDOPCINE,
	dddatumobracuna,
	nazivkategorija,
	sum(postotakizdatka) as postotakizdatka,
	SUM(POREZKRIZNI) AS POREZKRIZNI,
	ADRESA,
	DDJMBG,
	ddoib
from
(		SELECT
			ddoib,
			DDRADNIK.DDJMBG,
			isnull(ddradnik.DDadresa,'') + ' ' + isnull(ddradnik.ddkucnibroj,'') + ' ' +isnull(ddradnik.DDmjesto,' ') as adresa,
	    	VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDIDRADNIK, 
			DDRADNIK.DDPREZIME, 
			DDRADNIK.DDIME, 
			VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOBRUTO, 
			VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOIZDACI, 
			VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNODOPRINOSI,
			VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOPOREZIPRIREZ, 
			VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.NETOPLACA,
			DDRADNIK.OPCINASTANOVANJAIDOPCINE,
			ddobracun.dddatumobracuna,
			ddkategorija.nazivkategorija,
			VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.postotakizdatka,
			VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.POREZKRIZNI
			
		FROM         	VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO 
		INNER JOIN 	DDRADNIK
		ON 		VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDIDRADNIK = DDRADNIK.DDIDRADNIK
		INNER JOIN 	DDOBRACUNRADNICI
		ON 		VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDOBRACUNIDOBRACUN = DDOBRACUNRADNICI.DDOBRACUNIDOBRACUN
		AND		VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDIDRADNIK = DDOBRACUNRADNICI.DDIDRADNIK
	
		INNER JOIN 	DDOBRACUNRADNICIPOREZI
		ON 		VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDOBRACUNIDOBRACUN = DDOBRACUNRADNICIPOREZI.DDOBRACUNIDOBRACUN
		AND		VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDIDRADNIK = DDOBRACUNRADNICIPOREZI.DDIDRADNIK
		INNER JOIN DDKATEGORIJA ON DDOBRACUNRADNICI.IDKATEGORIJA = DDKATEGORIJA.IDKATEGORIJA
		inner join ddobracun 
		ON 		VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDOBRACUNIDOBRACUN = DDOBRACUN.DDOBRACUNIDOBRACUN
where SUBSTRING(dbo.DDOBRACUNRadnici.DDOBRACUNIDOBRACUN, 1, 4) = @godinaisplate
) as test
group by ddidradnik,ddprezime,ddime,OPCINASTANOVANJAIDOPCINE,dddatumobracuna,nazivkategorija,DDJMBG,ddoib,adresa
order by ddprezime,ddime,dddatumobracuna
end


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_DD_REKAP_DOPRINOS]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_DD_REKAP_DOPRINOS]
GO








CREATE PROCEDURE [dbo].[S_DD_REKAP_DOPRINOS] ( @IDOBRACUN VARCHAR(11) )
AS 
    BEGIN

        SET NOCOUNT ON

        SELECT TOP 100 PERCENT
                SUM(DDOBRACUNRADNICIDOPRINOSI.DDOBRACUNATIDOPRINOS) AS Iznos,
                DDOBRACUNRADNICIDOPRINOSI.IDDOPRINOS AS Sifra,
                DDOBRACUNRADNICIDOPRINOSI.NAZIVVRSTADOPRINOS AS Vrsta,
                DDOBRACUNRADNICIDOPRINOSI.NAZIVDOPRINOS AS NAZIVDOPRINOS,
                DDOBRACUNRADNICIDOPRINOSI.idvrstadoprinos AS vrstasifra
        FROM    dbo.DDOBRACUNRADNICIDOPRINOSI
        WHERE   DDOBRACUNRADNICIDOPRINOSI.DDOBRACUNIDOBRACUN = @IDOBRACUN
        GROUP BY DDOBRACUNRADNICIDOPRINOSI.IDDOPRINOS,
                DDOBRACUNRADNICIDOPRINOSI.NAZIVVRSTADOPRINOS,
                DDOBRACUNRADNICIDOPRINOSI.NAZIVDOPRINOS,
                DDOBRACUNRADNICIDOPRINOSI.IDVRSTADOPRINOS
        ORDER BY DDOBRACUNRADNICIDOPRINOSI.IDVRSTADOPRINOS DESC

        SET NOCOUNT OFF

    END









GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_DD_RSM_OBRAZAC]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_DD_RSM_OBRAZAC]
GO



CREATE PROCEDURE [dbo].[S_DD_RSM_OBRAZAC]
(
    @DO AS INT,
    @DO1 AS INT,
    @IDOBRACUN AS VARCHAR (11),
    @IDRADNIK AS INT,
    @MAX_REDNIBROJ AS INT,
    @OD AS INT,
    @OD1 AS INT,
    @OO AS VARCHAR (2),
    @TRENUTNI_IDRADNIK AS INT,
    @TRENUTNI_OO AS VARCHAR (2),
    @TRENUTNI_REDNIBROJ AS INT,
    @USPOREDBA AS INT
) AS
BEGIN
INSERT INTO	#TEMP_RSMB
		(
		IDRADNIK,
		PREZIMEIIME,
		MBGOSIGURANIKA,
		SIFRAGRADARADA,
		OO,
		B,
		OD,
		DOO,
		IZNOSOBRACUNANEPLACERSMB,
		IZNOSOSNOVICEZADOPRINOSERSMB,
		IDDOPRINOSMIO1,
		STOPAMIO1,
		MIO1RSMB,
		IDDOPRINOSMIO2,
		STOPAMIO2,
		MIO2RSMB,
		POREZIPRIREZ,
		IZNOSISPLACENEPLACERSMB,
		OIB
		)
SELECT 	RS_OSNOVA.DDIDRADNIK,
			LEFT(DDRADNIK.DDPREZIME + ' ' + DDRADNIK.DDIME, 50),
			DDRADNIK.DDJMBG,
			DDRADNIK.OPCINARADAIDOPCINE,
			'21',
			'0',
			'00',
			'00',
			RS_OSNOVA.IZNOSBRUTO,
			RS_OSNOVA.IZNOSBRUTO,
			(SELECT TOP 1 DDOBRACUNRadniciDoprinosi.IDDOPRINOS FROM dbo.DDOBRACUNRadniciDoprinosi INNER JOIN dbo.TIPIZNOSA ON DDOBRACUNRadniciDoprinosi.VBDIDOPRINOS = TIPIZNOSA.VBDITIPAIZNOSA AND DDOBRACUNRadniciDoprinosi.ZRNDOPRINOS = TIPIZNOSA.ZIROTIPAIZNOSA AND DDOBRACUNRadniciDoprinosi.MODOPRINOS = TIPIZNOSA.MOTIPAIZNOSA AND DDOBRACUNRadniciDoprinosi.PODOPRINOS = TIPIZNOSA.POTIPAIZNOSA INNER JOIN dbo.DDOBRACUN ON DDOBRACUNRadniciDoprinosi.DDOBRACUNIDOBRACUN = DDOBRACUN.DDOBRACUNIDOBRACUN AND DDOBRACUNRadniciDoprinosi.DDIDRADNIK = RS_OSNOVA.DDIDRADNIK WHERE TIPIZNOSA.OZNAKATIPAIZNOSA IN ('MIOI', 'MIOI-P') AND DDOBRACUNRadniciDoprinosi.DDOBRACUNIDOBRACUN = @IDOBRACUN),
			ISNULL((SELECT SUM(DDOBRACUNRadniciDoprinosi.STOPA) FROM dbo.DDOBRACUNRadniciDoprinosi INNER JOIN dbo.TIPIZNOSA ON DDOBRACUNRadniciDoprinosi.VBDIDOPRINOS = TIPIZNOSA.VBDITIPAIZNOSA AND DDOBRACUNRadniciDoprinosi.ZRNDOPRINOS = TIPIZNOSA.ZIROTIPAIZNOSA AND DDOBRACUNRadniciDoprinosi.MODOPRINOS = TIPIZNOSA.MOTIPAIZNOSA AND DDOBRACUNRadniciDoprinosi.PODOPRINOS = TIPIZNOSA.POTIPAIZNOSA INNER JOIN dbo.DDOBRACUN ON DDOBRACUNRadniciDoprinosi.DDOBRACUNIDOBRACUN = DDOBRACUN.DDOBRACUNIDOBRACUN AND DDOBRACUNRadniciDoprinosi.DDIDRADNIK = RS_OSNOVA.DDIDRADNIK WHERE TIPIZNOSA.OZNAKATIPAIZNOSA IN ('MIOI', 'MIOI-P') AND DDOBRACUNRadniciDoprinosi.DDOBRACUNIDOBRACUN = @IDOBRACUN), 0),
			0,
			(SELECT TOP 1 DDOBRACUNRadniciDoprinosi.IDDOPRINOS FROM dbo.DDOBRACUNRadniciDoprinosi INNER JOIN dbo.TIPIZNOSA ON DDOBRACUNRadniciDoprinosi.VBDIDOPRINOS = TIPIZNOSA.VBDITIPAIZNOSA AND DDOBRACUNRadniciDoprinosi.ZRNDOPRINOS = TIPIZNOSA.ZIROTIPAIZNOSA AND DDOBRACUNRadniciDoprinosi.MODOPRINOS = TIPIZNOSA.MOTIPAIZNOSA AND DDOBRACUNRadniciDoprinosi.PODOPRINOS = TIPIZNOSA.POTIPAIZNOSA INNER JOIN dbo.DDOBRACUN ON DDOBRACUNRadniciDoprinosi.DDOBRACUNIDOBRACUN = DDOBRACUN.DDOBRACUNIDOBRACUN AND DDOBRACUNRadniciDoprinosi.DDIDRADNIK = RS_OSNOVA.DDIDRADNIK WHERE TIPIZNOSA.OZNAKATIPAIZNOSA IN ('MIOII', 'MIOII-P') AND DDOBRACUNRadniciDoprinosi.DDOBRACUNIDOBRACUN = @IDOBRACUN),
			ISNULL((SELECT SUM(DDOBRACUNRadniciDoprinosi.STOPA) FROM dbo.DDOBRACUNRadniciDoprinosi INNER JOIN dbo.TIPIZNOSA ON DDOBRACUNRadniciDoprinosi.VBDIDOPRINOS = TIPIZNOSA.VBDITIPAIZNOSA AND DDOBRACUNRadniciDoprinosi.ZRNDOPRINOS = TIPIZNOSA.ZIROTIPAIZNOSA AND DDOBRACUNRadniciDoprinosi.MODOPRINOS = TIPIZNOSA.MOTIPAIZNOSA AND DDOBRACUNRadniciDoprinosi.PODOPRINOS = TIPIZNOSA.POTIPAIZNOSA INNER JOIN dbo.DDOBRACUN ON DDOBRACUNRadniciDoprinosi.DDOBRACUNIDOBRACUN = DDOBRACUN.DDOBRACUNIDOBRACUN AND DDOBRACUNRadniciDoprinosi.DDIDRADNIK = RS_OSNOVA.DDIDRADNIK WHERE TIPIZNOSA.OZNAKATIPAIZNOSA IN ('MIOII', 'MIOII-P') AND DDOBRACUNRadniciDoprinosi.DDOBRACUNIDOBRACUN = @IDOBRACUN), 0),
			0,
			0,
			RS_OSNOVA.IZNOSNETO,
			DDRADNIK.DDOIB
	FROM
	(
	SELECT     	DDRADNIK.DDIDRADNIK AS DDIDRADNIK, 
			21  AS IDOSNOVAOSIGURANJA, 
			'00' AS ELEMENTRAZDOBLJEOD, 
			'00' AS ELEMENTRAZDOBLJEDO, 
			SUM(DDOBRACUNRadniciVrstePosla.DDIZNOS) AS IZNOSBRUTO, 
			0 AS IZNOSNETO
	FROM         	dbo.DDOBRACUNRadniciVrstePosla
	
	LEFT JOIN	dbo.DDRADNIK
	ON		DDOBRACUNRadniciVrstePosla.DDIDRADNIK = DDRADNIK.DDIDRADNIK
	INNER JOIN	dbo.DDOBRACUN
	ON		DDOBRACUNRadniciVrstePosla.DDOBRACUNIDOBRACUN = DDOBRACUN.DDOBRACUNIDOBRACUN
	WHERE     	DDOBRACUNRadniciVrstePosla.DDOBRACUNIDOBRACUN = @IDOBRACUN 
	GROUP BY	DDRADNIK.DDIDRADNIK
			
	) AS RS_OSNOVA
	INNER JOIN	dbo.DDRADNIK
	ON		RS_OSNOVA.DDIDRADNIK = DDRADNIK.DDIDRADNIK
	ORDER BY 	RS_OSNOVA.DDIDRADNIK,
			RS_OSNOVA.ELEMENTRAZDOBLJEOD,
			RS_OSNOVA.ELEMENTRAZDOBLJEDO


	UPDATE	#TEMP_RSMB 
	SET		IZNOSOBRACUNANEPLACERSMB = (SELECT SUM(IZNOSOBRACUNANEPLACERSMB) FROM #TEMP_RSMB B WHERE B.IDRADNIK = #TEMP_RSMB.IDRADNIK AND B.OO = #TEMP_RSMB.OO),
			IZNOSOSNOVICEZADOPRINOSERSMB = 0

	UPDATE	#TEMP_RSMB 
	SET		IZNOSOBRACUNANEPLACERSMB = 0
	FROM		#TEMP_RSMB
	INNER JOIN	(SELECT IDRADNIK, OO, MIN(REDNIBROJ) AS MIN_REDNIBROJ FROM #TEMP_RSMB GROUP BY IDRADNIK, OO) AS B
	ON		#TEMP_RSMB.IDRADNIK = B.IDRADNIK
	AND 		#TEMP_RSMB.OO = B.OO
	WHERE	#TEMP_RSMB.REDNIBROJ &lt;&gt; B.MIN_REDNIBROJ





	SET		@MAX_REDNIBROJ = 0
	SET		@TRENUTNI_REDNIBROJ = 0
	SELECT 	@MAX_REDNIBROJ = ISNULL(MAX(REDNIBROJ), 0) FROM #TEMP_RSMB
	WHILE @TRENUTNI_REDNIBROJ &lt; @MAX_REDNIBROJ
	BEGIN
		SET @TRENUTNI_REDNIBROJ = @TRENUTNI_REDNIBROJ + 1

		UPDATE	#TEMP_RSMB 
		SET		IZNOSOSNOVICEZADOPRINOSERSMB = CASE WHEN ISNULL((SELECT SUM(VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOOSNOVICAZADOPRINOS) FROM VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO WHERE VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDOBRACUNIDOBRACUN = @IDOBRACUN AND VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDIDRADNIK = #TEMP_RSMB.IDRADNIK), 0) - ISNULL((SELECT SUM(IZNOSOSNOVICEZADOPRINOSERSMB) FROM #TEMP_RSMB B WHERE B.IDRADNIK = #TEMP_RSMB.IDRADNIK AND B.REDNIBROJ &lt; #TEMP_RSMB.REDNIBROJ), 0) &gt; IZNOSOBRACUNANEPLACERSMB THEN IZNOSOBRACUNANEPLACERSMB ELSE ISNULL((SELECT SUM(VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOOSNOVICAZADOPRINOS) FROM VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO WHERE VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDOBRACUNIDOBRACUN = @IDOBRACUN AND VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDIDRADNIK = #TEMP_RSMB.IDRADNIK), 0) - ISNULL((SELECT SUM(IZNOSOSNOVICEZADOPRINOSERSMB) FROM #TEMP_RSMB B WHERE B.IDRADNIK = #TEMP_RSMB.IDRADNIK AND B.REDNIBROJ &lt; #TEMP_RSMB.REDNIBROJ), 0) END
		WHERE	IZNOSOBRACUNANEPLACERSMB &lt;&gt; 0 AND REDNIBROJ = @TRENUTNI_REDNIBROJ
	END
	
	

	UPDATE	#TEMP_RSMB
	SET		MIO1RSMB = ROUND(IZNOSOSNOVICEZADOPRINOSERSMB * STOPAMIO1 / 100, 2),
			MIO2RSMB = ROUND(IZNOSOSNOVICEZADOPRINOSERSMB * STOPAMIO2 / 100, 2)
	WHERE	IZNOSOSNOVICEZADOPRINOSERSMB &lt;&gt; 0
	
	UPDATE	#TEMP_RSMB
	SET		MIO1RSMB = MIO1RSMB + ( ISNULL((SELECT SUM(DDOBRACUNRadniciDoprinosi.DDOBRACUNATIDOPRINOS) FROM dbo.DDOBRACUNRadniciDoprinosi WHERE DDOBRACUNRadniciDoprinosi.DDOBRACUNIDOBRACUN = @IDOBRACUN AND DDOBRACUNRadniciDoprinosi.DDIDRADNIK = #TEMP_RSMB.IDRADNIK AND DDOBRACUNRadniciDoprinosi.IDDOPRINOS = #TEMP_RSMB.IDDOPRINOSMIO1), 0) - ISNULL((SELECT SUM(MIO1RSMB) FROM #TEMP_RSMB B WHERE B.IDRADNIK = #TEMP_RSMB.IDRADNIK), 0) ) 
	FROM		#TEMP_RSMB
	INNER JOIN	(SELECT IDRADNIK, MAX(REDNIBROJ) AS MAX_REDNIBROJ FROM #TEMP_RSMB WHERE IZNOSOBRACUNANEPLACERSMB &lt;&gt; 0 GROUP BY IDRADNIK) AS ZADNJASTAVKA
	ON		#TEMP_RSMB.IDRADNIK = ZADNJASTAVKA.IDRADNIK
	WHERE	#TEMP_RSMB.REDNIBROJ = ZADNJASTAVKA.MAX_REDNIBROJ

	UPDATE	#TEMP_RSMB
	SET		MIO2RSMB = MIO2RSMB + ( ISNULL((SELECT SUM(DDOBRACUNRadniciDoprinosi.DDOBRACUNATIDOPRINOS) FROM dbo.DDOBRACUNRadniciDoprinosi WHERE DDOBRACUNRadniciDoprinosi.DDOBRACUNIDOBRACUN = @IDOBRACUN AND DDOBRACUNRadniciDoprinosi.DDIDRADNIK = #TEMP_RSMB.IDRADNIK AND DDOBRACUNRadniciDoprinosi.IDDOPRINOS = #TEMP_RSMB.IDDOPRINOSMIO2), 0) - ISNULL((SELECT SUM(MIO2RSMB) FROM #TEMP_RSMB B WHERE B.IDRADNIK = #TEMP_RSMB.IDRADNIK), 0) ) 
	FROM		#TEMP_RSMB
	INNER JOIN	(SELECT IDRADNIK, MAX(REDNIBROJ) AS MAX_REDNIBROJ FROM #TEMP_RSMB WHERE IZNOSOBRACUNANEPLACERSMB &lt;&gt; 0 GROUP BY IDRADNIK) AS ZADNJASTAVKA
	ON		#TEMP_RSMB.IDRADNIK = ZADNJASTAVKA.IDRADNIK
	WHERE	#TEMP_RSMB.REDNIBROJ = ZADNJASTAVKA.MAX_REDNIBROJ



	UPDATE	#TEMP_RSMB
	SET		POREZIPRIREZ = ROUND(IZNOSOSNOVICEZADOPRINOSERSMB * ISNULL((SELECT UKUPNOPOREZIPRIREZ / UKUPNOBRUTO FROM VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO WHERE VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDOBRACUNIDOBRACUN = @IDOBRACUN AND VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDIDRADNIK = #TEMP_RSMB.IDRADNIK AND VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOBRUTO &lt;&gt; 0), 0), 2)
	WHERE	IZNOSOSNOVICEZADOPRINOSERSMB &lt;&gt; 0
	
	UPDATE	#TEMP_RSMB
	SET		POREZIPRIREZ = POREZIPRIREZ + ( ISNULL((SELECT SUM(VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.UKUPNOPOREZIPRIREZ) FROM VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO WHERE VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDOBRACUNIDOBRACUN = @IDOBRACUN AND VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDIDRADNIK = #TEMP_RSMB.IDRADNIK), 0) - ISNULL((SELECT SUM(POREZIPRIREZ) FROM #TEMP_RSMB B WHERE B.IDRADNIK = #TEMP_RSMB.IDRADNIK), 0) ) 
	FROM		#TEMP_RSMB
	INNER JOIN	(SELECT IDRADNIK, MAX(REDNIBROJ) AS MAX_REDNIBROJ FROM #TEMP_RSMB WHERE IZNOSOBRACUNANEPLACERSMB &lt;&gt; 0 GROUP BY IDRADNIK) AS ZADNJASTAVKA
	ON		#TEMP_RSMB.IDRADNIK = ZADNJASTAVKA.IDRADNIK
	WHERE	#TEMP_RSMB.REDNIBROJ = ZADNJASTAVKA.MAX_REDNIBROJ
	

	
	UPDATE	#TEMP_RSMB
	SET 		IZNOSISPLACENEPLACERSMB = IZNOSOBRACUNANEPLACERSMB - MIO1RSMB - MIO2RSMB - POREZIPRIREZ
	WHERE	IZNOSOBRACUNANEPLACERSMB &lt;&gt; 0




	SET		@MAX_REDNIBROJ = 0
	SET		@TRENUTNI_REDNIBROJ = 0
	SET		@OO = ''
	SET     @IDRADNIK = 0
	SELECT 	@MAX_REDNIBROJ = ISNULL(MAX(REDNIBROJ), 0) FROM #TEMP_RSMB
	WHILE @TRENUTNI_REDNIBROJ &lt; @MAX_REDNIBROJ
	BEGIN
		SET @TRENUTNI_REDNIBROJ = @TRENUTNI_REDNIBROJ + 1

		SELECT @TRENUTNI_IDRADNIK = IDRADNIK, @TRENUTNI_OO = OO, @OD = OD, @DO = DOO  FROM #TEMP_RSMB WHERE REDNIBROJ = @TRENUTNI_REDNIBROJ
		IF @IDRADNIK &lt;&gt; @TRENUTNI_IDRADNIK
		BEGIN
			SET @IDRADNIK = @TRENUTNI_IDRADNIK
			SET @OO = ''
		END

		IF @OO &lt;&gt; @TRENUTNI_OO
		BEGIN
			SET @OO = @TRENUTNI_OO
			SET @USPOREDBA = @TRENUTNI_REDNIBROJ
			SET @OD1 = @OD
			SET @DO1 = @DO
		END

		IF @TRENUTNI_REDNIBROJ &gt; @USPOREDBA
		BEGIN
			IF (@OD &gt;= @OD1 AND @DO &lt;= @DO1)
			BEGIN
				DELETE FROM #TEMP_RSMB WHERE REDNIBROJ = @TRENUTNI_REDNIBROJ
			END 
			ELSE
			BEGIN
				IF (@OD &gt;= @OD1 AND @OD &lt;= @DO1 + 1) OR (@DO &gt;= @OD1 AND @DO &lt;= @DO1 + 1)
				BEGIN
					UPDATE #TEMP_RSMB SET OD = @OD1, DOO = @DO WHERE REDNIBROJ = @USPOREDBA
					DELETE FROM #TEMP_RSMB WHERE REDNIBROJ = @TRENUTNI_REDNIBROJ
					SET @DO1 = @DO
				END
				ELSE
				BEGIN
					SET @USPOREDBA = @TRENUTNI_REDNIBROJ
				END
			END
		END
	END



	INSERT INTO #RSMB
		(
		IDRADNIK,
		PREZIMEIIME,
		MBGOSIGURANIKA,
		SIFRAGRADARADA,
		OO,
		B,
		OD,
		DOO,
		IZNOSOBRACUNANEPLACERSMB,
		IZNOSOSNOVICEZADOPRINOSERSMB,
		IDDOPRINOSMIO1,
		STOPAMIO1,
		MIO1RSMB,
		IDDOPRINOSMIO2,
		STOPAMIO2,
		MIO2RSMB,
		POREZIPRIREZ,
		IZNOSISPLACENEPLACERSMB,
		OIB
		)
	SELECT
		IDRADNIK,
		PREZIMEIIME,
		MBGOSIGURANIKA,
		SIFRAGRADARADA,
		OO,
		B,
		OD,
		DOO,
		IZNOSOBRACUNANEPLACERSMB,
		IZNOSOSNOVICEZADOPRINOSERSMB,
		IDDOPRINOSMIO1,
		STOPAMIO1,
		MIO1RSMB,
		IDDOPRINOSMIO2,
		STOPAMIO2,
		MIO2RSMB,
		POREZIPRIREZ,
		IZNOSISPLACENEPLACERSMB,
		OIB
	FROM 	#TEMP_RSMB
	WHERE #TEMP_RSMB.MIO1RSMB &gt; 0 OR #TEMP_RSMB.MIO2RSMB &gt; 0
	ORDER BY REDNIBROJ

	
	SELECT * FROM #RSMB
END




GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_DD_VIRMANI]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_DD_VIRMANI]
GO


CREATE PROCEDURE [dbo].[S_DD_VIRMANI]
(
    @BROJRACUNAPLA AS VARCHAR (18),
    @IDOBRACUN AS varchar (11),
    @IDRS AS VARCHAR (5),
    @MATICNIBROJ AS VARCHAR (14),
    @MOPOREZ AS varchar (2),
    @MZPOREZ AS varchar (2),
    @OPISPLACANJAPOREZ AS varchar (36),
    @PLA1 AS VARCHAR (20),
    @PLA2 AS VARCHAR (20),
    @PLA3 AS VARCHAR (20),
    @POPOREZ AS varchar (22),
    @POREZIPRIREZODVOJENO AS char (1),
    @PRI1 AS VARCHAR (20),
    @PRI2 AS VARCHAR (20),
    @PZPOREZ AS varchar (22),
    @SIFRAOPISAPLACANJAPOREZ AS varchar (2),
    @ZADUZENJE AS char (1)
) AS
BEGIN

	SELECT	@IDRS = RTRIM(ISNULL(ddrsm, ''))
	FROM		ddobracun
	WHERE	ddobracunIDOBRACUN = @IDOBRACUN

	IF @IDRS &lt;&gt; '' 
		SET @IDRS = '-' + @IDRS


	
	INSERT INTO #temp_virmani
		(
				SIFRAOBRACUNAVIRMAN,
				NAMJENA,
				PLA1,
				PLA2,
				PLA3,
				BROJRACUNAPLA,
				MODELZADUZENJA, 
				POZIVZADUZENJA,
				PRI1,
				PRI2,
				PRI3,
				BROJRACUNAPRI,
				MODELODOBRENJA,
				POZIVODOBRENJA,
				SIFRAOPISAPLACANJAVIRMAN,
				OPISPLACANJAVIRMAN,
				IZNOS,
				IDDOPRINOS
		)
	SELECT	@IDOBRACUN,
			'Doprinosi',
			@PLA1,
			@PLA2,
			@PLA3,
			@BROJRACUNAPLA,
			CASE @ZADUZENJE WHEN '1' THEN ISNULL(MZDOPRINOS, '') ELSE '99' END, 
			CASE @ZADUZENJE WHEN '1' THEN ISNULL(PZDOPRINOS, '') ELSE '' END, 
			ISNULL(PRIMATELJDOPRINOS1, ''),
			ISNULL(PRIMATELJDOPRINOS2, ''), 
			'',
			ISNULL(VBDIDOPRINOS, '') + '-' + ISNULL(ZRNDOPRINOS, ''),
			ISNULL(MODOPRINOS, ''), 
			LEFT(ISNULL(PODOPRINOS, '') + @MATICNIBROJ + @IDRS, 22), 
			ISNULL(SIFRAOPISAPLACANJADOPRINOS, ''), 
			LEFT(ISNULL(OPISPLACANJADOPRINOS, ''), 36),
			SUM(ddOBRACUNATIDOPRINOS) AS UKUPNOIZNOS,
			IDDOPRINOS
	FROM         	DDOBRACUNRadniciDoprinosi
	WHERE     	ddobracunIDOBRACUN = @IDOBRACUN
	GROUP BY 	VBDIDOPRINOS, 
			ZRNDOPRINOS, 
			MODOPRINOS, 
			PODOPRINOS, 
			CASE @ZADUZENJE WHEN '1' THEN ISNULL(MZDOPRINOS, '') ELSE '99' END, 
			CASE @ZADUZENJE WHEN '1' THEN ISNULL(PZDOPRINOS, '') ELSE '' END, 
			PRIMATELJDOPRINOS1, 
			PRIMATELJDOPRINOS2, 
			SIFRAOPISAPLACANJADOPRINOS, 
			OPISPLACANJADOPRINOS,
			IDDOPRINOS

	

	
	INSERT INTO #temp_virmani
		(
				SIFRAOBRACUNAVIRMAN,
				NAMJENA,
				PLA1,
				PLA2,
				PLA3,
				BROJRACUNAPLA,
				MODELZADUZENJA, 
				POZIVZADUZENJA,
				PRI1,
				PRI2,
				PRI3,
				BROJRACUNAPRI,
				MODELODOBRENJA,
				POZIVODOBRENJA,
				SIFRAOPISAPLACANJAVIRMAN,
				OPISPLACANJAVIRMAN,
				IZNOS
		)
	SELECT	@IDOBRACUN,
			'Doprinosi',
			@PLA1,
			@PLA2,
			@PLA3,
			@BROJRACUNAPLA,
			CASE @ZADUZENJE WHEN '1' THEN ISNULL(MZDOPRINOS, '') ELSE '99' END, 
			CASE @ZADUZENJE WHEN '1' THEN ISNULL(PZDOPRINOS, '') ELSE '' END, 
			ISNULL(PRIMATELJDOPRINOS1, ''),
			ISNULL(PRIMATELJDOPRINOS2, ''), 
			'',
			ISNULL(VBDIDOPRINOS, '') + '-' + ISNULL(ZRNDOPRINOS, ''),
			ISNULL(MODOPRINOS, ''), 
			LEFT(ISNULL(PODOPRINOS, '') + @MATICNIBROJ + @IDRS, 22), 
			ISNULL(SIFRAOPISAPLACANJADOPRINOS, ''), 
			LEFT(ISNULL(OPISPLACANJADOPRINOS, ''), 36),
			SUM(ddOBRACUNATIDOPRINOS) AS UKUPNOIZNOS
	FROM         	DDOBRACUNRadniciDoprinosi
	WHERE     	ddobracunIDOBRACUN = @IDOBRACUN
	GROUP BY 	VBDIDOPRINOS, 
			ZRNDOPRINOS, 
			MODOPRINOS, 
			PODOPRINOS, 
			CASE @ZADUZENJE WHEN '1' THEN ISNULL(MZDOPRINOS, '') ELSE '99' END, 
			CASE @ZADUZENJE WHEN '1' THEN ISNULL(PZDOPRINOS, '') ELSE '' END, 
			PRIMATELJDOPRINOS1, 
			PRIMATELJDOPRINOS2, 
			SIFRAOPISAPLACANJADOPRINOS, 
			OPISPLACANJADOPRINOS
	
	
	DELETE FROM	#temp_virmani
	WHERE		IDDOPRINOS &gt; 0


	
	SET		@MZPOREZ				= ''
	SET		@PZPOREZ				= ''	SET		@MOPOREZ				= ''	SET		@POPOREZ				= ''
	SET		@SIFRAOPISAPLACANJAPOREZ	= ''
	SET		@OPISPLACANJAPOREZ		= ''

	SELECT	TOP 1
			@MZPOREZ = ISNULL(DBO.POREZ.MZPOREZ, ''),
			@PZPOREZ = ISNULL(DBO.POREZ.PZPOREZ, ''),
			@MOPOREZ = ISNULL( dbo.DDKATEGORIJALevel1.DDMOPOREZ, ''),
			@POPOREZ = ISNULL(dbo.DDKATEGORIJALevel1.DDPOPOREZ, ''),
			@SIFRAOPISAPLACANJAPOREZ = ISNULL(SIFRAOPISAPLACANJAPOREZ, ''),
			@OPISPLACANJAPOREZ = ISNULL(OPISPLACANJAPOREZ, '')
FROM         dbo.DDKATEGORIJALevel1 INNER JOIN
                      dbo.POREZ ON dbo.POREZ.IDPOREZ = dbo.DDKATEGORIJALevel1.IDPOREZ
ORDER BY dbo.POREZ.IDPOREZ

	

	IF @POREZIPRIREZODVOJENO = '1'
	BEGIN
		INSERT INTO #temp_virmani
			(
					SIFRAOBRACUNAVIRMAN,
					NAMJENA,
					PLA1,
					PLA2,
					PLA3,
					BROJRACUNAPLA,
					MODELZADUZENJA, 
					POZIVZADUZENJA,
					PRI1,
					PRI2,
					PRI3,
					BROJRACUNAPRI,
					MODELODOBRENJA,
					POZIVODOBRENJA,
					SIFRAOPISAPLACANJAVIRMAN,
					OPISPLACANJAVIRMAN,
					IZNOS
			)
		SELECT	@IDOBRACUN,
				'Porez',
				@PLA1,
				@PLA2,
				@PLA3,
				@BROJRACUNAPLA,
				CASE @ZADUZENJE WHEN '1' THEN @MZPOREZ ELSE '99' END, 
				CASE @ZADUZENJE WHEN '1' THEN @PZPOREZ ELSE '' END, 
			             'POREZ NA DOHODAK', 
				LEFT(ISNULL(OPCINA.NAZIVOPCINE, ''), 20), 
				'',
				ISNULL(OPCINA.VBDIOPCINA, '') + '-' + ISNULL(OPCINA.ZRNOPCINA, ''),
				@MOPOREZ, 
				LEFT(DDOBRACUNRadniciPorezi.DDPOPOREZ + DDRADNIK.DDOIB + @IDRS, 22), 
				@SIFRAOPISAPLACANJAPOREZ,
				LEFT(@OPISPLACANJAPOREZ, 36), 
				SUM(OBRACUN_POREZ.IZNOSPOREZA)
		FROM         	DDOBRACUNRadniciPorezi 
		INNER JOIN	(SELECT ddobracunIDOBRACUN, DDIDRADNIK, DDMOPOREZ, DDPOPOREZ, MZPOREZ, PZPOREZ, PRIMATELJPOREZ1, PRIMATELJPOREZ2, SIFRAOPISAPLACANJAPOREZ, OPISPLACANJAPOREZ, SUM(ddOBRACUNATIPOREZ) AS IZNOSPOREZA FROM DDOBRACUNRadniciPorezi GROUP BY ddobracunIDOBRACUN, ddIDRADNIK, ddMOPOREZ, ddPOPOREZ, MZPOREZ, PZPOREZ, PRIMATELJPOREZ1, PRIMATELJPOREZ2, SIFRAOPISAPLACANJAPOREZ, OPISPLACANJAPOREZ) OBRACUN_POREZ 
		ON		OBRACUN_POREZ.DDOBRACUNIDOBRACUN = DDOBRACUNRADNICIPOREZI.DDOBRACUNIDOBRACUN 
		AND 		OBRACUN_POREZ.DDIDRADNIK = DDOBRACUNRADNICIPOREZI.DDIDRADNIK 
		INNER JOIN	DDRADNIK 
		ON 		DDOBRACUNRADNICIPOREZI.DDIDRADNIK = DDRADNIK.DDIDRADNIK
		INNER JOIN	OPCINA
		ON 		DDRADNIK.OPCINASTANOVANJAIDOPCINE = OPCINA.IDOPCINE
		WHERE     	DDOBRACUNRADNICIPOREZI.DDOBRACUNIDOBRACUN = @IDOBRACUN
		GROUP BY 	DDRADNIK.OPCINASTANOVANJAIDOPCINE, 
				OPCINA.VBDIOPCINA,
				OPCINA.ZRNOPCINA,
				OPCINA.NAZIVOPCINE,DDRADNIK.DDOIB,DDOBRACUNRadniciPorezi.DDPOPOREZ

	
		INSERT INTO #temp_virmani
			(
					SIFRAOBRACUNAVIRMAN,
					NAMJENA,
					PLA1,
					PLA2,
					PLA3,
					BROJRACUNAPLA,
					MODELZADUZENJA, 
					POZIVZADUZENJA,
					PRI1,
					PRI2,
					PRI3,
					BROJRACUNAPRI,
					MODELODOBRENJA,
					POZIVODOBRENJA,
					SIFRAOPISAPLACANJAVIRMAN,
					OPISPLACANJAVIRMAN,
					IZNOS
			)
		SELECT	@IDOBRACUN,
				'Prirez',
				@PLA1,
				@PLA2,
				@PLA3,
				@BROJRACUNAPLA,
				CASE @ZADUZENJE WHEN '1' THEN DDOBRACUNRADNICIPOREZI.MZPOREZ ELSE '99' END, 
				CASE @ZADUZENJE WHEN '1' THEN DDOBRACUNRADNICIPOREZI.PZPOREZ ELSE '' END, 
			             'PRIREZ NA DOHODAK', 
				LEFT(ISNULL(OPCINA.NAZIVOPCINE, ''), 20), 
				'',
				ISNULL(OPCINA.VBDIOPCINA, '') + '-' + ISNULL(OPCINA.ZRNOPCINA, ''),
				DDOBRACUNRADNICIPOREZI.DDMOPOREZ, 
				LEFT(DDOBRACUNRADNICIPOREZI.DDPOPOREZ + DDRADNIK.DDOIB + @IDRS, 22),
				@SIFRAOPISAPLACANJAPOREZ, 
				LEFT(@OPISPLACANJAPOREZ, 36), 
				SUM(DDOBRACUNRADNICI.DDOBRACUNATIPRIREZ)
		FROM         	DDOBRACUNRADNICI 
		INNER JOIN	DDRADNIK 
		ON 		DDOBRACUNRADNICI.DDIDRADNIK = DDRADNIK.DDIDRADNIK
		inner JOIN DDOBRACUNRADNICIPOREZI
		ON DDOBRACUNRADNICI.DDIDRADNIK = DDOBRACUNRADNICIPOREZI.DDIDRADNIK
		INNER JOIN	OPCINA
		ON 		DDRADNIK.OPCINASTANOVANJAIDOPCINE = OPCINA.IDOPCINE
		WHERE     	DDOBRACUNRADNICI.DDOBRACUNIDOBRACUN = @IDOBRACUN
		GROUP BY 	DDRADNIK.OPCINASTANOVANJAIDOPCINE, 
				OPCINA.VBDIOPCINA,
				OPCINA.ZRNOPCINA,
				OPCINA.NAZIVOPCINE,DDRADNIK.DDOIB,DDOBRACUNRADNICIPOREZI.DDMOPOREZ,DDOBRACUNRADNICIPOREZI.DDPOPOREZ,
				DDOBRACUNRADNICIPOREZI.MZPOREZ,DDOBRACUNRADNICIPOREZI.PZPOREZ

	END
	ELSE
	BEGIN

	

		SET @PRI1 = ''
		SET @PRI2 = ''

		SELECT 	TOP 1
				@PRI1	= ISNULL(PRIMATELJPOREZ1, ''), 
				@PRI2 = ISNULL(PRIMATELJPOREZ2, '')
		FROM 		DDOBRACUNRADNICIPOREZI 
		WHERE	DDOBRACUNIDOBRACUN = @IDOBRACUN
		

	
		INSERT INTO #temp_virmani
			(
					SIFRAOBRACUNAVIRMAN,
					NAMJENA,
					PLA1,
					PLA2,
					PLA3,
					BROJRACUNAPLA,
					MODELZADUZENJA, 
					POZIVZADUZENJA,					PRI1,
					PRI2,
					PRI3,
					BROJRACUNAPRI,
					MODELODOBRENJA,
					POZIVODOBRENJA,
					SIFRAOPISAPLACANJAVIRMAN,
					OPISPLACANJAVIRMAN,
					IZNOS
			)
		SELECT	@IDOBRACUN,
				'Porez i prirez',
				@PLA1,
				@PLA2,
				@PLA3,
				@BROJRACUNAPLA,
				CASE @ZADUZENJE WHEN '1' THEN OBRACUN_POREZ.MZPOREZ ELSE '99' END, 
				CASE @ZADUZENJE WHEN '1' THEN OBRACUN_POREZ.PZPOREZ ELSE '' END, 
			             'POREZ NA DOHODAK', 
				LEFT(ISNULL(OPCINA.NAZIVOPCINE, ''), 20), 
				'',
				ISNULL(OPCINA.VBDIOPCINA, '') + '-' + ISNULL(OPCINA.ZRNOPCINA, ''),
				OBRACUN_POREZ.DDMOPOREZ, 
				LEFT(OBRACUN_POREZ.DDPOPOREZ + DDRADNIK.DDOIB + @IDRS, 22), 
				@SIFRAOPISAPLACANJAPOREZ,
				LEFT(@OPISPLACANJAPOREZ, 36), 
				SUM(OBRACUN_POREZ.IZNOSPOREZA+DDOBRACUNRADNICI.DDOBRACUNATIPRIREZ)
		FROM         	DDOBRACUNRadnici
		INNER JOIN	(SELECT ddobracunIDOBRACUN, DDIDRADNIK, DDMOPOREZ, DDPOPOREZ, MZPOREZ, PZPOREZ, PRIMATELJPOREZ1, PRIMATELJPOREZ2, SIFRAOPISAPLACANJAPOREZ, OPISPLACANJAPOREZ, SUM(ddOBRACUNATIPOREZ) AS IZNOSPOREZA FROM DDOBRACUNRadniciPorezi GROUP BY ddobracunIDOBRACUN, ddIDRADNIK, ddMOPOREZ, ddPOPOREZ, MZPOREZ, PZPOREZ, PRIMATELJPOREZ1, PRIMATELJPOREZ2, SIFRAOPISAPLACANJAPOREZ, OPISPLACANJAPOREZ) OBRACUN_POREZ 
		ON		OBRACUN_POREZ.DDOBRACUNIDOBRACUN = DDOBRACUNRADNICI.DDOBRACUNIDOBRACUN 
		AND 		OBRACUN_POREZ.DDIDRADNIK = DDOBRACUNRADNICI.DDIDRADNIK 
		INNER JOIN	DDRADNIK 
		ON 		DDOBRACUNRADNICI.DDIDRADNIK = DDRADNIK.DDIDRADNIK
		INNER JOIN	OPCINA
		ON 		DDRADNIK.OPCINASTANOVANJAIDOPCINE = OPCINA.IDOPCINE
		WHERE     	DDOBRACUNRADNICI.DDOBRACUNIDOBRACUN = @IDOBRACUN
		GROUP BY 	DDRADNIK.OPCINASTANOVANJAIDOPCINE, 
				OPCINA.VBDIOPCINA,
				OPCINA.ZRNOPCINA,
				OPCINA.NAZIVOPCINE,DDRADNIK.DDOIB,OBRACUN_POREZ.DDPOPOREZ,OBRACUN_POREZ.DDMOPOREZ,OBRACUN_POREZ.MZPOREZ,OBRACUN_POREZ.PZPOREZ

	END






	
	
	INSERT INTO #temp_virmani
		(
				SIFRAOBRACUNAVIRMAN,
				NAMJENA,
				PLA1,
				PLA2,
				PLA3,
				BROJRACUNAPLA,
				MODELZADUZENJA, 
				POZIVZADUZENJA,
				PRI1,
				PRI2,
				PRI3,
				BROJRACUNAPRI,
				MODELODOBRENJA,
				POZIVODOBRENJA,
				SIFRAOPISAPLACANJAVIRMAN,
				OPISPLACANJAVIRMAN,
				IZNOS
		)
	SELECT	@IDOBRACUN,
			'Posebni porez',
			@PLA1,
			@PLA2,
			@PLA3,
			@BROJRACUNAPLA,
			CASE @ZADUZENJE WHEN '1' THEN ISNULL(MZKRIZNI, '') ELSE '99' END, 
			CASE @ZADUZENJE WHEN '1' THEN ISNULL(PZKRIZNI, '') ELSE '' END, 
			LEFT(ISNULL(PRIMATELJKRIZNI1, ''), 20), 
			LEFT(ISNULL(PRIMATELJKRIZNI2, ''), 20), 
			LEFT(ISNULL(PRIMATELJKRIZNI3, ''), 20), 
			ISNULL(VBDIKRIZNI, '') + '-' + ISNULL(ZRNKRIZNI, ''), 
			ISNULL(MOKRIZNI, ''), 	
			LEFT(ISNULL(POKRIZNI, '')++ @MATICNIBROJ, 22), 
			ISNULL(SIFRAOPISAPLACANJAKRIZNI, ''), 
			LEFT(ISNULL(OPISPLACANJAKRIZNI, ''), 36), 
			SUM(DDPOREZKRIZNI)
	FROM         	DDOBRACUNRadniciDDKrizniPorez
	WHERE     	DDOBRACUNIDOBRACUN = @IDOBRACUN
	GROUP BY 	MOKRIZNI, 
			POKRIZNI, 
			CASE @ZADUZENJE WHEN '1' THEN ISNULL(MZKRIZNI, '') ELSE '99' END, 
			CASE @ZADUZENJE WHEN '1' THEN ISNULL(PZKRIZNI, '') ELSE '' END, 
			  VBDIKRIZNI,
			  ZRNKRIZNI,
			PRIMATELJKRIZNI1, 
			PRIMATELJKRIZNI2, 
			 PRIMATELJKRIZNI3,
			SIFRAOPISAPLACANJAKRIZNI, 
			OPISPLACANJAKRIZNI




	
	INSERT INTO #temp_virmani_isp
		(
				SIFRAOBRACUNAVIRMAN,
				SIFRAZAGRUPIRANJE,
				NAMJENA,
				PLA1,
				PLA2,
				PLA3,
				BROJRACUNAPLA,
				MODELZADUZENJA, 
				POZIVZADUZENJA,
				PRI1,
				PRI2,
				PRI3,
				BROJRACUNAPRI,
				MODELODOBRENJA,
				POZIVODOBRENJA,
				SIFRAOPISAPLACANJAVIRMAN,
				OPISPLACANJAVIRMAN,
				IZNOS,
				IDRADNIK,
				SIFRANAMJENA
		)
	SELECT	@idobracun,
			'R' + CONVERT(varchar, DDOBRACUNRADNICI.DDIDRADNIK),
			'Neto isplata',
			@PLA1,
			@PLA2,
			@PLA3,
			@BROJRACUNAPLA,
			CASE @ZADUZENJE WHEN '1' THEN ISNULL(BANKE.MZBANKA, '') ELSE '99' END, 
			CASE @ZADUZENJE WHEN '1' THEN ISNULL(BANKE.PZBANKA, '') ELSE '' END, 
			LEFT(ISNULL(BANKE.NAZIVBANKE1, ''), 20), 
			LEFT(ISNULL(BANKE.NAZIVBANKE2, ''), 20), 
			LEFT(ISNULL(BANKE.NAZIVBANKE3, ''), 20), 
			ISNULL(BANKE.VBDIBANKE, '') + '-' + ISNULL(BANKE.ZRNBANKE, ''),
			ISNULL(BANKE.MOBANKA, ''),
			ISNULL(BANKE.POBANKA, ''),
			ISNULL(BANKE.SIFRAOPISPLACANJABANKE, ''),
			ISNULL(BANKE.OPISPLACANJABANKE, ''),
			SUM(VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.ZAISPLATU),
			DDOBRACUNRADNICI.DDIDRADNIK,
			10
	FROM 		DDOBRACUNRADNICI 
	INNER JOIN 	VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO 
	ON 		DDOBRACUNRADNICI.DDOBRACUNIDOBRACUN = VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDOBRACUNIDOBRACUN 
	AND		DDOBRACUNRADNICI.DDIDRADNIK = VW_DD_OBRACUN_ZAPOSLENIK_UKUPNO.DDIDRADNIK
	INNER JOIN 	DDRADNIK 
	ON 		DDOBRACUNRADNICI.DDIDRADNIK = DDRADNIK.DDIDRADNIK 
	INNER JOIN 	BANKE 
	ON 		DDRADNIK.IDBANKE = BANKE.IDBANKE
	WHERE     	DDOBRACUNRADNICI.DDOBRACUNIDOBRACUN = @IDOBRACUN
	GROUP BY	DDOBRACUNRADNICI.DDIDRADNIK,
			CASE @ZADUZENJE WHEN '1' THEN ISNULL(BANKE.MZBANKA, '') ELSE '99' END,
			CASE @ZADUZENJE WHEN '1' THEN ISNULL(BANKE.PZBANKA, '') ELSE '' END, 
			BANKE.IDBANKE,
			BANKE.NAZIVBANKE1, 
			BANKE.NAZIVBANKE2, 
			BANKE.NAZIVBANKE3, 
			BANKE.VBDIBANKE,
			BANKE.ZRNBANKE, 
			BANKE.MOBANKA, 
			BANKE.POBANKA,
			BANKE.SIFRAOPISPLACANJABANKE, 
			BANKE.OPISPLACANJABANKE




INSERT INTO #TEMP_VIRMANI
		(
				SIFRAOBRACUNAVIRMAN,
				SIFRAZAGRUPIRANJE,
				NAMJENA,
				PLA1,
				PLA2,
				PLA3,
				BROJRACUNAPLA,
				MODELZADUZENJA, 
				POZIVZADUZENJA,
				PRI1,
				PRI2,
				PRI3,
				BROJRACUNAPRI,
				MODELODOBRENJA,
				POZIVODOBRENJA,
				SIFRAOPISAPLACANJAVIRMAN,
				OPISPLACANJAVIRMAN,
				IZNOS,
				IDRADNIK,
				SIFRANAMJENA
		)
	SELECT		@IDOBRACUN,
			CASE DDRADNIK.DDZBIRNINETO WHEN 1 THEN 'B' + CONVERT(varchar, BANKE.IDBANKE) ELSE 'R' + CONVERT(varchar, DDRADNIK.DDIDRADNIK) END,
			CASE DDRADNIK.DDZBIRNINETO WHEN 1 THEN 'Neto isplate-zbirni' ELSE 'Neto isplata' END,
			@PLA1,
			@PLA2,
			@PLA3,
			@BROJRACUNAPLA,
			CASE @ZADUZENJE WHEN '1' THEN ISNULL(BANKE.MZBANKA, '') ELSE '99' END, 
			CASE @ZADUZENJE WHEN '1' THEN ISNULL(BANKE.PZBANKA, '') ELSE '' END, 
			LEFT(ISNULL(BANKE.NAZIVBANKE1, ''), 20), 
			LEFT(ISNULL(BANKE.NAZIVBANKE2, ''), 20), 
			LEFT(ISNULL(BANKE.NAZIVBANKE3, ''), 20), 
			CASE (CASE DDRADNIK.DDZBIRNINETO WHEN 1 THEN 0 ELSE #temp_virmani_isp.IDRADNIK END) WHEN 0 THEN ISNULL(BANKE.VBDIBANKE, '') + '-' + ISNULL(BANKE.ZRNBANKE, '') ELSE ISNULL(BANKE.VBDIBANKE, '') + '-' END, 
			CASE (CASE DDRADNIK.DDZBIRNINETO WHEN 1 THEN 0 ELSE #temp_virmani_isp.IDRADNIK END) WHEN 0 THEN ISNULL(BANKE.MOBANKA, '') ELSE  ISNULL(BANKE.MOBANKA, '') END, 
			CASE (CASE DDRADNIK.DDZBIRNINETO WHEN 1 THEN 0 ELSE #temp_virmani_isp.IDRADNIK END) WHEN 0 THEN ISNULL(BANKE.POBANKA, '') ELSE  ISNULL(BANKE.POBANKA, '') END, 
			LEFT(ISNULL(DDRADNIK.DDSIFRAOPISAPLACANJANETO, ''), 2), 
			LEFT(ISNULL(DDRADNIK.DDOPISPLACANJANETO, '') + ' ' + @IDOBRACUN, 36), 
			SUM(#temp_virmani_isp.iznos),
			CASE DDRADNIK.DDZBIRNINETO WHEN 1 THEN 0 ELSE #temp_virmani_isp.IDRADNIK END,
			10
	FROM 		#temp_virmani_isp

	INNER JOIN 	DDRADNIK 
	ON 		#temp_virmani_isp.IDRADNIK =DDRADNIK.DDIDRADNIK 
	INNER JOIN 	BANKE 
	ON 		DDRADNIK.IDBANKE = BANKE.IDBANKE
	WHERE     	#temp_virmani_isp.sifraobracunavirman = @IDOBRACUN and #temp_virmani_isp.sifranamjena = 10
	GROUP BY	CASE DDRADNIK.DDZBIRNINETO WHEN 1 THEN 'B' + CONVERT(varchar, BANKE.IDBANKE) ELSE 'R' + CONVERT(varchar, DDRADNIK.DDIDRADNIK) END,
			CASE DDRADNIK.DDZBIRNINETO WHEN 1 THEN 'Neto isplate-zbirni' ELSE 'Neto isplata' END,
			CASE DDRADNIK.DDZBIRNINETO WHEN 1 THEN 0 ELSE #temp_virmani_isp.IDRADNIK END,
			CASE DDRADNIK.DDZBIRNINETO WHEN 1 THEN '' ELSE DDRADNIK.DDZRN END,
			CASE @ZADUZENJE WHEN '1' THEN ISNULL(BANKE.MZBANKA, '') ELSE '99' END,
			CASE @ZADUZENJE WHEN '1' THEN ISNULL(BANKE.PZBANKA, '') ELSE '' END, 
			BANKE.IDBANKE,
			BANKE.NAZIVBANKE1, 
			BANKE.NAZIVBANKE2, 
			BANKE.NAZIVBANKE3, 
			BANKE.VBDIBANKE,
			BANKE.ZRNBANKE, 
			BANKE.MOBANKA, 
			BANKE.POBANKA,
			BANKE.SIFRAOPISPLACANJABANKE, 
			BANKE.OPISPLACANJABANKE,
			DDRADNIK.DDSIFRAOPISAPLACANJANETO,			
			DDRADNIK.DDOPISPLACANJANETO


	UPDATE	#TEMP_VIRMANI
	SET		BROJRACUNAPRI = LEFT(BROJRACUNAPRI + DDRADNIK.DDZRN,18),MODELODOBRENJA=ISNULL(DDRADNIK.DDMO,'99'),POZIVODOBRENJA=ISNULL(DDRADNIK.DDPBO,'')
	FROM		#TEMP_VIRMANI
	INNER JOIN 	DDRADNIK
	ON		#TEMP_VIRMANI.IDRADNIK = DDRADNIK.DDIDRADNIK
	AND		#TEMP_VIRMANI.IDRADNIK &gt; 0



	SELECT 	
			SIFRAOBRACUNAVIRMAN,
			NAMJENA,
			PLA1,
			PLA2,
			PLA3,
			BROJRACUNAPLA,
			MODELZADUZENJA,
			POZIVZADUZENJA,
			PRI1,
			PRI2,
			PRI3,
			BROJRACUNAPRI,
			MODELODOBRENJA,
			POZIVODOBRENJA,
			SIFRAOPISAPLACANJAVIRMAN,
			OPISPLACANJAVIRMAN,
			IZNOS,
			IDRADNIK,
			IDELEMENT,
			GETDATE() AS DATUMVALUTE,
			GETDATE() AS DATUMPODNOSENJA,
			'501' AS IZVORDOKUMENTA,
			1 as oznacen

	FROM 		#TEMP_VIRMANI
	WHERE	IZNOS &gt; 0 
	ORDER BY	RBR

END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_BILANCA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_BILANCA]
GO
CREATE PROCEDURE [dbo].[S_FIN_BILANCA]
    (
      @RAZDOBLJEOD DATETIME = NULL,
      @RAZDOBLJEDO DATETIME = NULL,
      @ORG VARCHAR(1000),
      @MT VARCHAR(1000),
      @DOK VARCHAR(1000),
      @ANA INT,
      @SKR INT = 0,
	  @KLASA VARCHAR(1) =  NULL,
	  @VRSTABILANCE int = null
  
     
    )
AS 
    DECLARE @MAX INT
    DECLARE @brojac INT
    CREATE TABLE #BILANCA
        (
          DUGUJE DECIMAL(18, 2),
          POTRAZUJE DECIMAL(18, 2),
          KONTO VARCHAR(15),
          IDDOKUMENT BIGINT,
          IDMJESTOTROSKA BIGINT,
          IDORGJED BIGINT,
          BROJDOKUMENTA CHAR(15),
          PS BIT
        )
 
    CREATE TABLE #ukupna
        (
          DUGUJE DECIMAL(18, 2),
          POTRAZUJE DECIMAL(18, 2),
          KONTO VARCHAR(15)
        )
 
    CREATE TABLE #pocetna
        (
          POCETNODUGUJE DECIMAL(18, 2),
          POCETNOPOTRAZUJE DECIMAL(18, 2),
          KONTO VARCHAR(15)
        )
 
	IF @klasa = ' ' SET @klasa = NULL
	
    IF @SKR = 1 
        BEGIN
            EXEC dbo.S_FIN_BILANCA_SKRACENA @ANA, @brojac, @RAZDOBLJEOD, @RAZDOBLJEDO, @DOK, @MT, @ORG ,@KLASA,@VRSTABILANCE ;
        END
    ELSE 
        BEGIN
	       EXEC dbo.S_FIN_BILANCA_NORMAL @BROJAC, @RAZDOBLJEOD, @RAZDOBLJEDO, @DOK, @MT, @ORG,@KLASA,@VRSTABILANCE ;
	END 
    RETURN
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_BILANCA_NORMAL]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_BILANCA_NORMAL]
GO

CREATE PROCEDURE [dbo].[S_FIN_BILANCA_NORMAL]
(
    @BROJAC AS INT,
    @RAZDOBLJEOD AS DATETIME,
    @RAZDOBLJEDO AS DATETIME,
    @DOK AS VARCHAR (1000),
    @MT AS VARCHAR (1000),
    @ORG AS VARCHAR (1000),
    @KLASA VARCHAR(1) =  NULL,
	@VRSTABILANCE int = null
) AS
BEGIN
SELECT  @BROJAC = MAX(LEN(KONTO.IDKONTO))
            FROM    KONTO	
	
            WHILE @BROJAC &gt; 0
                BEGIN
                    INSERT  #bilanca
                            SELECT  SUM(dbo.GKSTAVKA.DUGUJE) AS duguje,
                                    SUM(dbo.GKSTAVKA.POTRAZUJE) AS potrazuje,
                                    SUBSTRING(konto.IDKONTO, 1, @BROJAC),
                                    GKSTAVKA.IDDOKUMENT,
                                    IDMJESTOTROSKA,
                                    IDORGJED,
                                    BROJDOKUMENTA,
                                    DOKUMENT.PS
                            FROM    dbo.GKSTAVKA
                                    INNER JOIN dbo.KONTO ON dbo.GKSTAVKA.IDKONTO = dbo.KONTO.IDKONTO
                                    INNER JOIN DOKUMENT ON GKSTAVKA.IDDOKUMENT = DOKUMENT.IDDOKUMENT
                            WHERE   ( DBO.GKSTAVKA.IDdokument IN (
                                      SELECT    ID
                                      FROM      fnSplitter(@DOK) ) )
                                    AND ( DBO.GKSTAVKA.IDORGJED IN (
                                          SELECT    ID
                                          FROM      fnSplitter(@ORG) ) )
                                    AND ( DBO.GKSTAVKA.IDMJESTOTROSKA IN (
                                          SELECT    ID
                                          FROM      fnSplitter(@MT) ) )
                                    AND ( DBO.GKSTAVKA.STATUSGK = 1 )
                                    AND ( DATUMDOKUMENTA &gt;= @RAZDOBLJEOD )
                                    AND ( DATUMDOKUMENTA &lt;= @RAZDOBLJEDO )
                                    AND LEN(SUBSTRING(konto.IDKONTO, 1,
                                                      @BROJAC)) = @BROJAC
                            GROUP BY SUBSTRING(konto.IDKONTO, 1, @BROJAC),
                                    GKSTAVKA.IDDOKUMENT,
                                    IDMJESTOTROSKA,
                                    IDORGJED,
                                    BROJDOKUMENTA,
                                    DOKUMENT.PS
                    SET @BROJAC = @BROJAC - 1
                END
            INSERT  #ukupna
                    SELECT  SUM(duguje) AS duguje,
                            SUM(potrazuje) AS potrazuje,
                            konto
                    FROM    #bilanca
                            LEFT OUTER JOIN dbo.KONTO ON #bilanca.KONTO = dbo.KONTO.IDKONTO
                    GROUP BY konto
            INSERT  #pocetna
                    SELECT  SUM(duguje) AS pocetnoduguje,
                            SUM(potrazuje) AS pocetnopotrazuje,
                            konto
                    FROM    #bilanca
                            LEFT OUTER JOIN dbo.KONTO ON #bilanca.KONTO = dbo.KONTO.IDKONTO
                    WHERE   #bilanca.ps = 1
                            AND brojdokUMENTA = '1'
                    GROUP BY konto
                    
            IF @KLASA IS NOT NULL
            BEGIN
            
            SELECT  #ukupna.duguje AS duguje,
                    #ukupna.potrazuje AS potrazuje,
                    #ukupna.konto AS konto,
                    ISNULL(#pocetna.pocetnoduguje, 0) AS pocetnoduguje,
                    ISNULL(#pocetna.pocetnopotrazuje, 0) AS pocetnopotrazuje,
                    ISNULL(konto.nazivkonto, 'Nema konta') AS naziv
            FROM    #ukupna
                    LEFT OUTER JOIN #pocetna ON #ukupna.konto = #pocetna.konto
                    LEFT OUTER JOIN dbo.konto ON #ukupna.konto = dbo.konto.idkonto
            WHERE LEN(#ukupna.konto) &lt;= @VRSTABILANCE AND #ukupna.konto LIKE @KLASA  + '%'
            ORDER BY konto
            END ELSE BEGIN
            SELECT  #ukupna.duguje AS duguje,
                    #ukupna.potrazuje AS potrazuje,
                    #ukupna.konto AS konto,
                    ISNULL(#pocetna.pocetnoduguje, 0) AS pocetnoduguje,
                    ISNULL(#pocetna.pocetnopotrazuje, 0) AS pocetnopotrazuje,
                    ISNULL(konto.nazivkonto, 'Nema konta') AS naziv
            FROM    #ukupna
                    LEFT OUTER JOIN #pocetna ON #ukupna.konto = #pocetna.konto
                    LEFT OUTER JOIN dbo.konto ON #ukupna.konto = dbo.konto.idkonto
            WHERE LEN(#ukupna.konto) &lt;= @VRSTABILANCE 
            ORDER BY konto
            END
                        
            
            
END
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_BILANCA_SKRACENA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_BILANCA_SKRACENA]
GO

CREATE PROCEDURE [dbo].[S_FIN_BILANCA_SKRACENA]
(
    @ANA AS INT,
    @BROJAC AS INT,
    @RAZDOBLJEOD AS DATETIME,
    @RAZDOBLJEDO AS DATETIME,
    @DOK AS VARCHAR (1000),
    @MT AS VARCHAR (1000),
    @ORG AS VARCHAR (1000),
    @KLASA VARCHAR(1) =  NULL,
	@VRSTABILANCE int = null
) AS
BEGIN
SELECT  @BROJAC = @ANA - 1
            INSERT  #bilanca
                    SELECT  SUM(dbo.GKSTAVKA.DUGUJE) AS duguje,
                            SUM(dbo.GKSTAVKA.POTRAZUJE) AS potrazuje,
                            GKSTAVKA.IDKONTO,
                            GKSTAVKA.IDDOKUMENT,
                            IDMJESTOTROSKA,
                            IDORGJED,
                            BROJDOKUMENTA,
                            dokument.ps
                    FROM    dbo.GKSTAVKA
                            INNER JOIN dbo.fnSplitter(@DOK) fnSplitter ON dbo.GKSTAVKA.IDDOKUMENT = fnSplitter.ID
                            INNER JOIN dbo.fnSplitter(@MT) fnSplitter_1 ON dbo.GKSTAVKA.IDMJESTOTROSKA = fnSplitter_1.ID
                            INNER JOIN dbo.fnSplitter(@ORG) fnSplitter_2 ON dbo.GKSTAVKA.IDORGJED = fnSplitter_2.ID
                            INNER JOIN DOKUMENT ON GKSTAVKA.IDDOKUMENT = DOKUMENT.IDDOKUMENT
                    WHERE   ( DBO.GKSTAVKA.STATUSGK = 1 )
                            AND ( DATUMDOKUMENTA &gt;= @RAZDOBLJEOD )
                            AND ( DATUMDOKUMENTA &lt;= @RAZDOBLJEDO )
                    GROUP BY GKSTAVKA.IDKONTO,
                            GKSTAVKA.iDDOKUMENT,
                            IDMJESTOTROSKA,
                            IDORGJED,
                            BROJDOKUMENTA,
                            DOKUMENT.PS
 
            INSERT  #ukupna
                    SELECT  SUM(duguje) AS duguje,
                            SUM(potrazuje) AS potrazuje,
                            #BILANCA.KONTO AS KONTO
                    FROM    #bilanca
                    GROUP BY #BILANCA.KONTO
            INSERT  #pocetna
                    SELECT  SUM(duguje) AS pocetnoduguje,
                            SUM(potrazuje) AS pocetnopotrazuje,
                            #BILANCA.KONTO AS KONTO
                    FROM    #bilanca
                    WHERE   #bilanca.ps = 1
                            AND brojdokUMENTA = '1'
                    GROUP BY #BILANCA.KONTO
 
            WHILE @BROJAC &gt; 0
 
                BEGIN
                    INSERT  #ukupna
                            SELECT  SUM(duguje) AS duguje,
                                    SUM(potrazuje) AS potrazuje,
                                    SUBSTRING(#BILANCA.KONTO, 1, @BROJAC) AS KONTO
                            FROM    #bilanca
                            WHERE   LEN(SUBSTRING(#BILANCA.KONTO, 1, @BROJAC)) = @BROJAC
                            GROUP BY SUBSTRING(#BILANCA.KONTO, 1, @BROJAC)
 
                    INSERT  #pocetna
                            SELECT  SUM(duguje) AS pocetnoduguje,
                                    SUM(potrazuje) AS pocetnopotrazuje,
                                    SUBSTRING(#BILANCA.KONTO, 1, @BROJAC) AS KONTO
                            FROM    #bilanca
                            WHERE   #bilanca.PS = 1
                                    AND brojdokUMENTA = '1'
                                    AND LEN(SUBSTRING(#BILANCA.KONTO, 1,
                                                      @BROJAC)) = @BROJAC
                            GROUP BY SUBSTRING(#BILANCA.KONTO, 1, @BROJAC)
                    SET @BROJAC = @BROJAC - 1
                END
 
     IF @KLASA IS  NOT NULL
            BEGIN
          SELECT  #ukupna.duguje AS duguje,
                    #ukupna.potrazuje AS potrazuje,
                    #ukupna.konto AS konto,
                    ISNULL(#pocetna.pocetnoduguje, 0) AS pocetnoduguje,
                    ISNULL(#pocetna.pocetnopotrazuje, 0) AS pocetnopotrazuje,
                    ISNULL(konto.nazivkonto, 'Nema konta u kontnome planu') AS naziv
            FROM    #ukupna
                    LEFT OUTER JOIN #pocetna ON #ukupna.konto = #pocetna.konto
                    LEFT OUTER JOIN dbo.konto ON #ukupna.konto = dbo.konto.idkonto
            WHERE LEN(#ukupna.KONTO) &lt;= @VRSTABILANCE aND #ukupna.konto LIKE @KLASA  + '%'
            ORDER BY konto
            END ELSE BEGIN
             SELECT  #ukupna.duguje AS duguje,
                    #ukupna.potrazuje AS potrazuje,
                    #ukupna.konto AS konto,
                    ISNULL(#pocetna.pocetnoduguje, 0) AS pocetnoduguje,
                    ISNULL(#pocetna.pocetnopotrazuje, 0) AS pocetnopotrazuje,
                    ISNULL(konto.nazivkonto, 'Nema konta u kontnome planu') AS naziv
            FROM    #ukupna
                    LEFT OUTER JOIN #pocetna ON #ukupna.konto = #pocetna.konto
                    LEFT OUTER JOIN dbo.konto ON #ukupna.konto = dbo.konto.idkonto
            WHERE LEN(#ukupna.KONTO) &lt;= @VRSTABILANCE
            ORDER BY konto
                    
            
            
      END
END
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_BLAGAJNA_U_GK]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_BLAGAJNA_U_GK]
GO


CREATE PROCEDURE [dbo].[S_FIN_BLAGAJNA_U_GK]
    (
      @dat1 datetime,
      @dat2 datetime,
      @blag int
	
    )
AS 
    BEGIN
        SELECT TOP ( 100 ) PERCENT
                dbo.BLGVRSTEDOK.NAZIVVRSTEDOK,
                dbo.BLAGAJNAStavkeBlagajne.BLGDATUMDOKUMENTA,
                dbo.BLAGAJNAStavkeBlagajne.BLGBROJDOKUMENTA,
                dbo.BLAGAJNAStavkeBlagajne.IDBLGVRSTEDOK,
                CASE dbo.BLAGAJNASTAVKEBLAGAJNE.IDBLGVRSTEDOK
                  WHEN 1
                  THEN 'Uplatnica-'
                       + cast(dbo.BLAGAJNAStavkeBlagajne.BLGBROJDOKUMENTA as varchar(6))
                       + ' ' + dbo.BLAGAJNAStavkeBlagajne.BLGSVRHA
                  ELSE 'Isplatnica-'
                       + cast(dbo.BLAGAJNAStavkeBlagajne.BLGBROJDOKUMENTA as varchar(6))
                       + ' ' + dbo.BLAGAJNAStavkeBlagajne.BLGSVRHA
                END AS opis,
                dbo.BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje.BLGSTAVKEBLAGAJNEKONTOIDKONTO,
                dbo.BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje.BLGMTIDMJESTOTROSKA,
                dbo.BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje.BLGORGJEDIDORGJED,
                CASE dbo.BLAGAJNASTAVKEBLAGAJNE.IDBLGVRSTEDOK
                  WHEN 2 THEN BLGIZNOSKONTIRANJA
                  ELSE 0
                END AS IZDATAK,
                CASE dbo.BLAGAJNASTAVKEBLAGAJNE.IDBLGVRSTEDOK
                  WHEN 1 THEN BLGIZNOSKONTIRANJA
                  ELSE 0
                END AS primitak
        FROM    dbo.BLAGAJNAStavkeBlagajne
                LEFT OUTER JOIN dbo.BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje ON dbo.BLAGAJNAStavkeBlagajne.BLGDOKIDDOKUMENT = dbo.BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje.BLGDOKIDDOKUMENT
                                                                                      AND dbo.BLAGAJNAStavkeBlagajne.IDBLGVRSTEDOK = dbo.BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje.IDBLGVRSTEDOK
                                                                                      AND dbo.BLAGAJNAStavkeBlagajne.blggodineIDGODINE = dbo.BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje.blggodineIDGODINE
                                                                                      AND dbo.BLAGAJNAStavkeBlagajne.BLGBROJDOKUMENTA = dbo.BLAGAJNAStavkeBlagajneStavkeBlagajneKontiranje.BLGBROJDOKUMENTA
                LEFT OUTER JOIN dbo.BLGVRSTEDOK ON dbo.BLAGAJNAStavkeBlagajne.IDBLGVRSTEDOK = dbo.BLGVRSTEDOK.IDBLGVRSTEDOK
        WHERE   ( BLAGAJNASTAVKEBLAGAJNE.BLGDATUMDOKUMENTA BETWEEN @dat1
                                                           AND     @dat2 )
                AND BLAGAJNASTAVKEBLAGAJNE.BLGBROJDOKUMENTA &gt; 0
                and BLAGAJNASTAVKEBLAGAJNE.BLGDOKIDDOKUMENT = @blag
        order by BLAGAJNASTAVKEBLAGAJNE.BLGDATUMDOKUMENTA,
                BLAGAJNASTAVKEBLAGAJNE.IDBLGVRSTEDOK,
                BLAGAJNASTAVKEBLAGAJNE.BLGBROJDOKUMENTA
    end


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_DNEVNIK]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_DNEVNIK]
GO


CREATE PROCEDURE [dbo].[S_FIN_DNEVNIK]
    (
      @ORG INT = NULL,
      @MT INT = NULL,
      @DOK INT = NULL,
      @BROJDOK INT = NULL,
      @RAZDOBLJEOD DATETIME = NULL,
      @RAZDOBLJEDO DATETIME = NULL,
      @POCETNIKONTO VARCHAR(15) = NULL,
      @ZAVRSNIKONTO VARCHAR(15) = NULL,
      @STATUS BIT = null
					
	
    )
AS 

	IF @ORG = -1  SET @ORG = NULL
	IF @MT = -1  SET @MT = NULL
	IF @DOK = -1  SET @DOK = NULL
	IF @BROJDOK = -1  SET @BROJDOK = NULL
	IF @POCETNIKONTO = ' '  SET @POCETNIKONTO = NULL
	IF @ZAVRSNIKONTO = ' '  SET @ZAVRSNIKONTO = NULL
		
	
	
    SELECT TOP 100 PERCENT
            dbo.GKSTAVKA.duguje,
            dbo.GKSTAVKA.POTRAZUJE,
            dbo.KONTO.IDKONTO AS KONTO,
            dbo.GKSTAVKA.DATUMDOKUMENTA AS DATUMDOK,
            dbo.DOKUMENT.NAZIVDOKUMENT AS SKRACENI,
            dbo.GKSTAVKA.BROJDOKUMENTA AS BROJDOK,
            dbo.GKSTAVKA.BROJSTAVKE,
            dbo.GKSTAVKA.OPIS AS opisknjizenja,
            dbo.KONTO.NAZIVKONTO AS NAZIVKONTO,
            dbo.GKSTAVKA.IDDOKUMENT AS IDDOKUMENT,
            dbo.ORGJED.IDORGJED,
            dbo.MJESTOTROSKA.IDMJESTOTROSKA,
            dbo.GKSTAVKA.IDPARTNER AS IDPARTNER,
            dbo.PARTNER.NAZIVPARTNER,
            dbo.GKSTAVKA.ORIGINALNIDOKUMENT
    FROM    dbo.GKSTAVKA
            INNER JOIN dbo.DOKUMENT ON dbo.GKSTAVKA.IDDOKUMENT = dbo.DOKUMENT.IDDOKUMENT
            INNER JOIN dbo.ORGJED ON dbo.GKSTAVKA.IDORGJED = dbo.ORGJED.IDORGJED
            INNER JOIN dbo.MJESTOTROSKA ON dbo.GKSTAVKA.IDMJESTOTROSKA = dbo.MJESTOTROSKA.IDMJESTOTROSKA
            INNER JOIN dbo.KONTO ON dbo.GKSTAVKA.IDKONTO = dbo.KONTO.IDKONTO
            LEFT OUTER JOIN dbo.PARTNER ON dbo.GKSTAVKA.IDPARTNER = dbo.PARTNER.IDPARTNER
    WHERE   ( DBO.GKSTAVKA.IDORGJED = COALESCE(@ORG,
                                               DBO.GKSTAVKA.IDORGJED) )
            AND ( DBO.GKSTAVKA.IDMJESTOTROSKA = COALESCE(@MT,
                                                         DBO.GKSTAVKA.IDMJESTOTROSKA) )
            AND ( DBO.GKSTAVKA.IDdokument = COALESCE(@DOK,
                                                     DBO.GKSTAVKA.IDDOKUMENT) )
            AND ( GKSTAVKA.DATUMDOKUMENTA BETWEEN @RAZDOBLJEOD AND @RAZDOBLJEDO )
            AND ( konto.IDkonto BETWEEN COALESCE(@POCETNIKONTO, DBO.konto.idkonto)
                                AND     COALESCE(@ZAVRSNIKONTO, DBO.konto.idkonto) )
            AND ( DBO.GKSTAVKA.brojdokumenta = COALESCE(@BROJDOK,
                                                        DBO.GKSTAVKA.brojdokumenta) )
            AND ( DBO.GKSTAVKA.statusgk = COALESCE(@STATUS,
                                                   DBO.GKSTAVKA.statusgk) )
    ORDER BY GKSTAVKA.datumdokumenta,
            dbo.DOKUMENT.NAZIVDOKUMENT,
            dbo.GKSTAVKA.BROJDOKUMENTA,
            GKSTAVKA.brojstavke
    RETURN

GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_DNEVNIKBLAGAJNE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_DNEVNIKBLAGAJNE]
GO



CREATE PROCEDURE [dbo].[S_FIN_DNEVNIKBLAGAJNE]
    (
      @dat1 DATETIME,
      @dat2 DATETIME,
      @blag INT
	  
	
    )
AS 
    SELECT  dbo.BLGVRSTEDOK.NAZIVVRSTEDOK,
            BLAGAJNASTAVKEBLAGAJNE.BLGDATUMDOKUMENTA,
            BLAGAJNASTAVKEBLAGAJNE.BLGBROJDOKUMENTA,
            dbo.BLAGAJNASTAVKEBLAGAJNE.IDBLGVRSTEDOK,
            BLAGAJNASTAVKEBLAGAJNE.BLGSVRHA,
            CASE dbo.BLAGAJNASTAVKEBLAGAJNE.IDBLGVRSTEDOK
              WHEN 1 THEN BLAGAJNASTAVKEBLAGAJNE.blgiznos
              ELSE 0
            END AS PRIMITAK,
            CASE dbo.BLAGAJNASTAVKEBLAGAJNE.IDBLGVRSTEDOK
              WHEN 2 THEN BLAGAJNASTAVKEBLAGAJNE.blgiznos
              ELSE 0
            END AS IZDATAK,
            dbo.fnBlagajnaKonto(BLAGAJNASTAVKEBLAGAJNE.BLGBROJDOKUMENTA,
                                BLAGAJNASTAVKEBLAGAJNE.IDBLGVRSTEDOK,
                                BLAGAJNASTAVKEBLAGAJNE.BLGDOKIDDOKUMENT, BLAGAJNASTAVKEBLAGAJNE.blggodineIDGODINE) AS konta
    FROM    dbo.BLAGAJNASTAVKEBLAGAJNE
            LEFT OUTER JOIN dbo.BLGVRSTEDOK ON dbo.BLAGAJNASTAVKEBLAGAJNE.IDBLGVRSTEDOK = dbo.BLGVRSTEDOK.IDBLGVRSTEDOK
    WHERE   ( BLAGAJNASTAVKEBLAGAJNE.BLGDATUMDOKUMENTA BETWEEN @dat1
                                                       AND     @dat2 )
            AND BLAGAJNASTAVKEBLAGAJNE.BLGBROJDOKUMENTA &gt; 0
            AND BLAGAJNASTAVKEBLAGAJNE.BLGDOKIDDOKUMENT = @blag 
    ORDER BY BLAGAJNASTAVKEBLAGAJNE.BLGDATUMDOKUMENTA,
            BLAGAJNASTAVKEBLAGAJNE.IDBLGVRSTEDOK,
            BLAGAJNASTAVKEBLAGAJNE.BLGBROJDOKUMENTA
    RETURN


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_DNEVNIKBLAGAJNEOdDo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_DNEVNIKBLAGAJNEOdDo]
GO



CREATE PROCEDURE [dbo].[S_FIN_DNEVNIKBLAGAJNEOdDo]
    (
      @odd INT,
      @doo INT,
      @vrsta INT,
      @blag INT,
	  @AKTIVNAGODINA INT
	
    )
AS 
    SELECT  dbo.BLGVRSTEDOK.NAZIVVRSTEDOK,
            BLAGAJNASTAVKEBLAGAJNE.BLGDATUMDOKUMENTA,
            BLAGAJNASTAVKEBLAGAJNE.BLGBROJDOKUMENTA,
            dbo.BLAGAJNASTAVKEBLAGAJNE.IDBLGVRSTEDOK,
            BLAGAJNASTAVKEBLAGAJNE.BLGSVRHA,
            CASE dbo.BLAGAJNASTAVKEBLAGAJNE.IDBLGVRSTEDOK
              WHEN 1 THEN BLAGAJNASTAVKEBLAGAJNE.blgiznos
              ELSE 0
            END AS PRIMITAK,
            CASE dbo.BLAGAJNASTAVKEBLAGAJNE.IDBLGVRSTEDOK
              WHEN 2 THEN BLAGAJNASTAVKEBLAGAJNE.blgiznos
              ELSE 0
            END AS IZDATAK,
            '' AS BLGSLOVIMA,
            dbo.fnBlagajnaKonto(BLAGAJNASTAVKEBLAGAJNE.BLGBROJDOKUMENTA,
                                dbo.BLAGAJNASTAVKEBLAGAJNE.IDBLGVRSTEDOK,
                                BLAGAJNASTAVKEBLAGAJNE.BLGDOKIDDOKUMENT, BLAGAJNASTAVKEBLAGAJNE.blggodineIDGODINE) AS konta
    FROM    dbo.BLAGAJNASTAVKEBLAGAJNE
            LEFT OUTER JOIN dbo.BLGVRSTEDOK ON dbo.BLAGAJNASTAVKEBLAGAJNE.IDBLGVRSTEDOK = dbo.BLGVRSTEDOK.IDBLGVRSTEDOK
    WHERE   ( BLAGAJNASTAVKEBLAGAJNE.BLGbrojdokumenta BETWEEN @odd
                                                      AND     @doo )
            AND BLAGAJNASTAVKEBLAGAJNE.IDBLGVRSTEDOK = @vrsta
            AND BLAGAJNASTAVKEBLAGAJNE.BLGDOKIDDOKUMENT = @blag  AND dbo.BLAGAJNAStavkeBlagajne.blggodineIDGODINE = @AKTIVNAGODINA
    ORDER BY BLAGAJNASTAVKEBLAGAJNE.BLGDATUMDOKUMENTA,
            BLAGAJNASTAVKEBLAGAJNE.IDBLGVRSTEDOK,
            BLAGAJNASTAVKEBLAGAJNE.BLGBROJDOKUMENTA
    RETURN


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_IRA_PLACANJE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_IRA_PLACANJE]
GO




CREATE PROCEDURE dbo.S_FIN_IRA_PLACANJE
    (
      @iddokument INT = NULL,
      @od INT = NULL,
      @doo INT = NULL,
      @dat1 DATETIME,
      @dat2 DATETIME
		

	
    )
AS 
    SELECT  ISNULL(dbo.VW_FIN_IRA_UKUPNO.ZATVARANJE_IZNOS,0) AS ZATVARANJE_IZNOS,
            dbo.VW_FIN_IRA_UKUPNO.ZATVARANJE_DATUM,
            dbo.IRA.IRABROJ,
            dbo.IRA.IDTIPIRA,
            dbo.IRA.IRAPARTNERIDPARTNER,
            IRA.IRAUKUPNO,
            IRA.IRAVALUTA,
            IRA.IRANAPOMENA,
            IRA.IRADATUM,
            IRA.IRAGODIDGODINE,
            IRA.IRADOKIDDOKUMENT,
            dbo.partner.nazivpartner,
            dbo.partner.partneroib,
            CASE ( SELECT   COUNT(GKSTAVKA.BROJDOKUMENTA)
                   FROM     dbo.GKSTAVKA
                   WHERE    GKSTAVKA.IDDOKUMENT = @IDDOKUMENT
                            AND GKSTAVKA.BROJDOKUMENTA = DBO.IRA.IRABROJ
                            AND GKSTAVKA.GKGODIDGODINE = IRA.IRAGODIDGODINE
                 )
              WHEN 0 THEN '---------'
              ELSE 'Kontirano'
            END AS Status,
            IRA.NEPODLEZE,
            IRA.IZVOZ,
            IRA.MEDJTRANS,
            IRA.TUZEMSTVO,
            IRA.NULA,
            IRA.OSTALO,
            IRA.OSN10,
            IRA.OSN22,
            IRA.OSN23,
            IRA.PDV10,
            IRA.PDV22,
            IRA.PDV23
    FROM    dbo.IRA
            LEFT OUTER JOIN dbo.VW_FIN_IRA_UKUPNO ON dbo.IRA.IRADOKIDDOKUMENT = dbo.VW_FIN_IRA_UKUPNO.IDDOKUMENT
                                                                AND dbo.IRA.IRABROJ = dbo.VW_FIN_IRA_UKUPNO.IRA_BROJ
                                                                AND dbo.IRA.IRAGODIDGODINE = dbo.VW_FIN_IRA_UKUPNO.GKGODIDGODINE
            INNER JOIN dbo.partner ON dbo.IRA.IRAPARTNERIDPARTNER = dbo.partner.idpartner
    WHERE   dbo.ira.IRADOKIDDOKUMENT = COALESCE(@iddokument,
                                                dbo.ira.IRADOKIDDOKUMENT)
            AND ( IRA.IRABROJ BETWEEN COALESCE(@od, IRA.IRABROJ)
                              AND     COALESCE(@doo, IRA.IRABROJ) )
            AND ( dbo.IRA.IRADATUM BETWEEN @dat1 AND @dat2 ) 
    RETURN



GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_IZVRSENJE_PLANA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_IZVRSENJE_PLANA]
GO


CREATE  PROCEDURE [dbo].[S_FIN_IZVRSENJE_PLANA]
(
  
    
    @ORGANIZAC VARCHAR(1000)
     
     
 )
AS
BEGIN
declare @brojac int


  CREATE TABLE #ukupna (
 DUGUJE decimal(18,2),
 potrazuje decimal(18,2),
 konto char(15)
)

  CREATE TABLE #PLANIRANOTEMP (
 IZNOS decimal(18,2),
 konto char(15)
)


SELECT @BROJAC =  4

WHILE   @brojac &gt; 0
BEGIN
insert #ukupna
select sum(duguje) as duguje, sum(potrazuje) as potrazuje,substring(GKSTAVKA.IDKONTO,1,@brojac) AS KONTO
from GKSTAVKA 
INNER JOIN  dbo.fnSplitter(@ORGANIZAC) fnSplitter_2 ON dbo.GKSTAVKA.IDORGJED = fnSplitter_2.ID 
WHERE LEN(substring(GKSTAVKA.IDKONTO,1,@BROJAC))  = @BROJAC 
group by substring(GKSTAVKA.IDKONTO,1,@brojac)

set @brojac = @brojac - 1
END

SELECT @BROJAC =  4

WHILE   @brojac &gt; 0
BEGIN
insert #PLANIRANOTEMP

select sum(PLANIRANIIZNOS) , substring(PLANORGKON.PLANKONTOIDKONTO,1,@brojac) AS KONTO
from PLANORGKON 
INNER JOIN  dbo.fnSplitter(@ORGANIZAC) fnSplitter_2 ON DBO.PLANORGKON.PLANOJIDORGJED = fnSplitter_2.ID 
WHERE LEN(substring(PLANORGKON.PLANKONTOIDKONTO,1,@BROJAC))  = @BROJAC  
group by substring(PLANORGKON.PLANKONTOIDKONTO,1,@brojac)
set @brojac = @brojac - 1
END
SELECT * FROM 
(
SELECT p.konto,SUM(P.PLANIRANO) as PLANIRANO,SUM(P.IZVRSENO) as IZVRSENO,
case when sum(p.planirano) = 0 then 0 else round(sum(p.izvrseno) / sum(p.planirano) * 100,2) end  as INDEKS
FROM
(
SELECT #UKUPNA.DUGUJE AS IZVRSENO,#UKUPNA.KONTO, 0 AS PLANIRANO 
FROM #UKUPNA 
WHERE #UKUPNA.KONTO LIKE '6%'
UNION ALL
SELECT 0,#PLANIRANOTEMP.KONTO,#PLANIRANOTEMP.IZNOS AS PLANIRANO FROM #PLANIRANOTEMP
WHERE #PLANIRANOTEMP.KONTO LIKE '6%'
) AS P
GROUP BY P.KONTO
UNION ALL
SELECT p.konto,SUM(P.PLANIRANO) as PLANIRANO,SUM(P.IZVRSENO) as IZVRSENO,
case when sum(p.planirano) = 0 then 0 else round(sum(p.izvrseno) / sum(p.planirano) * 100,2) end  as INDEKS
FROM
(
SELECT #UKUPNA.DUGUJE AS IZVRSENO,#UKUPNA.KONTO, 0 AS PLANIRANO 
FROM #UKUPNA 
WHERE #UKUPNA.KONTO LIKE '7%'
UNION ALL
SELECT 0,#PLANIRANOTEMP.KONTO,#PLANIRANOTEMP.IZNOS AS PLANIRANO FROM #PLANIRANOTEMP
WHERE #PLANIRANOTEMP.KONTO LIKE '7%'
) AS P
GROUP BY P.KONTO

UNION ALL
SELECT p.konto,SUM(P.PLANIRANO) as PLANIRANO,SUM(P.IZVRSENO) as IZVRSENO,
case when sum(p.planirano) = 0 then 0 else round(sum(p.izvrseno) / sum(p.planirano) * 100,2) end  as INDEKS
FROM
(
SELECT #UKUPNA.DUGUJE AS IZVRSENO,#UKUPNA.KONTO, 0 AS PLANIRANO 
FROM #UKUPNA 
WHERE #UKUPNA.KONTO LIKE '3%'
UNION ALL
SELECT 0,#PLANIRANOTEMP.KONTO,#PLANIRANOTEMP.IZNOS AS PLANIRANO FROM #PLANIRANOTEMP
WHERE #PLANIRANOTEMP.KONTO LIKE '3%'
) AS P
GROUP BY P.KONTO
UNION ALL
SELECT p.konto,SUM(P.PLANIRANO) as PLANIRANO,SUM(P.IZVRSENO) as IZVRSENO,
case when sum(p.planirano) = 0 then 0 else round(sum(p.izvrseno) / sum(p.planirano) * 100,2) end  as INDEKS
FROM
(
SELECT #UKUPNA.DUGUJE AS IZVRSENO,#UKUPNA.KONTO, 0 AS PLANIRANO 
FROM #UKUPNA 
WHERE #UKUPNA.KONTO LIKE '4%'
UNION ALL
SELECT 0,#PLANIRANOTEMP.KONTO,#PLANIRANOTEMP.IZNOS AS PLANIRANO FROM #PLANIRANOTEMP
WHERE #PLANIRANOTEMP.KONTO LIKE '4%'
) AS P
GROUP BY P.KONTO
) AS TEST
END

GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_KARTICE_PARTNERA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_KARTICE_PARTNERA]
GO



CREATE PROCEDURE [dbo].[S_FIN_KARTICE_PARTNERA]
    (
      @ORG INT = NULL,
      @MT INT = NULL,
      @DOK INT = NULL,
      @RAZDOBLJEOD DATETIME = NULL,
      @RAZDOBLJEDO DATETIME = NULL,
      @POCETNIKONTO VARCHAR(15) = NULL,
      @ZAVRSNIKONTO VARCHAR(15) = NULL,
      @IDAKTIVNOST INT = NULL,
      @IDPARTNER INT = NULL,
      @SORT VARCHAR(1) = 'S'
					
	
    )
AS 

	IF @ORG = -1  SET @ORG = NULL
	IF @MT = -1  SET @MT = NULL
	IF @DOK = -1  SET @DOK = NULL
	IF @POCETNIKONTO = ' '  SET @POCETNIKONTO = NULL
	IF @ZAVRSNIKONTO = ' '  SET @ZAVRSNIKONTO = NULL
	IF @IDAKTIVNOST = -1  SET @IDAKTIVNOST = NULL
	IF @IDPARTNER = -1  SET @IDPARTNER = NULL
	
	
	--- SORTIRANJE SIFRA
	IF @SORT = 'S' 
	BEGIN
		
    SELECT TOP 100 PERCENT
            dbo.GKSTAVKA.duguje,
            dbo.GKSTAVKA.POTRAZUJE,
            dbo.KONTO.IDKONTO AS KONTO,
            dbo.gkstavka.DATUMDOKUMENTA AS datumdvo,
            dbo.gkstavka.GKdatumvalute AS datumvalute,
            dbo.GKSTAVKA.DATUMDOKUMENTA AS DATUMDOK,
            dbo.DOKUMENT.NAZIVDOKUMENT AS SKRACENI,
            dbo.GKSTAVKA.BROJDOKUMENTA AS BROJDOK,
            dbo.GKSTAVKA.BROJSTAVKE,
            dbo.GKSTAVKA.OPIS AS opisknjizenja,
            dbo.GKSTAVKA.IDPARTNER AS IDPARTNER,
            dbo.KONTO.NAZIVKONTO AS NAZIVKONTO,
            dbo.GKSTAVKA.IDDOKUMENT AS IDDOKUMENT,
            dbo.PARTNER.NAZIVPARTNER,
            dbo.ORGJED.IDORGJED,
            dbo.MJESTOTROSKA.IDMJESTOTROSKA,
            dbo.PARTNER.MB,
            dbo.PARTNER.partnermjesto,
            dbo.PARTNER.partnerulica,
            dbo.gkstavka.originalnidokument,
            dbo.ORGJED.NAZIVORGJED AS NAZIVOJ,
			DBO.MJESTOTROSKA.NAZIVMJESTOTROSKA AS NAZIVMT
    FROM    dbo.GKSTAVKA
            INNER JOIN dbo.DOKUMENT ON dbo.GKSTAVKA.IDDOKUMENT = dbo.DOKUMENT.IDDOKUMENT
            INNER JOIN dbo.ORGJED ON dbo.GKSTAVKA.IDORGJED = dbo.ORGJED.IDORGJED
            INNER JOIN dbo.MJESTOTROSKA ON dbo.GKSTAVKA.IDMJESTOTROSKA = dbo.MJESTOTROSKA.IDMJESTOTROSKA
            INNER JOIN dbo.KONTO ON dbo.GKSTAVKA.IDKONTO = dbo.KONTO.IDKONTO
            INNER JOIN dbo.PARTNER ON dbo.GKSTAVKA.IDPARTNER = dbo.PARTNER.IDPARTNER
    WHERE   ( DBO.GKSTAVKA.IDORGJED = COALESCE(@ORG,
                                               DBO.GKSTAVKA.IDORGJED) )
            AND ( DBO.GKSTAVKA.IDMJESTOTROSKA = COALESCE(@MT,
                                                         DBO.GKSTAVKA.IDMJESTOTROSKA) )
            AND ( DBO.GKSTAVKA.IDdokument = COALESCE(@DOK,
                                                     DBO.GKSTAVKA.IDDOKUMENT) )
            AND ( GKSTAVKA.DATUMDOKUMENTA BETWEEN @RAZDOBLJEOD AND @RAZDOBLJEDO )
            AND ( konto.IDkonto BETWEEN COALESCE(@POCETNIKONTO, DBO.konto.idkonto)
                                AND     COALESCE(@ZAVRSNIKONTO, DBO.konto.idkonto) )
            AND ( KONTO.IDAKTIVNOST = COALESCE(@IDAKTIVNOST, KONTO.IDAKTIVNOST) )
            AND ( gkstavka.IDpartner = COALESCE(@IDPARTNER, gkstavka.idpartner) )
            AND ( gkstavka.statusgk = 1 )
    ORDER BY PARTNER.IDPARTNER,
            dbo.GKSTAVKA.datumdokumenta,
            dbo.DOKUMENT.IDDOKUMENT,
            dbo.GKSTAVKA.BROJDOKUMENTA,
            dbo.GKSTAVKA.BROJSTAVKE
    END
    
    
    --- SORTIRANJE ABECEDA
    IF @SORT = 'N'
    BEGIN
		 SELECT TOP 100 PERCENT
                dbo.GKSTAVKA.duguje,
                dbo.GKSTAVKA.POTRAZUJE,
                dbo.KONTO.IDKONTO AS KONTO,
                dbo.gkstavka.DATUMDOKUMENTA AS datumdvo,
                dbo.gkstavka.GKdatumvalute AS datumvalute,
                dbo.GKSTAVKA.DATUMDOKUMENTA AS DATUMDOK,
                dbo.DOKUMENT.NAZIVDOKUMENT AS SKRACENI,
                dbo.GKSTAVKA.BROJDOKUMENTA AS BROJDOK,
                dbo.GKSTAVKA.BROJSTAVKE,
                dbo.GKSTAVKA.OPIS AS opisknjizenja,
                dbo.GKSTAVKA.IDPARTNER AS IDPARTNER,
                dbo.KONTO.NAZIVKONTO AS NAZIVKONTO,
                dbo.GKSTAVKA.IDDOKUMENT AS IDDOKUMENT,
                dbo.PARTNER.NAZIVPARTNER,
                dbo.ORGJED.IDORGJED,
                dbo.MJESTOTROSKA.IDMJESTOTROSKA,
                dbo.PARTNER.MB,
                dbo.PARTNER.partnermjesto,
                dbo.PARTNER.partnerulica,
                dbo.gkstavka.originalnidokument,
               dbo.ORGJED.NAZIVORGJED AS NAZIVOJ,
				DBO.MJESTOTROSKA.NAZIVMJESTOTROSKA AS NAZIVMT
        FROM    dbo.GKSTAVKA
                INNER JOIN dbo.DOKUMENT ON dbo.GKSTAVKA.IDDOKUMENT = dbo.DOKUMENT.IDDOKUMENT
                INNER JOIN dbo.ORGJED ON dbo.GKSTAVKA.IDORGJED = dbo.ORGJED.IDORGJED
                INNER JOIN dbo.MJESTOTROSKA ON dbo.GKSTAVKA.IDMJESTOTROSKA = dbo.MJESTOTROSKA.IDMJESTOTROSKA
                INNER JOIN dbo.KONTO ON dbo.GKSTAVKA.IDKONTO = dbo.KONTO.IDKONTO
                INNER JOIN dbo.PARTNER ON dbo.GKSTAVKA.IDPARTNER = dbo.PARTNER.IDPARTNER
        WHERE   ( DBO.GKSTAVKA.IDORGJED = COALESCE(@ORG,
                                                   DBO.GKSTAVKA.IDORGJED) )
                AND ( DBO.GKSTAVKA.IDMJESTOTROSKA = COALESCE(@MT,
                                                             DBO.GKSTAVKA.IDMJESTOTROSKA) )
                AND ( DBO.GKSTAVKA.IDdokument = COALESCE(@DOK,
                                                         DBO.GKSTAVKA.IDDOKUMENT) )
                AND ( GKSTAVKA.DATUMDOKUMENTA BETWEEN @RAZDOBLJEOD AND @RAZDOBLJEDO )
                AND ( konto.IDkonto BETWEEN COALESCE(@POCETNIKONTO,
                                                     DBO.konto.idkonto)
                                    AND     COALESCE(@ZAVRSNIKONTO,
                                                     DBO.konto.idkonto) )
                AND ( KONTO.IDAKTIVNOST = COALESCE(@IDAKTIVNOST,
                                                   KONTO.IDAKTIVNOST) )
                AND ( gkstavka.IDpartner = COALESCE(@IDpartner,
                                                    gkstavka.idpartner) )
                AND ( gkstavka.statusgk = 1 )
        ORDER BY dbo.PARTNER.NAZIVPARTNER,
                dbo.GKSTAVKA.datumdokumenta,
                dbo.DOKUMENT.IDDOKUMENT,
                dbo.GKSTAVKA.BROJDOKUMENTA,
                dbo.GKSTAVKA.BROJSTAVKE
    END
RETURN

GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_KARTICEPARTNERA_SORT_NAZIV]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_KARTICEPARTNERA_SORT_NAZIV]
GO



CREATE PROCEDURE [dbo].[S_FIN_KARTICEPARTNERA_SORT_NAZIV]
    (
    @ORG INT = NULL,
      @MT INT = NULL,
      @DOK INT = NULL,
      @RAZDOBLJEOD DATETIME = NULL,
      @RAZDOBLJEDO DATETIME = NULL,
      @POCETNIKONTO VARCHAR(15) = NULL,
      @ZAVRSNIKONTO VARCHAR(15) = NULL,
      @IDAKTIVNOST INT = NULL,
      @IDPARTNER INT = NULL
					
	
    )
AS 
    BEGIN
    
    	IF @ORG = -1  SET @ORG = NULL
	IF @MT = -1  SET @MT = NULL
	IF @DOK = -1  SET @DOK = NULL
	IF @POCETNIKONTO = -1  SET @POCETNIKONTO = NULL
	IF @ZAVRSNIKONTO = -1  SET @ZAVRSNIKONTO = NULL
	IF @IDAKTIVNOST = -1  SET @IDAKTIVNOST = NULL
	IF @IDPARTNER = -1  SET @IDAKTIVNOST = NULL
	
	

        SELECT TOP 100 PERCENT
                dbo.GKSTAVKA.duguje,
                dbo.GKSTAVKA.POTRAZUJE,
                dbo.KONTO.IDKONTO AS KONTO,
                dbo.gkstavka.DATUMDOKUMENTA AS datumdvo,
                dbo.gkstavka.GKdatumvalute AS datumvalute,
                dbo.GKSTAVKA.DATUMDOKUMENTA AS DATUMDOK,
                dbo.DOKUMENT.NAZIVDOKUMENT AS SKRACENI,
                dbo.GKSTAVKA.BROJDOKUMENTA AS BROJDOK,
                dbo.GKSTAVKA.BROJSTAVKE,
                dbo.GKSTAVKA.OPIS AS opisknjizenja,
                dbo.GKSTAVKA.IDPARTNER AS IDPARTNER,
                dbo.KONTO.NAZIVKONTO AS naziv,
                dbo.GKSTAVKA.IDDOKUMENT AS ID_DOKUMENT,
                dbo.PARTNER.NAZIVPARTNER,
                dbo.ORGJED.IDORGJED,
                dbo.MJESTOTROSKA.IDMJESTOTROSKA,
                dbo.PARTNER.MB,
                dbo.PARTNER.partnermjesto,
                dbo.PARTNER.partnerulica,
                dbo.gkstavka.originalnidokument,
               dbo.ORGJED.NAZIVORGJED AS NAZIVOJ,
				DBO.MJESTOTROSKA.NAZIVMJESTOTROSKA AS NAZIVMT
        FROM    dbo.GKSTAVKA
                INNER JOIN dbo.DOKUMENT ON dbo.GKSTAVKA.IDDOKUMENT = dbo.DOKUMENT.IDDOKUMENT
                INNER JOIN dbo.ORGJED ON dbo.GKSTAVKA.IDORGJED = dbo.ORGJED.IDORGJED
                INNER JOIN dbo.MJESTOTROSKA ON dbo.GKSTAVKA.IDMJESTOTROSKA = dbo.MJESTOTROSKA.IDMJESTOTROSKA
                INNER JOIN dbo.KONTO ON dbo.GKSTAVKA.IDKONTO = dbo.KONTO.IDKONTO
                INNER JOIN dbo.PARTNER ON dbo.GKSTAVKA.IDPARTNER = dbo.PARTNER.IDPARTNER
        WHERE   ( DBO.GKSTAVKA.IDORGJED = COALESCE(@ORG,
                                                   DBO.GKSTAVKA.IDORGJED) )
                AND ( DBO.GKSTAVKA.IDMJESTOTROSKA = COALESCE(@MT,
                                                             DBO.GKSTAVKA.IDMJESTOTROSKA) )
                AND ( DBO.GKSTAVKA.IDdokument = COALESCE(@DOK,
                                                         DBO.GKSTAVKA.IDDOKUMENT) )
                AND ( GKSTAVKA.DATUMDOKUMENTA BETWEEN @RAZDOBLJEOD AND @RAZDOBLJEDO )
                AND ( konto.IDkonto BETWEEN COALESCE(@POCETNIKONTO,
                                                     DBO.konto.idkonto)
                                    AND     COALESCE(@ZAVRSNIKONTO,
                                                     DBO.konto.idkonto) )
                AND ( KONTO.IDAKTIVNOST = COALESCE(@IDAKTIVNOST,
                                                   KONTO.IDAKTIVNOST) )
                AND ( gkstavka.IDpartner = COALESCE(@IDpartner,
                                                    gkstavka.idpartner) )
                AND ( gkstavka.statusgk = 1 )
        ORDER BY dbo.PARTNER.NAZIVPARTNER,
                dbo.GKSTAVKA.datumdokumenta,
                dbo.DOKUMENT.IDDOKUMENT,
                dbo.GKSTAVKA.BROJDOKUMENTA,
                dbo.GKSTAVKA.BROJSTAVKE
    END


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_KONTO_KARTICE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_KONTO_KARTICE]
GO



	
CREATE PROCEDURE [dbo].[S_FIN_KONTO_KARTICE]
    (
      @ORG INT = NULL,
      @MT INT = NULL,
      @DOK INT = NULL,
      @RAZDOBLJEOD DATETIME = NULL,
      @RAZDOBLJEDO DATETIME = NULL,
      @POCETNIKONTO VARCHAR(15) = NULL,
      @ZAVRSNIKONTO VARCHAR(15) = NULL
					
	
    )
AS 

	IF @ORG = -1  SET @ORG = NULL
	IF @MT = -1  SET @MT = NULL
	IF @DOK = -1  SET @DOK = NULL
	IF @POCETNIKONTO = ' '  SET @POCETNIKONTO = NULL
	IF @ZAVRSNIKONTO = ' '  SET @ZAVRSNIKONTO = NULL
	
	
	
    SELECT TOP 100 PERCENT
            dbo.GKSTAVKA.duguje,
            dbo.GKSTAVKA.POTRAZUJE,
            dbo.KONTO.IDKONTO AS KONTO,
            dbo.GKSTAVKA.DATUMDOKUMENTA AS DATUMDOK,
            dbo.DOKUMENT.NAZIVDOKUMENT AS SKRACENI,
            dbo.GKSTAVKA.BROJDOKUMENTA AS BROJDOK,
            dbo.GKSTAVKA.BROJSTAVKE,
            dbo.GKSTAVKA.OPIS AS opisknjizenja,
            dbo.KONTO.NAZIVKONTO AS NAZIVKONTO,
            dbo.GKSTAVKA.IDDOKUMENT AS IDDOKUMENT,
            dbo.ORGJED.IDORGJED,
            dbo.MJESTOTROSKA.IDMJESTOTROSKA,
            Dbo.GKSTAVKA.ORIGINALNIDOKUMENT,
            dbo.ORGJED.NAZIVORGJED AS NAZIVOJ,
			DBO.MJESTOTROSKA.NAZIVMJESTOTROSKA AS NAZIVMT,
            DOKUMENT.PS
    FROM    dbo.GKSTAVKA
            INNER JOIN dbo.DOKUMENT ON dbo.GKSTAVKA.IDDOKUMENT = dbo.DOKUMENT.IDDOKUMENT
            INNER JOIN dbo.ORGJED ON dbo.GKSTAVKA.IDORGJED = dbo.ORGJED.IDORGJED
            INNER JOIN dbo.MJESTOTROSKA ON dbo.GKSTAVKA.IDMJESTOTROSKA = dbo.MJESTOTROSKA.IDMJESTOTROSKA
            INNER JOIN dbo.KONTO ON dbo.GKSTAVKA.IDKONTO = dbo.KONTO.IDKONTO
    WHERE   ( DBO.GKSTAVKA.IDORGJED = COALESCE(@ORG,
                                               DBO.GKSTAVKA.IDORGJED) )
            AND ( DBO.GKSTAVKA.IDMJESTOTROSKA = COALESCE(@MT,
                                                         DBO.GKSTAVKA.IDMJESTOTROSKA) )
            AND ( DBO.GKSTAVKA.IDdokument = COALESCE(@DOK,
                                                     DBO.GKSTAVKA.IDDOKUMENT) )
            AND ( GKSTAVKA.DATUMDOKUMENTA BETWEEN @RAZDOBLJEOD AND @RAZDOBLJEDO )
            AND ( konto.IDkonto BETWEEN COALESCE(@POCETNIKONTO, DBO.konto.idkonto)
                                AND     COALESCE(@ZAVRSNIKONTO, DBO.konto.idkonto) )
            AND ( gkstavka.statusgk = 1 )
    ORDER BY GKSTAVKA.datumdokumenta,
            dbo.DOKUMENT.NAZIVDOKUMENT,
            dbo.GKSTAVKA.BROJDOKUMENTA,
            GKSTAVKA.brojstavke
    RETURN


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_OTVORENE_STAVKE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_OTVORENE_STAVKE]
GO



CREATE PROCEDURE [dbo].[S_FIN_OTVORENE_STAVKE]
    (
      @ORG INT = NULL,
      @MT INT = NULL,
      @DOK INT = NULL,
      @RAZDOBLJEOD DATETIME = NULL,
      @RAZDOBLJEDO DATETIME = NULL,
      @POCETNIKONTO VARCHAR(15) = NULL,
      @ZAVRSNIKONTO VARCHAR(15) = NULL,
      @idaktivnost int = NULL,
      @idpartner INT = NULL,
      @dodatniuvjet VARCHAR(3) = NULL,
      @godina INT
      
	
    )
AS 
	
	IF @ORG = -1  SET @ORG = NULL
	IF @MT = -1  SET @MT = NULL
	IF @DOK = -1  SET @DOK = NULL
	IF @POCETNIKONTO = ' '  SET @POCETNIKONTO = NULL
	IF @ZAVRSNIKONTO = ' '  SET @ZAVRSNIKONTO = NULL
	IF @IDAKTIVNOST = -1  SET @IDAKTIVNOST = NULL
	IF @IDPARTNER = -1  SET @IDPARTNER = NULL
	
		
    IF @dodatniuvjet = 'DPS' 
        BEGIN

            EXEC dbo.S_FIN_OTVORENE_STAVKE_DP @godina, @idaktivnost, @DOK, @MT, @ORG, @idpartner, @POCETNIKONTO, @ZAVRSNIKONTO ; 
        END
    ELSE 
    IF @dodatniuvjet = 'DPN' 
        BEGIN
           
            EXEC dbo.S_FIN_OTVORENE_STAVKE_SORT_NAZIV_DP @godina, @idaktivnost, @DOK, @MT, @ORG, @idpartner, @POCETNIKONTO, @ZAVRSNIKONTO ; 
            
        END
    ELSE 
    
    
        IF @DODATNIUVJET = 'DMS'
            BEGIN
                EXEC dbo.S_FIN_OTVORENE_STAVKE_DM @godina, @idaktivnost, @DOK, @MT, @ORG, @idpartner, @POCETNIKONTO, @ZAVRSNIKONTO ; 
            END
        ELSE 
        IF @dodatniuvjet = 'DMN' 
        BEGIN
            EXEC dbo.S_FIN_OTVORENE_STAVKE_SORT_NAZIV_DM @godina, @idaktivnost, @DOK, @MT, @ORG, @idpartner, @POCETNIKONTO, @ZAVRSNIKONTO ; 
            
        END
        
        ELSE
            IF @DODATNIUVJET = 'PPS' 
                BEGIN
                    EXEC dbo.S_FIN_OTVORENE_STAVKE_PP @godina, @idaktivnost, @DOK, @MT, @ORG, @idpartner, @POCETNIKONTO, @ZAVRSNIKONTO ; 
                END
            ELSE 
            IF @DODATNIUVJET = 'PPN' 
                BEGIN
                    EXEC dbo.S_FIN_OTVORENE_STAVKE_SORT_NAZIV_PP @godina, @idaktivnost, @DOK, @MT, @ORG, @idpartner, @POCETNIKONTO, @ZAVRSNIKONTO ; 
                END
                
            ELSE 
                IF @DODATNIUVJET = 'PMS' 
                    BEGIN
                        EXEC dbo.S_FIN_OTVORENE_STAVKE_PM @godina, @idaktivnost, @DOK, @MT, @ORG, @idpartner, @POCETNIKONTO, @ZAVRSNIKONTO ; 
                END 
                ELSE
                IF @DODATNIUVJET = 'PMN' 
                    BEGIN
                        EXEC dbo.S_FIN_OTVORENE_STAVKE_SORT_NAZIV_PM @godina, @idaktivnost, @DOK, @MT, @ORG, @idpartner, @POCETNIKONTO, @ZAVRSNIKONTO ; 
                END 
                    
    IF @DODATNIUVJET = 'S'
        BEGIN
            EXEC dbo.S_FIN_OTVORENE_STAVKE_SVE @RAZDOBLJEOD, @RAZDOBLJEDO, @godina, @idaktivnost, @DOK, @MT, @ORG, @idpartner, @POCETNIKONTO, @ZAVRSNIKONTO ; 
        END
        ELSE
        IF @DODATNIUVJET = 'N'
        BEGIN
            
            EXEC dbo.S_FIN_OTVORENE_STAVKE_SORT_NAZIV_SVE @RAZDOBLJEOD, @RAZDOBLJEDO, @godina, @idaktivnost, @DOK, @MT, @ORG, @idpartner, @POCETNIKONTO, @ZAVRSNIKONTO ; 
        END


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_OTVORENE_STAVKE_DM]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_OTVORENE_STAVKE_DM]
GO

CREATE PROCEDURE [dbo].[S_FIN_OTVORENE_STAVKE_DM]
(
    @godina AS INT,
     @idaktivnost int = NULL,
    @DOK AS INT,
    @MT AS INT,
    @ORG AS INT,
    @idpartner AS INT,
    @POCETNIKONTO AS VARCHAR (15),
    @ZAVRSNIKONTO AS VARCHAR (15)
) AS
BEGIN
SELECT TOP 100 PERCENT
                        dbo.GKSTAVKA.duguje,
                        dbo.GKSTAVKA.POTRAZUJE,
                        dbo.KONTO.IDKONTO AS KONTO,
                        NULL AS datumdvo,
                        dbo.gkstavka.GKdatumvalute AS datumvalute,
                        dbo.GKSTAVKA.DATUMDOKUMENTA AS DATUMDOK,
                        dbo.DOKUMENT.NAZIVDOKUMENT AS SKRACENI,
                        dbo.GKSTAVKA.BROJDOKUMENTA AS BROJDOK,
                        dbo.GKSTAVKA.BROJSTAVKE,
                        dbo.GKSTAVKA.OPIS AS opisknjizenja,
                        dbo.GKSTAVKA.IDPARTNER AS IDPARTNER,
                        ABS(DBO.GKSTAVKA.DUGUJE - DBO.GKSTAVKA.POTRAZUJE)
                        - DBO.GKSTAVKA.ZATVORENIIZNOS AS OTVORENO,
                        dbo.KONTO.NAZIVKONTO AS naziv,
                        dbo.GKSTAVKA.IDDOKUMENT AS IDDOKUMENT,
                        dbo.PARTNER.NAZIVPARTNER,
                        dbo.ORGJED.IDORGJED,
                        dbo.MJESTOTROSKA.IDMJESTOTROSKA,
                        dbo.PARTNER.MB,
                        dbo.PARTNER.partnermjesto,
                        dbo.PARTNER.partnerulica,
                        dbo.gkstavka.idgkstavka,
                        dbo.gkstavka.originalnidokument,
						dbo.ORGJED.NAZIVORGJED AS NAZIVOJ,
						DBO.MJESTOTROSKA.NAZIVMJESTOTROSKA AS NAZIVMT
                FROM    dbo.GKSTAVKA
                        INNER JOIN dbo.DOKUMENT ON dbo.GKSTAVKA.IDDOKUMENT = dbo.DOKUMENT.IDDOKUMENT
                        INNER JOIN dbo.ORGJED ON dbo.GKSTAVKA.IDORGJED = dbo.ORGJED.IDORGJED
                        INNER JOIN dbo.MJESTOTROSKA ON dbo.GKSTAVKA.IDMJESTOTROSKA = dbo.MJESTOTROSKA.IDMJESTOTROSKA
                        INNER JOIN dbo.KONTO ON dbo.GKSTAVKA.IDKONTO = dbo.KONTO.IDKONTO
                        INNER JOIN dbo.PARTNER ON dbo.GKSTAVKA.IDPARTNER = dbo.PARTNER.IDPARTNER
                WHERE   GKSTAVKA.gkgodidgodine = @godina
                        AND ( DBO.GKSTAVKA.IDORGJED = COALESCE(@ORG, DBO.GKSTAVKA.IDORGJED) )
                        AND ( DBO.GKSTAVKA.IDMJESTOTROSKA = COALESCE(@MT, DBO.GKSTAVKA.IDMJESTOTROSKA) )
                        AND ( DBO.GKSTAVKA.IDdokument = COALESCE(@DOK, DBO.GKSTAVKA.IDDOKUMENT) )
                        AND ( konto.IDkonto BETWEEN COALESCE(@POCETNIKONTO,
                                                             DBO.konto.idkonto)
                                            AND     COALESCE(@ZAVRSNIKONTO,
                                                             DBO.konto.idkonto) )
                        AND ( KONTO.IDAKTIVNOST = COALESCE(@IDAKTIVNOST,
                                                           KONTO.IDAKTIVNOST) )
                        AND ( gkstavka.IDpartner = COALESCE(@IDpartner,
                                                            gkstavka.idpartner) )
                        AND ABS(DBO.GKSTAVKA.DUGUJE - DBO.GKSTAVKA.POTRAZUJE)
                        - DBO.GKSTAVKA.ZATVORENIIZNOS &gt; 0
                        AND ( GKSTAVKA.duguje &lt; 0 )
                ORDER BY PARTNER.IDPARTNER,
                        dbo.GKSTAVKA.datumdokumenta,
                        dbo.DOKUMENT.IDDOKUMENT,
                        dbo.GKSTAVKA.BROJDOKUMENTA,
                        dbo.GKSTAVKA.BROJSTAVKE
END


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_OTVORENE_STAVKE_DP]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_OTVORENE_STAVKE_DP]
GO

CREATE PROCEDURE [dbo].[S_FIN_OTVORENE_STAVKE_DP]
(
    @godina AS INT,
     @idaktivnost int = NULL,
    @DOK AS INT,
    @MT AS INT,
    @ORG AS INT,
    @idpartner AS INT,
    @POCETNIKONTO AS VARCHAR (15),
    @ZAVRSNIKONTO AS VARCHAR (15)
) AS
BEGIN
SELECT TOP 100 PERCENT
                    dbo.GKSTAVKA.duguje,
                    dbo.GKSTAVKA.POTRAZUJE,
                    dbo.KONTO.IDKONTO AS KONTO,
                    NULL AS datumdvo,
                    dbo.gkstavka.GKdatumvalute AS datumvalute,
                    dbo.GKSTAVKA.DATUMDOKUMENTA AS DATUMDOK,
                    dbo.DOKUMENT.NAZIVDOKUMENT AS SKRACENI,
                    dbo.GKSTAVKA.BROJDOKUMENTA AS BROJDOK,
                    dbo.GKSTAVKA.BROJSTAVKE,
                    dbo.GKSTAVKA.OPIS AS opisknjizenja,
                    dbo.GKSTAVKA.IDPARTNER AS IDPARTNER,
                    ABS(DBO.GKSTAVKA.DUGUJE - DBO.GKSTAVKA.POTRAZUJE)
                    - DBO.GKSTAVKA.ZATVORENIIZNOS AS OTVORENO,
                    dbo.KONTO.NAZIVKONTO AS naziv,
                    dbo.GKSTAVKA.IDDOKUMENT AS IDDOKUMENT,
                    dbo.PARTNER.NAZIVPARTNER,
                    dbo.ORGJED.IDORGJED,
                    dbo.MJESTOTROSKA.IDMJESTOTROSKA,
                    dbo.PARTNER.MB,
                    dbo.PARTNER.partnermjesto,
                    dbo.PARTNER.partnerulica,
                    dbo.gkstavka.idgkstavka,
                    dbo.gkstavka.originalnidokument,
					dbo.ORGJED.NAZIVORGJED AS NAZIVOJ,
					DBO.MJESTOTROSKA.NAZIVMJESTOTROSKA AS NAZIVMT
            FROM    dbo.GKSTAVKA
                    INNER JOIN dbo.DOKUMENT ON dbo.GKSTAVKA.IDDOKUMENT = dbo.DOKUMENT.IDDOKUMENT
                    INNER JOIN dbo.ORGJED ON dbo.GKSTAVKA.IDORGJED = dbo.ORGJED.IDORGJED
                    INNER JOIN dbo.MJESTOTROSKA ON dbo.GKSTAVKA.IDMJESTOTROSKA = dbo.MJESTOTROSKA.IDMJESTOTROSKA
                    INNER JOIN dbo.KONTO ON dbo.GKSTAVKA.IDKONTO = dbo.KONTO.IDKONTO
                    INNER JOIN dbo.PARTNER ON dbo.GKSTAVKA.IDPARTNER = dbo.PARTNER.IDPARTNER
            WHERE   GKSTAVKA.gkgodidgodine = @godina
                    AND ( DBO.GKSTAVKA.IDORGJED = COALESCE(@ORG,
                                                           DBO.GKSTAVKA.IDORGJED) )
                    AND ( DBO.GKSTAVKA.IDMJESTOTROSKA = COALESCE(@MT, DBO.GKSTAVKA.IDMJESTOTROSKA) )
                    AND ( DBO.GKSTAVKA.IDdokument = COALESCE(@DOK,
                                                             DBO.GKSTAVKA.IDDOKUMENT) )
                    AND ( konto.IDkonto BETWEEN COALESCE(@POCETNIKONTO,
                                                         DBO.konto.idkonto)
                                        AND     COALESCE(@ZAVRSNIKONTO,
                                                         DBO.konto.idkonto) )
                    AND ( KONTO.IDAKTIVNOST = COALESCE(@IDAKTIVNOST,
                                                       KONTO.IDAKTIVNOST) )
                    AND ( gkstavka.IDpartner = COALESCE(@IDpartner,
                                                        gkstavka.idpartner) )
                    AND ABS(DBO.GKSTAVKA.DUGUJE - DBO.GKSTAVKA.POTRAZUJE)
                    - DBO.GKSTAVKA.ZATVORENIIZNOS &gt; 0
                    AND ( DBO.GKSTAVKA.DUGUJE &gt; 0 )
            ORDER BY PARTNER.IDPARTNER,
                    dbo.GKSTAVKA.datumdokumenta,
                    dbo.DOKUMENT.IDDOKUMENT,
                    dbo.GKSTAVKA.BROJDOKUMENTA,
                    dbo.GKSTAVKA.BROJSTAVKE
END


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_OTVORENE_STAVKE_PM]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_OTVORENE_STAVKE_PM]
GO

CREATE PROCEDURE [dbo].[S_FIN_OTVORENE_STAVKE_PM]
(
    @godina AS INT,
     @idaktivnost int = NULL,
    @DOK AS INT,
    @MT AS INT,
    @ORG AS INT,
    @idpartner AS INT,
    @POCETNIKONTO AS VARCHAR (15),
    @ZAVRSNIKONTO AS VARCHAR (15)
) AS
BEGIN
SELECT TOP 100 PERCENT
                                dbo.GKSTAVKA.duguje,
                                dbo.GKSTAVKA.POTRAZUJE,
                                dbo.KONTO.IDKONTO AS KONTO,
                                NULL AS datumdvo,
                                dbo.gkstavka.GKdatumvalute AS datumvalute,
                                dbo.GKSTAVKA.DATUMDOKUMENTA AS DATUMDOK,
                                dbo.DOKUMENT.NAZIVDOKUMENT AS SKRACENI,
                                dbo.GKSTAVKA.BROJDOKUMENTA AS BROJDOK,
                                dbo.GKSTAVKA.BROJSTAVKE,
                                dbo.GKSTAVKA.OPIS AS opisknjizenja,
                                dbo.GKSTAVKA.IDPARTNER AS IDPARTNER,
                                ABS(DBO.GKSTAVKA.DUGUJE
                                    - DBO.GKSTAVKA.POTRAZUJE)
                                - DBO.GKSTAVKA.ZATVORENIIZNOS AS OTVORENO,
                                dbo.KONTO.NAZIVKONTO AS naziv,
                                dbo.GKSTAVKA.IDDOKUMENT AS IDDOKUMENT,
                                dbo.PARTNER.NAZIVPARTNER,
                                dbo.ORGJED.IDORGJED,
                                dbo.MJESTOTROSKA.IDMJESTOTROSKA,
                                dbo.PARTNER.MB,
                                dbo.PARTNER.partnermjesto,
                                dbo.PARTNER.partnerulica,
                                dbo.gkstavka.idgkstavka,
                                dbo.gkstavka.originalnidokument,
                                dbo.ORGJED.NAZIVORGJED AS NAZIVOJ,
								DBO.MJESTOTROSKA.NAZIVMJESTOTROSKA AS NAZIVMT
                        FROM    dbo.GKSTAVKA
                                INNER JOIN dbo.DOKUMENT ON dbo.GKSTAVKA.IDDOKUMENT = dbo.DOKUMENT.IDDOKUMENT
                                INNER JOIN dbo.ORGJED ON dbo.GKSTAVKA.IDORGJED = dbo.ORGJED.IDORGJED
                                INNER JOIN dbo.MJESTOTROSKA ON dbo.GKSTAVKA.IDMJESTOTROSKA = dbo.MJESTOTROSKA.IDMJESTOTROSKA
                                INNER JOIN dbo.KONTO ON dbo.GKSTAVKA.IDKONTO = dbo.KONTO.IDKONTO
                                INNER JOIN dbo.PARTNER ON dbo.GKSTAVKA.IDPARTNER = dbo.PARTNER.IDPARTNER
                        WHERE   GKSTAVKA.gkgodidgodine = @godina
                                AND ( DBO.GKSTAVKA.IDORGJED = COALESCE(@ORG, DBO.GKSTAVKA.IDORGJED) )
                                AND ( DBO.GKSTAVKA.IDMJESTOTROSKA = COALESCE(@MT, DBO.GKSTAVKA.IDMJESTOTROSKA) )
                                AND ( DBO.GKSTAVKA.IDdokument = COALESCE(@DOK, DBO.GKSTAVKA.IDDOKUMENT) )
                                AND ( konto.IDkonto BETWEEN COALESCE(@POCETNIKONTO, DBO.konto.idkonto)
                                                    AND     COALESCE(@ZAVRSNIKONTO, DBO.konto.idkonto) )
                                AND ( KONTO.IDAKTIVNOST = COALESCE(@IDAKTIVNOST, KONTO.IDAKTIVNOST) )
                                AND ( gkstavka.IDpartner = COALESCE(@IDpartner, gkstavka.idpartner) )
                                AND ABS(DBO.GKSTAVKA.DUGUJE
                                        - DBO.GKSTAVKA.POTRAZUJE)
                                - DBO.GKSTAVKA.ZATVORENIIZNOS &gt; 0
                                AND ( GKSTAVKA.POTRAZUJE &lt; 0 )
                        ORDER BY PARTNER.IDPARTNER,
                                dbo.GKSTAVKA.datumdokumenta,
                                dbo.DOKUMENT.IDDOKUMENT,
                                dbo.GKSTAVKA.BROJDOKUMENTA,
                                dbo.GKSTAVKA.BROJSTAVKE
END


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_OTVORENE_STAVKE_PP]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_OTVORENE_STAVKE_PP]
GO

CREATE PROCEDURE [dbo].[S_FIN_OTVORENE_STAVKE_PP]
(
    @godina AS INT,
     @idaktivnost int = NULL,
    @DOK AS INT,
    @MT AS INT,
    @ORG AS INT,
    @idpartner AS INT,
    @POCETNIKONTO AS VARCHAR (15),
    @ZAVRSNIKONTO AS VARCHAR (15)
) AS
BEGIN
SELECT TOP 100 PERCENT
                            dbo.GKSTAVKA.duguje,
                            dbo.GKSTAVKA.POTRAZUJE,
                            dbo.KONTO.IDKONTO AS KONTO,
                            NULL AS datumdvo,
                            dbo.gkstavka.GKdatumvalute AS datumvalute,
                            dbo.GKSTAVKA.DATUMDOKUMENTA AS DATUMDOK,
                            dbo.DOKUMENT.NAZIVDOKUMENT AS SKRACENI,
                            dbo.GKSTAVKA.BROJDOKUMENTA AS BROJDOK,
                            dbo.GKSTAVKA.BROJSTAVKE,
                            dbo.GKSTAVKA.OPIS AS opisknjizenja,
                            dbo.GKSTAVKA.IDPARTNER AS IDPARTNER,
                            ABS(DBO.GKSTAVKA.DUGUJE - DBO.GKSTAVKA.POTRAZUJE)
                            - DBO.GKSTAVKA.ZATVORENIIZNOS AS OTVORENO,
                            dbo.KONTO.NAZIVKONTO AS naziv,
                            dbo.GKSTAVKA.IDDOKUMENT AS IDDOKUMENT,
                            dbo.PARTNER.NAZIVPARTNER,
                            dbo.ORGJED.IDORGJED,
                            dbo.MJESTOTROSKA.IDMJESTOTROSKA,
                            dbo.PARTNER.MB,
                            dbo.PARTNER.partnermjesto,
                            dbo.PARTNER.partnerulica,
                            dbo.gkstavka.idgkstavka,
                            dbo.gkstavka.originalnidokument,
							dbo.ORGJED.NAZIVORGJED AS NAZIVOJ,
							DBO.MJESTOTROSKA.NAZIVMJESTOTROSKA AS NAZIVMT
                    FROM    dbo.GKSTAVKA
                            INNER JOIN dbo.DOKUMENT ON dbo.GKSTAVKA.IDDOKUMENT = dbo.DOKUMENT.IDDOKUMENT
                            INNER JOIN dbo.ORGJED ON dbo.GKSTAVKA.IDORGJED = dbo.ORGJED.IDORGJED
                            INNER JOIN dbo.MJESTOTROSKA ON dbo.GKSTAVKA.IDMJESTOTROSKA = dbo.MJESTOTROSKA.IDMJESTOTROSKA
                            INNER JOIN dbo.KONTO ON dbo.GKSTAVKA.IDKONTO = dbo.KONTO.IDKONTO
                            INNER JOIN dbo.PARTNER ON dbo.GKSTAVKA.IDPARTNER = dbo.PARTNER.IDPARTNER
                    WHERE   GKSTAVKA.gkgodidgodine = @godina
                            AND ( DBO.GKSTAVKA.IDORGJED = COALESCE(@ORG, DBO.GKSTAVKA.IDORGJED) )
                            AND ( DBO.GKSTAVKA.IDMJESTOTROSKA = COALESCE(@MT, DBO.GKSTAVKA.IDMJESTOTROSKA) )
                            AND ( DBO.GKSTAVKA.IDdokument = COALESCE(@DOK, DBO.GKSTAVKA.IDDOKUMENT) )
                            AND ( konto.IDkonto BETWEEN COALESCE(@POCETNIKONTO, DBO.konto.idkonto)
                                                AND     COALESCE(@ZAVRSNIKONTO, DBO.konto.idkonto) )
                            AND ( KONTO.IDAKTIVNOST = COALESCE(@IDAKTIVNOST, KONTO.IDAKTIVNOST) )
                            AND ( gkstavka.IDpartner = COALESCE(@IDpartner, gkstavka.idpartner) )
                            AND ABS(DBO.GKSTAVKA.DUGUJE
                                    - DBO.GKSTAVKA.POTRAZUJE)
                            - DBO.GKSTAVKA.ZATVORENIIZNOS &gt; 0
                            AND ( GKSTAVKA.POTRAZUJE &gt; 0 )
                    ORDER BY PARTNER.IDPARTNER,
                            dbo.GKSTAVKA.datumdokumenta,
                            dbo.DOKUMENT.IDDOKUMENT,
                            dbo.GKSTAVKA.BROJDOKUMENTA,
                            dbo.GKSTAVKA.BROJSTAVKE
END


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_OTVORENE_STAVKE_SORT_NAZIV]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_OTVORENE_STAVKE_SORT_NAZIV]
GO



CREATE PROCEDURE [dbo].[S_FIN_OTVORENE_STAVKE_SORT_NAZIV]
    (
      @ORG INT = NULL,
      @MT INT = NULL,
      @DOK INT = NULL,
      @RAZDOBLJEOD DATETIME = NULL,
      @RAZDOBLJEDO DATETIME = NULL,
      @POCETNIKONTO VARCHAR(15) = NULL,
      @ZAVRSNIKONTO VARCHAR(15) = NULL,
      @idaktivnost VARCHAR(1) = NULL,
      @idpartner INT = NULL,
      @dodatniuvjet VARCHAR(2) = NULL,
      @godina INT
			
	
    )
AS 
    IF @dodatniuvjet = 'DP' 
        BEGIN

            EXEC dbo.S_FIN_OTVORENE_STAVKE_SORT_NAZIV_DP @godina, @idaktivnost, @DOK, @MT, @ORG, @idpartner, @POCETNIKONTO, @ZAVRSNIKONTO ; 
        END
    ELSE 
        IF @DODATNIUVJET = 'DM' 
            BEGIN


                EXEC dbo.S_FIN_OTVORENE_STAVKE_SORT_NAZIV_DM @godina, @idaktivnost, @DOK, @MT, @ORG, @idpartner, @POCETNIKONTO, @ZAVRSNIKONTO ; 
            END
        ELSE 
            IF @DODATNIUVJET = 'PP' 
                BEGIN
                    EXEC dbo.S_FIN_OTVORENE_STAVKE_SORT_NAZIV_PP @godina, @idaktivnost, @DOK, @MT, @ORG, @idpartner, @POCETNIKONTO, @ZAVRSNIKONTO ; 
                END
            ELSE 
                IF @DODATNIUVJET = 'PM' 
                    BEGIN
                        EXEC dbo.S_FIN_OTVORENE_STAVKE_SORT_NAZIV_PM @godina, @idaktivnost, @DOK, @MT, @ORG, @idpartner, @POCETNIKONTO, @ZAVRSNIKONTO ; 
                    END 
    IF @DODATNIUVJET IS NULL 
        BEGIN
            EXEC dbo.S_FIN_OTVORENE_STAVKE_SORT_NAZIV_SVE @RAZDOBLJEOD, @RAZDOBLJEDO, @godina, @idaktivnost, @DOK, @MT, @ORG, @idpartner, @POCETNIKONTO, @ZAVRSNIKONTO ; 
        END

GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_OTVORENE_STAVKE_SORT_NAZIV_DM]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_OTVORENE_STAVKE_SORT_NAZIV_DM]
GO

CREATE PROCEDURE [dbo].[S_FIN_OTVORENE_STAVKE_SORT_NAZIV_DM]
(
    @godina AS INT,
     @idaktivnost int = NULL,
    @DOK AS INT,
    @MT AS INT,
    @ORG AS INT,
    @idpartner AS INT,
    @POCETNIKONTO AS VARCHAR (15),
    @ZAVRSNIKONTO AS VARCHAR (15)
) AS
BEGIN
SELECT TOP 100 PERCENT
                        dbo.GKSTAVKA.duguje,
                        dbo.GKSTAVKA.POTRAZUJE,
                        dbo.KONTO.IDKONTO AS KONTO,
                        NULL AS datumdvo,
                        dbo.gkstavka.GKdatumvalute AS datumvalute,
                        dbo.GKSTAVKA.DATUMDOKUMENTA AS DATUMDOK,
                        dbo.DOKUMENT.NAZIVDOKUMENT AS SKRACENI,
                        dbo.GKSTAVKA.BROJDOKUMENTA AS BROJDOK,
                        dbo.GKSTAVKA.BROJSTAVKE,
                        dbo.GKSTAVKA.OPIS AS opisknjizenja,
                        dbo.GKSTAVKA.IDPARTNER AS IDPARTNER,
                        ABS(DBO.GKSTAVKA.DUGUJE - DBO.GKSTAVKA.POTRAZUJE)
                        - DBO.GKSTAVKA.ZATVORENIIZNOS AS OTVORENO,
                        dbo.KONTO.NAZIVKONTO AS naziv,
                        dbo.GKSTAVKA.IDDOKUMENT AS IDDOKUMENT,
                        dbo.PARTNER.NAZIVPARTNER,
                        dbo.ORGJED.IDORGJED,
                        dbo.MJESTOTROSKA.IDMJESTOTROSKA,
                        dbo.PARTNER.MB,
                        dbo.PARTNER.partnermjesto,
                        dbo.PARTNER.partnerulica,
                        dbo.gkstavka.idgkstavka,
                        dbo.gkstavka.originalnidokument,
						dbo.ORGJED.NAZIVORGJED AS NAZIVOJ,
						DBO.MJESTOTROSKA.NAZIVMJESTOTROSKA AS NAZIVMT
                FROM    dbo.GKSTAVKA
                        INNER JOIN dbo.DOKUMENT ON dbo.GKSTAVKA.IDDOKUMENT = dbo.DOKUMENT.IDDOKUMENT
                        INNER JOIN dbo.ORGJED ON dbo.GKSTAVKA.IDORGJED = dbo.ORGJED.IDORGJED
                        INNER JOIN dbo.MJESTOTROSKA ON dbo.GKSTAVKA.IDMJESTOTROSKA = dbo.MJESTOTROSKA.IDMJESTOTROSKA
                        INNER JOIN dbo.KONTO ON dbo.GKSTAVKA.IDKONTO = dbo.KONTO.IDKONTO
                        INNER JOIN dbo.PARTNER ON dbo.GKSTAVKA.IDPARTNER = dbo.PARTNER.IDPARTNER
                WHERE   GKSTAVKA.gkgodidgodine = @godina
                        AND ( DBO.GKSTAVKA.IDORGJED = COALESCE(@ORG, DBO.GKSTAVKA.IDORGJED) )
                        AND ( DBO.GKSTAVKA.IDMJESTOTROSKA = COALESCE(@MT, DBO.GKSTAVKA.IDMJESTOTROSKA) )
                        AND ( DBO.GKSTAVKA.IDdokument = COALESCE(@DOK, DBO.GKSTAVKA.IDDOKUMENT) )
                        AND ( konto.IDkonto BETWEEN COALESCE(@POCETNIKONTO,
                                                             DBO.konto.idkonto)
                                            AND     COALESCE(@ZAVRSNIKONTO,
                                                             DBO.konto.idkonto) )
                        AND ( KONTO.IDAKTIVNOST = COALESCE(@IDAKTIVNOST,
                                                           KONTO.IDAKTIVNOST) )
                        AND ( gkstavka.IDpartner = COALESCE(@IDpartner,
                                                            gkstavka.idpartner) )
                        AND ABS(DBO.GKSTAVKA.DUGUJE - DBO.GKSTAVKA.POTRAZUJE)
                        - DBO.GKSTAVKA.ZATVORENIIZNOS &gt; 0
                        AND ( GKSTAVKA.duguje &lt; 0 )
                ORDER BY PARTNER.NAZIVPARTNER,
                        dbo.GKSTAVKA.datumdokumenta,
                        dbo.DOKUMENT.IDDOKUMENT,
                        dbo.GKSTAVKA.BROJDOKUMENTA,
                        dbo.GKSTAVKA.BROJSTAVKE
END

GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_OTVORENE_STAVKE_SORT_NAZIV_DP]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_OTVORENE_STAVKE_SORT_NAZIV_DP]
GO

CREATE PROCEDURE [dbo].[S_FIN_OTVORENE_STAVKE_SORT_NAZIV_DP]
(
    @godina AS INT,
     @idaktivnost int = NULL,
    @DOK AS INT,
    @MT AS INT,
    @ORG AS INT,
    @idpartner AS INT,
    @POCETNIKONTO AS VARCHAR (15),
    @ZAVRSNIKONTO AS VARCHAR (15)
) AS
BEGIN
SELECT TOP 100 PERCENT
                    dbo.GKSTAVKA.duguje,
                    dbo.GKSTAVKA.POTRAZUJE,
                    dbo.KONTO.IDKONTO AS KONTO,
                    NULL AS datumdvo,
                    dbo.gkstavka.GKdatumvalute AS datumvalute,
                    dbo.GKSTAVKA.DATUMDOKUMENTA AS DATUMDOK,
                    dbo.DOKUMENT.NAZIVDOKUMENT AS SKRACENI,
                    dbo.GKSTAVKA.BROJDOKUMENTA AS BROJDOK,
                    dbo.GKSTAVKA.BROJSTAVKE,
                    dbo.GKSTAVKA.OPIS AS opisknjizenja,
                    dbo.GKSTAVKA.IDPARTNER AS IDPARTNER,
                    ABS(DBO.GKSTAVKA.DUGUJE - DBO.GKSTAVKA.POTRAZUJE)
                    - DBO.GKSTAVKA.ZATVORENIIZNOS AS OTVORENO,
                    dbo.KONTO.NAZIVKONTO AS naziv,
                    dbo.GKSTAVKA.IDDOKUMENT AS IDDOKUMENT,
                    dbo.PARTNER.NAZIVPARTNER,
                    dbo.ORGJED.IDORGJED,
                    dbo.MJESTOTROSKA.IDMJESTOTROSKA,
                    dbo.PARTNER.MB,
                    dbo.PARTNER.partnermjesto,
                    dbo.PARTNER.partnerulica,
                    dbo.gkstavka.idgkstavka,
                    dbo.gkstavka.originalnidokument,
                    dbo.ORGJED.NAZIVORGJED AS NAZIVOJ,
					DBO.MJESTOTROSKA.NAZIVMJESTOTROSKA AS NAZIVMT
            FROM    dbo.GKSTAVKA
                    INNER JOIN dbo.DOKUMENT ON dbo.GKSTAVKA.IDDOKUMENT = dbo.DOKUMENT.IDDOKUMENT
                    INNER JOIN dbo.ORGJED ON dbo.GKSTAVKA.IDORGJED = dbo.ORGJED.IDORGJED
                    INNER JOIN dbo.MJESTOTROSKA ON dbo.GKSTAVKA.IDMJESTOTROSKA = dbo.MJESTOTROSKA.IDMJESTOTROSKA
                    INNER JOIN dbo.KONTO ON dbo.GKSTAVKA.IDKONTO = dbo.KONTO.IDKONTO
                    INNER JOIN dbo.PARTNER ON dbo.GKSTAVKA.IDPARTNER = dbo.PARTNER.IDPARTNER
            WHERE   GKSTAVKA.gkgodidgodine = @godina
                    AND ( DBO.GKSTAVKA.IDORGJED = COALESCE(@ORG,
                                                           DBO.GKSTAVKA.IDORGJED) )
                    AND ( DBO.GKSTAVKA.IDMJESTOTROSKA = COALESCE(@MT, DBO.GKSTAVKA.IDMJESTOTROSKA) )
                    AND ( DBO.GKSTAVKA.IDdokument = COALESCE(@DOK,
                                                             DBO.GKSTAVKA.IDDOKUMENT) )
                    AND ( konto.IDkonto BETWEEN COALESCE(@POCETNIKONTO,
                                                         DBO.konto.idkonto)
                                        AND     COALESCE(@ZAVRSNIKONTO,
                                                         DBO.konto.idkonto) )
                    AND ( KONTO.IDAKTIVNOST = COALESCE(@IDAKTIVNOST,
                                                       KONTO.IDAKTIVNOST) )
                    AND ( gkstavka.IDpartner = COALESCE(@IDpartner,
                                                        gkstavka.idpartner) )
                    AND ABS(DBO.GKSTAVKA.DUGUJE - DBO.GKSTAVKA.POTRAZUJE)
                    - DBO.GKSTAVKA.ZATVORENIIZNOS &gt; 0
                    AND ( DBO.GKSTAVKA.DUGUJE &gt; 0 )
            ORDER BY PARTNER.NAZIVPARTNER,
                    dbo.GKSTAVKA.datumdokumenta,
                    dbo.DOKUMENT.IDDOKUMENT,
                    dbo.GKSTAVKA.BROJDOKUMENTA,
                    dbo.GKSTAVKA.BROJSTAVKE
END


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_OTVORENE_STAVKE_SORT_NAZIV_PM]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_OTVORENE_STAVKE_SORT_NAZIV_PM]
GO

CREATE PROCEDURE [dbo].[S_FIN_OTVORENE_STAVKE_SORT_NAZIV_PM]
(
    @godina AS INT,
     @idaktivnost int = NULL,
    @DOK AS INT,
    @MT AS INT,
    @ORG AS INT,
    @idpartner AS INT,
    @POCETNIKONTO AS VARCHAR (15),
    @ZAVRSNIKONTO AS VARCHAR (15)
) AS
BEGIN
SELECT TOP 100 PERCENT
                                dbo.GKSTAVKA.duguje,
                                dbo.GKSTAVKA.POTRAZUJE,
                                dbo.KONTO.IDKONTO AS KONTO,
                                NULL AS datumdvo,
                                dbo.gkstavka.GKdatumvalute AS datumvalute,
                                dbo.GKSTAVKA.DATUMDOKUMENTA AS DATUMDOK,
                                dbo.DOKUMENT.NAZIVDOKUMENT AS SKRACENI,
                                dbo.GKSTAVKA.BROJDOKUMENTA AS BROJDOK,
                                dbo.GKSTAVKA.BROJSTAVKE,
                                dbo.GKSTAVKA.OPIS AS opisknjizenja,
                                dbo.GKSTAVKA.IDPARTNER AS IDPARTNER,
                                ABS(DBO.GKSTAVKA.DUGUJE
                                    - DBO.GKSTAVKA.POTRAZUJE)
                                - DBO.GKSTAVKA.ZATVORENIIZNOS AS OTVORENO,
                                dbo.KONTO.NAZIVKONTO AS naziv,
                                dbo.GKSTAVKA.IDDOKUMENT AS IDDOKUMENT,
                                dbo.PARTNER.NAZIVPARTNER,
                                dbo.ORGJED.IDORGJED,
                                dbo.MJESTOTROSKA.IDMJESTOTROSKA,
                                dbo.PARTNER.MB,
                                dbo.PARTNER.partnermjesto,
                                dbo.PARTNER.partnerulica,
                                dbo.gkstavka.idgkstavka,
                                dbo.gkstavka.originalnidokument,
								dbo.ORGJED.NAZIVORGJED AS NAZIVOJ,
								DBO.MJESTOTROSKA.NAZIVMJESTOTROSKA AS NAZIVMT
                        FROM    dbo.GKSTAVKA
                                INNER JOIN dbo.DOKUMENT ON dbo.GKSTAVKA.IDDOKUMENT = dbo.DOKUMENT.IDDOKUMENT
                                INNER JOIN dbo.ORGJED ON dbo.GKSTAVKA.IDORGJED = dbo.ORGJED.IDORGJED
                                INNER JOIN dbo.MJESTOTROSKA ON dbo.GKSTAVKA.IDMJESTOTROSKA = dbo.MJESTOTROSKA.IDMJESTOTROSKA
                                INNER JOIN dbo.KONTO ON dbo.GKSTAVKA.IDKONTO = dbo.KONTO.IDKONTO
                                INNER JOIN dbo.PARTNER ON dbo.GKSTAVKA.IDPARTNER = dbo.PARTNER.IDPARTNER
                        WHERE   GKSTAVKA.gkgodidgodine = @godina
                                AND ( DBO.GKSTAVKA.IDORGJED = COALESCE(@ORG, DBO.GKSTAVKA.IDORGJED) )
                                AND ( DBO.GKSTAVKA.IDMJESTOTROSKA = COALESCE(@MT, DBO.GKSTAVKA.IDMJESTOTROSKA) )
                                AND ( DBO.GKSTAVKA.IDdokument = COALESCE(@DOK, DBO.GKSTAVKA.IDDOKUMENT) )
                                AND ( konto.IDkonto BETWEEN COALESCE(@POCETNIKONTO, DBO.konto.idkonto)
                                                    AND     COALESCE(@ZAVRSNIKONTO, DBO.konto.idkonto) )
                                AND ( KONTO.IDAKTIVNOST = COALESCE(@IDAKTIVNOST, KONTO.IDAKTIVNOST) )
                                AND ( gkstavka.IDpartner = COALESCE(@IDpartner, gkstavka.idpartner) )
                                AND ABS(DBO.GKSTAVKA.DUGUJE
                                        - DBO.GKSTAVKA.POTRAZUJE)
                                - DBO.GKSTAVKA.ZATVORENIIZNOS &gt; 0
                                AND ( GKSTAVKA.POTRAZUJE &lt; 0 )
                        ORDER BY PARTNER.NAZIVPARTNER,
                                dbo.GKSTAVKA.datumdokumenta,
                                dbo.DOKUMENT.IDDOKUMENT,
                                dbo.GKSTAVKA.BROJDOKUMENTA,
                                dbo.GKSTAVKA.BROJSTAVKE
END

GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_OTVORENE_STAVKE_SORT_NAZIV_PP]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_OTVORENE_STAVKE_SORT_NAZIV_PP]
GO

CREATE PROCEDURE [dbo].[S_FIN_OTVORENE_STAVKE_SORT_NAZIV_PP]
(
    @godina AS INT,
     @idaktivnost int = NULL,
    @DOK AS INT,
    @MT AS INT,
    @ORG AS INT,
    @idpartner AS INT,
    @POCETNIKONTO AS VARCHAR (15),
    @ZAVRSNIKONTO AS VARCHAR (15)
) AS
BEGIN
SELECT TOP 100 PERCENT
                            dbo.GKSTAVKA.duguje,
                            dbo.GKSTAVKA.POTRAZUJE,
                            dbo.KONTO.IDKONTO AS KONTO,
                            NULL AS datumdvo,
                            dbo.gkstavka.GKdatumvalute AS datumvalute,
                            dbo.GKSTAVKA.DATUMDOKUMENTA AS DATUMDOK,
                            dbo.DOKUMENT.NAZIVDOKUMENT AS SKRACENI,
                            dbo.GKSTAVKA.BROJDOKUMENTA AS BROJDOK,
                            dbo.GKSTAVKA.BROJSTAVKE,
                            dbo.GKSTAVKA.OPIS AS opisknjizenja,
                            dbo.GKSTAVKA.IDPARTNER AS IDPARTNER,
                            ABS(DBO.GKSTAVKA.DUGUJE - DBO.GKSTAVKA.POTRAZUJE)
                            - DBO.GKSTAVKA.ZATVORENIIZNOS AS OTVORENO,
                            dbo.KONTO.NAZIVKONTO AS naziv,
                            dbo.GKSTAVKA.IDDOKUMENT AS IDDOKUMENT,
                            dbo.PARTNER.NAZIVPARTNER,
                            dbo.ORGJED.IDORGJED,
                            dbo.MJESTOTROSKA.IDMJESTOTROSKA,
                            dbo.PARTNER.MB,
                            dbo.PARTNER.partnermjesto,
                            dbo.PARTNER.partnerulica,
                            dbo.gkstavka.idgkstavka,
                            dbo.gkstavka.originalnidokument,
							dbo.ORGJED.NAZIVORGJED AS NAZIVOJ,
							DBO.MJESTOTROSKA.NAZIVMJESTOTROSKA AS NAZIVMT
                    FROM    dbo.GKSTAVKA
                            INNER JOIN dbo.DOKUMENT ON dbo.GKSTAVKA.IDDOKUMENT = dbo.DOKUMENT.IDDOKUMENT
                            INNER JOIN dbo.ORGJED ON dbo.GKSTAVKA.IDORGJED = dbo.ORGJED.IDORGJED
                            INNER JOIN dbo.MJESTOTROSKA ON dbo.GKSTAVKA.IDMJESTOTROSKA = dbo.MJESTOTROSKA.IDMJESTOTROSKA
                            INNER JOIN dbo.KONTO ON dbo.GKSTAVKA.IDKONTO = dbo.KONTO.IDKONTO
                            INNER JOIN dbo.PARTNER ON dbo.GKSTAVKA.IDPARTNER = dbo.PARTNER.IDPARTNER
                    WHERE   GKSTAVKA.gkgodidgodine = @godina
                            AND ( DBO.GKSTAVKA.IDORGJED = COALESCE(@ORG, DBO.GKSTAVKA.IDORGJED) )
                            AND ( DBO.GKSTAVKA.IDMJESTOTROSKA = COALESCE(@MT, DBO.GKSTAVKA.IDMJESTOTROSKA) )
                            AND ( DBO.GKSTAVKA.IDdokument = COALESCE(@DOK, DBO.GKSTAVKA.IDDOKUMENT) )
                            AND ( konto.IDkonto BETWEEN COALESCE(@POCETNIKONTO, DBO.konto.idkonto)
                                                AND     COALESCE(@ZAVRSNIKONTO, DBO.konto.idkonto) )
                            AND ( KONTO.IDAKTIVNOST = COALESCE(@IDAKTIVNOST, KONTO.IDAKTIVNOST) )
                            AND ( gkstavka.IDpartner = COALESCE(@IDpartner, gkstavka.idpartner) )
                            AND ABS(DBO.GKSTAVKA.DUGUJE
                                    - DBO.GKSTAVKA.POTRAZUJE)
                            - DBO.GKSTAVKA.ZATVORENIIZNOS &gt; 0
                            AND ( GKSTAVKA.POTRAZUJE &gt; 0 )
                    ORDER BY PARTNER.NAZIVPARTNER,
                            dbo.GKSTAVKA.datumdokumenta,
                            dbo.DOKUMENT.IDDOKUMENT,
                            dbo.GKSTAVKA.BROJDOKUMENTA,
                            dbo.GKSTAVKA.BROJSTAVKE
END

GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_OTVORENE_STAVKE_SORT_NAZIV_SVE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_OTVORENE_STAVKE_SORT_NAZIV_SVE]
GO

CREATE PROCEDURE [dbo].[S_FIN_OTVORENE_STAVKE_SORT_NAZIV_SVE]
(
    @RAZDOBLJEOD AS DATETIME,
    @RAZDOBLJEDO AS DATETIME,
    @godina AS INT,
    @idaktivnost AS VARCHAR (1),
    @DOK AS INT,
    @MT AS INT,
    @ORG AS INT,
    @idpartner AS INT,
    @POCETNIKONTO AS VARCHAR (15),
    @ZAVRSNIKONTO AS VARCHAR (15)
) AS
BEGIN
SELECT TOP 100 PERCENT
                    dbo.GKSTAVKA.duguje,
                    dbo.GKSTAVKA.POTRAZUJE,
                    dbo.KONTO.IDKONTO AS KONTO,
                    NULL AS datumdvo,
                    dbo.gkstavka.GKdatumvalute AS datumvalute,
                    dbo.GKSTAVKA.DATUMDOKUMENTA AS DATUMDOK,
                    dbo.DOKUMENT.NAZIVDOKUMENT AS SKRACENI,
                    dbo.GKSTAVKA.BROJDOKUMENTA AS BROJDOK,
                    dbo.GKSTAVKA.BROJSTAVKE,
                    dbo.GKSTAVKA.OPIS AS opisknjizenja,
                    dbo.GKSTAVKA.IDPARTNER AS IDPARTNER,
                    ABS(DBO.GKSTAVKA.DUGUJE - DBO.GKSTAVKA.POTRAZUJE)
                    - DBO.GKSTAVKA.ZATVORENIIZNOS AS OTVORENO,
                    dbo.KONTO.NAZIVKONTO AS naziv,
                    dbo.GKSTAVKA.IDDOKUMENT AS IDDOKUMENT,
                    dbo.PARTNER.NAZIVPARTNER,
                    dbo.ORGJED.IDORGJED,
                    dbo.MJESTOTROSKA.IDMJESTOTROSKA,
                    dbo.PARTNER.MB,
                    dbo.PARTNER.partnermjesto,
                    dbo.PARTNER.partnerulica,
                    dbo.gkstavka.idgkstavka,
                    dbo.gkstavka.originalnidokument,
					dbo.ORGJED.NAZIVORGJED AS NAZIVOJ,
					DBO.MJESTOTROSKA.NAZIVMJESTOTROSKA AS NAZIVMT
            FROM    dbo.GKSTAVKA
                    INNER JOIN dbo.DOKUMENT ON dbo.GKSTAVKA.IDDOKUMENT = dbo.DOKUMENT.IDDOKUMENT
                    INNER JOIN dbo.ORGJED ON dbo.GKSTAVKA.IDORGJED = dbo.ORGJED.IDORGJED
                    INNER JOIN dbo.MJESTOTROSKA ON dbo.GKSTAVKA.IDMJESTOTROSKA = dbo.MJESTOTROSKA.IDMJESTOTROSKA
                    INNER JOIN dbo.KONTO ON dbo.GKSTAVKA.IDKONTO = dbo.KONTO.IDKONTO
                    INNER JOIN dbo.PARTNER ON dbo.GKSTAVKA.IDPARTNER = dbo.PARTNER.IDPARTNER
            WHERE   ( DBO.GKSTAVKA.DATUMDOKUMENTA BETWEEN @RAZDOBLJEOD
                                                  AND     @RAZDOBLJEDO )
                    AND GKSTAVKA.gkgodidgodine = @godina
                    AND ( DBO.GKSTAVKA.IDORGJED = COALESCE(@ORG,
                                                           DBO.GKSTAVKA.IDORGJED) )
                    AND ( DBO.GKSTAVKA.IDMJESTOTROSKA = COALESCE(@MT, DBO.GKSTAVKA.IDMJESTOTROSKA) )
                    AND ( DBO.GKSTAVKA.IDdokument = COALESCE(@DOK,
                                                             DBO.GKSTAVKA.IDDOKUMENT) )
                    AND ( konto.IDkonto BETWEEN COALESCE(@POCETNIKONTO,
                                                         DBO.konto.idkonto)
                                        AND     COALESCE(@ZAVRSNIKONTO,
                                                         DBO.konto.idkonto) )
                    AND ( KONTO.IDAKTIVNOST = COALESCE(@IDAKTIVNOST,
                                                       KONTO.IDAKTIVNOST) )
                    AND ( gkstavka.IDpartner = COALESCE(@IDpartner,
                                                        gkstavka.idpartner) )
                    AND ABS(DBO.GKSTAVKA.DUGUJE - DBO.GKSTAVKA.POTRAZUJE)
                    - DBO.GKSTAVKA.ZATVORENIIZNOS &gt; 0
            ORDER BY PARTNER.NAZIVPARTNER,
                    dbo.GKSTAVKA.datumdokumenta,
                    dbo.DOKUMENT.IDDOKUMENT,
                    dbo.GKSTAVKA.BROJDOKUMENTA,
                    dbo.GKSTAVKA.BROJSTAVKE
END

GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_OTVORENE_STAVKE_SVE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_OTVORENE_STAVKE_SVE]
GO

CREATE PROCEDURE [dbo].[S_FIN_OTVORENE_STAVKE_SVE]
(
    @RAZDOBLJEOD AS DATETIME,
    @RAZDOBLJEDO AS DATETIME,
    @godina AS INT,
     @idaktivnost int = NULL,
    @DOK AS INT,
    @MT AS INT,
    @ORG AS INT,
    @idpartner AS INT,
    @POCETNIKONTO AS VARCHAR (15),
    @ZAVRSNIKONTO AS VARCHAR (15)
) AS
BEGIN
SELECT TOP 100 PERCENT
                    dbo.GKSTAVKA.duguje,
                    dbo.GKSTAVKA.POTRAZUJE,
                    dbo.KONTO.IDKONTO AS KONTO,
                    NULL AS datumdvo,
                    dbo.gkstavka.GKdatumvalute AS datumvalute,
                    dbo.GKSTAVKA.DATUMDOKUMENTA AS DATUMDOK,
                    dbo.DOKUMENT.NAZIVDOKUMENT AS SKRACENI,
                    dbo.GKSTAVKA.BROJDOKUMENTA AS BROJDOK,
                    dbo.GKSTAVKA.BROJSTAVKE,
                    dbo.GKSTAVKA.OPIS AS opisknjizenja,
                    dbo.GKSTAVKA.IDPARTNER AS IDPARTNER,
                    ABS(DBO.GKSTAVKA.DUGUJE - DBO.GKSTAVKA.POTRAZUJE)
                    - DBO.GKSTAVKA.ZATVORENIIZNOS AS OTVORENO,
                    dbo.KONTO.NAZIVKONTO AS naziv,
                    dbo.GKSTAVKA.IDDOKUMENT AS IDDOKUMENT,
                    dbo.PARTNER.NAZIVPARTNER,
                    dbo.ORGJED.IDORGJED,
                    dbo.MJESTOTROSKA.IDMJESTOTROSKA,
                    dbo.PARTNER.MB,
                    dbo.PARTNER.partnermjesto,
                    dbo.PARTNER.partnerulica,
                    dbo.gkstavka.idgkstavka,
                    dbo.gkstavka.originalnidokument,
                    dbo.ORGJED.NAZIVORGJED AS NAZIVOJ,
					DBO.MJESTOTROSKA.NAZIVMJESTOTROSKA AS NAZIVMT
            FROM    dbo.GKSTAVKA
                    INNER JOIN dbo.DOKUMENT ON dbo.GKSTAVKA.IDDOKUMENT = dbo.DOKUMENT.IDDOKUMENT
                    INNER JOIN dbo.ORGJED ON dbo.GKSTAVKA.IDORGJED = dbo.ORGJED.IDORGJED
                    INNER JOIN dbo.MJESTOTROSKA ON dbo.GKSTAVKA.IDMJESTOTROSKA = dbo.MJESTOTROSKA.IDMJESTOTROSKA
                    INNER JOIN dbo.KONTO ON dbo.GKSTAVKA.IDKONTO = dbo.KONTO.IDKONTO
                    INNER JOIN dbo.PARTNER ON dbo.GKSTAVKA.IDPARTNER = dbo.PARTNER.IDPARTNER
            WHERE   ( DBO.GKSTAVKA.DATUMDOKUMENTA BETWEEN @RAZDOBLJEOD
                                                  AND     @RAZDOBLJEDO )
                    AND GKSTAVKA.gkgodidgodine = @godina
                    AND ( DBO.GKSTAVKA.IDORGJED = COALESCE(@ORG,
                                                           DBO.GKSTAVKA.IDORGJED) )
                    AND ( DBO.GKSTAVKA.IDMJESTOTROSKA = COALESCE(@MT, DBO.GKSTAVKA.IDMJESTOTROSKA) )
                    AND ( DBO.GKSTAVKA.IDdokument = COALESCE(@DOK,
                                                             DBO.GKSTAVKA.IDDOKUMENT) )
                    AND ( konto.IDkonto BETWEEN COALESCE(@POCETNIKONTO,
                                                         DBO.konto.idkonto)
                                        AND     COALESCE(@ZAVRSNIKONTO,
                                                         DBO.konto.idkonto) )
                    AND ( KONTO.IDAKTIVNOST = COALESCE(@IDAKTIVNOST,
                                                       KONTO.IDAKTIVNOST) )
                    AND ( gkstavka.IDpartner = COALESCE(@IDpartner,
                                                        gkstavka.idpartner) )
                    AND ABS(DBO.GKSTAVKA.DUGUJE - DBO.GKSTAVKA.POTRAZUJE)
                    - DBO.GKSTAVKA.ZATVORENIIZNOS &gt; 0
            ORDER BY PARTNER.IDPARTNER,
                    dbo.GKSTAVKA.datumdokumenta,
                    dbo.DOKUMENT.IDDOKUMENT,
                    dbo.GKSTAVKA.BROJDOKUMENTA,
                    dbo.GKSTAVKA.BROJSTAVKE
END

GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_PARTNERI_SA_OTVORENIMA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_PARTNERI_SA_OTVORENIMA]
GO




CREATE PROCEDURE [dbo].[S_FIN_PARTNERI_SA_OTVORENIMA]
(
			@godina int
			
	)

AS
BEGIN

   SELECT GKSTAVKA.IDPARTNER,PARTNER.NAZIVPARTNER,PARTNER.PARTNERMJESTO
    FROM   dbo.GKSTAVKA
           INNER JOIN dbo.PARTNER
                ON  dbo.GKSTAVKA.IDPARTNER = dbo.PARTNER.IDPARTNER
    WHERE  
           (gkgodidgodine = @godina) AND 
           (ABS(DBO.GKSTAVKA.DUGUJE -DBO.GKSTAVKA.POTRAZUJE) - DBO.GKSTAVKA.ZATVORENIIZNOS  &gt; 0)
   GROUP BY GKSTAVKA.IDPARTNER,PARTNER.NAZIVPARTNER,PARTNER.PARTNERMJESTO
   ORDER BY PARTNER.NAZIVPARTNER
           END



GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_POGLED_U_VEZE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_POGLED_U_VEZE]
GO


CREATE PROCEDURE [dbo].[S_FIN_POGLED_U_VEZE]
(
@IDGKSTAVKA INT

)
AS
BEGIN

SELECT ZATVARANJA.gk1idgkstavka, ZATVARANJA.gk2idgkstavka, ZATVARANJA.zatvaranjaiznos, GKSTAVKA.IDGKSTAVKA, GKSTAVKA.DATUMDOKUMENTA, GKSTAVKA.BROJDOKUMENTA, 
GKSTAVKA.BROJSTAVKE, GKSTAVKA.IDDOKUMENT, GKSTAVKA.IDMJESTOTROSKA, GKSTAVKA.IDORGJED, GKSTAVKA.IDKONTO, GKSTAVKA.OPIS, GKSTAVKA.duguje, 
GKSTAVKA.POTRAZUJE, GKSTAVKA.DATUMPRIJAVE, GKSTAVKA.IDPARTNER, GKSTAVKA.ZATVORENIIZNOS,  GKSTAVKA.GKDATUMVALUTE, 
PARTNER.NAZIVPARTNER, MJESTOTROSKA.NAZIVMJESTOTROSKA, ORGJED.NAZIVORGJED, DOKUMENT.NAZIVDOKUMENT AS SKRACENIDOKUMENT, 
KONTO.NAZIVKONTO, KONTO.IDKONTO AS Expr1, 
DOKUMENT.IDDOKUMENT AS Expr2, MJESTOTROSKA.IDMJESTOTROSKA AS Expr3, ORGJED.IDORGJED AS Expr4, PARTNER.IDPARTNER AS Expr5 
FROM ZATVARANJA INNER JOIN GKSTAVKA ON ZATVARANJA.gk1idgkstavka = GKSTAVKA.IDGKSTAVKA INNER JOIN DOKUMENT ON GKSTAVKA.IDDOKUMENT = DOKUMENT.IDDOKUMENT 
INNER JOIN KONTO ON GKSTAVKA.IDKONTO = KONTO.IDKONTO 
INNER JOIN MJESTOTROSKA ON GKSTAVKA.IDMJESTOTROSKA = MJESTOTROSKA.IDMJESTOTROSKA 
INNER JOIN ORGJED 
ON GKSTAVKA.IDORGJED = ORGJED.IDORGJED INNER JOIN PARTNER ON GKSTAVKA.IDPARTNER = PARTNER.IDPARTNER 
WHERE (ZATVARANJA.gk2idgkstavka = @IDGKSTAVKA)

UNION ALL

SELECT ZATVARANJA.gk1idgkstavka, ZATVARANJA.gk2idgkstavka, ZATVARANJA.zatvaranjaiznos, GKSTAVKA.IDGKSTAVKA, GKSTAVKA.DATUMDOKUMENTA, GKSTAVKA.BROJDOKUMENTA, 
GKSTAVKA.BROJSTAVKE, GKSTAVKA.IDDOKUMENT, GKSTAVKA.IDMJESTOTROSKA, GKSTAVKA.IDORGJED, GKSTAVKA.IDKONTO, GKSTAVKA.OPIS, GKSTAVKA.duguje, 
GKSTAVKA.POTRAZUJE, GKSTAVKA.DATUMPRIJAVE, GKSTAVKA.IDPARTNER, GKSTAVKA.ZATVORENIIZNOS,  GKSTAVKA.GKDATUMVALUTE, 
PARTNER.NAZIVPARTNER, MJESTOTROSKA.NAZIVMJESTOTROSKA, ORGJED.NAZIVORGJED, DOKUMENT.NAZIVDOKUMENT AS SKRACENIDOKUMENT, 
KONTO.NAZIVKONTO, KONTO.IDKONTO AS Expr1, 
DOKUMENT.IDDOKUMENT AS Expr2, MJESTOTROSKA.IDMJESTOTROSKA AS Expr3, ORGJED.IDORGJED AS Expr4, PARTNER.IDPARTNER AS Expr5 
FROM ZATVARANJA INNER JOIN GKSTAVKA ON ZATVARANJA.gk2idgkstavka = GKSTAVKA.IDGKSTAVKA INNER JOIN DOKUMENT ON GKSTAVKA.IDDOKUMENT = DOKUMENT.IDDOKUMENT 
INNER JOIN KONTO ON GKSTAVKA.IDKONTO = KONTO.IDKONTO 
INNER JOIN MJESTOTROSKA ON GKSTAVKA.IDMJESTOTROSKA = MJESTOTROSKA.IDMJESTOTROSKA 
INNER JOIN ORGJED 
ON GKSTAVKA.IDORGJED = ORGJED.IDORGJED INNER JOIN PARTNER ON GKSTAVKA.IDPARTNER = PARTNER.IDPARTNER 
WHERE (ZATVARANJA.gk1idgkstavka = @IDGKSTAVKA)
END

GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_PREBACI]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_PREBACI]
GO


CREATE PROCEDURE [dbo].[S_FIN_PREBACI]
      (
            @IZBAZE VARCHAR(50) = '[vgfin_zaprudje2009]',
            @UBAZU VARCHAR(50) = '[MARIJA]',
            @GODINA VARCHAR(4) = '2009'
        

      )

AS

 

EXEC('DELETE FROM '+  @UBAZU + '.[dbo].[IRA] WHERE IRAGODIDGODINE = ' +  '' + @GODINA + '')

EXEC('DELETE FROM '+  @UBAZU + '.[dbo].[URA] WHERE URAGODIDGODINE = ' +  '' + @GODINA + '')

EXEC('DELETE FROM '+  @UBAZU + '.[dbo].[GKSTAVKA] WHERE GKGODIDGODINE = ' +  '' + @GODINA + '')

 

 

 

 

EXEC('

INSERT INTO ' 

+ @UBAZU + '.[dbo].[GKSTAVKA]

           ([DATUMDOKUMENTA]

           ,[BROJDOKUMENTA]

           ,[BROJSTAVKE]

           ,[IDDOKUMENT]

           ,[IDMJESTOTROSKA]

           ,[IDORGJED]

           ,[IDKONTO]

           ,[OPIS]

           ,[duguje]

           ,[POTRAZUJE]

           ,[DATUMPRIJAVE]

           ,[IDPARTNER]

           ,[ZATVORENIIZNOS]

           ,[statusgk]

           ,[ORIGINALNIDOKUMENT]

           ,[GKGODIDGODINE]

           ,[GKDATUMVALUTE])

 

SELECT 

      [DATUMDOKUMENTA]

      ,[BROJDOKUMENTA]

      ,[BROJSTAVKE]

      ,[IDDOKUMENT]

      ,[IDMJESTOTROSKA]

      ,[IDORGJED]

      ,[IDKONTO]

      ,[OPIS]

      ,[duguje]

      ,[POTRAZUJE]

      ,[DATUMPRIJAVE]

      ,[IDPARTNER]

      ,[ZATVORENIIZNOS]

       ,[statusgk]

      ,[ORIGINALNIDOKUMENT]

      ,[GODINA]

 ,[DATUMVALUTE]

FROM ' +  @IZBAZE + '.[dbo].[GKSTAVKA] WHERE GODINA = ' + '' + @GODINA + '')

 

 

EXEC('

INSERT INTO ' + @UBAZU + '.[dbo].[URA]

           ([URAGODIDGODINE]

           ,[URADOKIDDOKUMENT]

           ,[URABROJ]

           ,[urapartnerIDPARTNER]

           ,[IDTIPURA]

           ,[URABROJRACUNADOBAVLJACA]

           ,[URADATUM]

           ,[URAVALUTA]

           ,[URANAPOMENA]

           ,[URAUKUPNO])

 

SELECT uragodina

      ,[IDDOKUMENT],

            [IDURA]

 ,[IDPARTNER]

      ,[IDTIPURA]

      ,[BROJRACUNADOBAVLJACA]

      ,[datumura]

      ,[VALUTA]

      ,isnull([NAPOMENA],'' '')

      ,[UKUPNO]

  FROM '+  @IZBAZE + '.[dbo].[URA] WHERE URAGODINA = ' +  '' + @GODINA + '')

 

 

EXEC('

INSERT INTO ' + @UBAZU + '.[dbo].[IRA]

           ([IRAGODIDGODINE]

           ,[IRADOKIDDOKUMENT]

           ,[IRABROJ]

           ,[IRApartnerIDPARTNER]

           ,[IDTIPIRA]

           ,[IRADATUM]

           ,[IRAVALUTA]

           ,IRANAPOMENA

           ,[IRAUKUPNO])

SELECT IRAGODINA

      ,[IDDOKUMENT],

            [IDIRA]

 ,[IDPARTNER]

      ,[IDTIPIRA]

      ,[datumira]

      ,[VALUTAira]

      ,isnull([NAPOMENAira],'' '')

      ,[UKUPNOira]

  FROM '+  @IZBAZE + '.[dbo].[IRA] WHERE IRAGODINA = ' +  '' + @GODINA + '')


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_PROMET_PO_KONTIMA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_PROMET_PO_KONTIMA]
GO



CREATE PROCEDURE [dbo].[S_FIN_PROMET_PO_KONTIMA]
(
		@ORG INT = NULL,
		@MT INT = NULL,
		@DOK INT = NULL,
		@RAZDOBLJEOD DATEtime = NULL,
		@RAZDOBLJEDO DATEtime = NULL,
		@POCETNIKONTO varchar(15) = NULL,
		@ZAVRSNIKONTO varchar(15) = NULL
		
					
	)
AS
	
	IF @ORG = -1  SET @ORG = NULL
	IF @MT = -1  SET @MT = NULL
	IF @DOK = -1  SET @DOK = NULL
	IF @POCETNIKONTO = ' '  SET @POCETNIKONTO = NULL
	IF @ZAVRSNIKONTO = ' '  SET @ZAVRSNIKONTO = NULL
	
SELECT     dbo.KONTO.IDKONTO AS KONTO, dbo.KONTO.NAZIVKONTO, SUM(dbo.GKSTAVKA.DUGUJE) AS DUGUJE, SUM(dbo.GKSTAVKA.POTRAZUJE) AS POTRAZUJE, COUNT(*) 
                      AS BROJSTAVAKA
FROM         dbo.GKSTAVKA INNER JOIN
                      dbo.KONTO ON dbo.GKSTAVKA.IDKONTO = dbo.KONTO.IDKONTO INNER JOIN
                      dbo.DOKUMENT ON dbo.GKSTAVKA.IDDOKUMENT = dbo.DOKUMENT.IDDOKUMENT INNER JOIN
                      dbo.ORGJED ON dbo.GKSTAVKA.IDORGJED = dbo.ORGJED.IDORGJED INNER JOIN
                      dbo.MJESToTROSKA ON dbo.GKSTAVKA.IDMJESTOTROSKA = dbo.MJESToTROSKA.IDMJESTOTROSKA
WHERE (DBO.GKSTAVKA.IDORGJED= COALESCE(@ORG,DBO.GKSTAVKA.IDORGJED)) AND (DBO.GKSTAVKA.IDMJESTOTROSKA= COALESCE(@MT,DBO.GKSTAVKA.IDMJESTOTROSKA)) AND (DBO.GKSTAVKA.IDdokument= COALESCE(@DOK,DBO.GKSTAVKA.IDDOKUMENT))  AND  (DATUMDOKUMENTA between @RAZDOBLJEOD AND @RAZDOBLJEDO) and (konto.IDkonto between COALESCE(@POCETNIKONTO,DBO.konto.idkonto) and COALESCE(@ZAVRSNIKONTO,DBO.konto.idkonto)) and (gkstavka.statusgk = 1)
GROUP BY dbo.KONTO.IDKONTO, dbo.KONTO.NazivKONTO
ORDER BY DBO.KONTO.IDKONTO
	RETURN
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_PROMET_PO_PARTNERIMA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_PROMET_PO_PARTNERIMA]
GO


CREATE PROCEDURE [dbo].[S_FIN_PROMET_PO_PARTNERIMA]
	(
		 @ODPARTNERA  INT = NULL,
		 @DOPARTNERA INT = NULL,
		 @MT INT = NULL,
		 @ORG INT= NULL,
		 @IDAKTIVNOST INT = NULL,
		@RAZDOBLJEOD DATETIME,
		@RAZDOBLJEDO DATETIME,
		@dodatniuvjet varchar(2) = NULL,
		@POCETNIKONTO varchar(15) = null,
		@ZAVRSNIKONTO varchar(15) = null

)
AS
	IF @ORG = -1  SET @ORG = NULL
	IF @MT = -1  SET @MT = NULL
	IF @POCETNIKONTO = ' '  SET @POCETNIKONTO = NULL
	IF @ZAVRSNIKONTO = ' '  SET @ZAVRSNIKONTO = NULL
	IF @IDAKTIVNOST = -1  SET @IDAKTIVNOST = NULL
	IF @ODPARTNERA = -1  SET @ODPARTNERA = NULL
	IF @DOPARTNERA = -1  SET @DOPARTNERA = NULL
	
	
--- SORTIRANJE PO NAZIVU
if @dodatniuvjet = 'N'
	BEGIN

	SELECT     GKSTAVKA.IDPARTNER, SUM(GKSTAVKA.duguje) AS duguje, SUM(GKSTAVKA.POTRAZUJE) AS potrazuje, PARTNER.NAZIVPARTNER AS naziv, 
                      KONTO.IDAKTIVNOST AS aktivnost,  ISNULL(PARTNER.partnermjesto, ' ') AS partnermjesto
FROM         GKSTAVKA INNER JOIN
                      PARTNER ON GKSTAVKA.IDPARTNER = PARTNER.IDPARTNER INNER JOIN
                      KONTO ON GKSTAVKA.IDKONTO = KONTO.IDKONTO
WHERE (gkstavka.IDkonto between COALESCE(@POCETNIKONTO,DBO.konto.idkonto) and COALESCE(@ZAVRSNIKONTO,DBO.konto.idkonto)) and GKSTAVKA.IDPARTNER BETWEEN COALESCE(@ODPARTNERA,PARTNER.IDPARTNER)  AND COALESCE(@DOPARTNERA,PARTNER.IDPARTNER) AND  (DBO.GKSTAVKA.IDORGJED= COALESCE(@ORG,DBO.GKSTAVKA.IDORGJED)) AND (DBO.GKSTAVKA.IDMJESTOTROSKA= COALESCE(@MT,DBO.GKSTAVKA.IDMJESTOTROSKA)) AND (KONTO.IDAKTIVNOST = COALESCE (@IDAKTIVNOST, KONTO.IDAKTIVNOST)) AND  (DATUMDOKUMENTA between @RAZDOBLJEOD AND @RAZDOBLJEDO)

GROUP BY GKSTAVKA.IDPARTNER, KONTO.IDAKTIVNOST, PARTNER.partnermjesto, PARTNER.NAZIVPARTNER
ORDER BY PARTNER.NAZIVPARTNER

END ELSE
	BEGIN

	SELECT     GKSTAVKA.IDPARTNER, SUM(GKSTAVKA.duguje) AS duguje, SUM(GKSTAVKA.POTRAZUJE) AS potrazuje, PARTNER.NAZIVPARTNER AS naziv, 
                      KONTO.IDAKTIVNOST AS aktivnost,  ISNULL(PARTNER.partnermjesto, ' ') AS partnermjesto
FROM         GKSTAVKA INNER JOIN
                      PARTNER ON GKSTAVKA.IDPARTNER = PARTNER.IDPARTNER INNER JOIN
                      KONTO ON GKSTAVKA.IDKONTO = KONTO.IDKONTO
WHERE  (gkstavka.IDkonto between COALESCE(@POCETNIKONTO,DBO.konto.idkonto) and COALESCE(@ZAVRSNIKONTO,DBO.konto.idkonto))  and GKSTAVKA.IDPARTNER BETWEEN COALESCE(@ODPARTNERA,PARTNER.IDPARTNER)  AND COALESCE(@DOPARTNERA,PARTNER.IDPARTNER) AND  (DBO.GKSTAVKA.IDORGJED= COALESCE(@ORG,DBO.GKSTAVKA.IDORGJED)) AND (DBO.GKSTAVKA.IDMJESTOTROSKA= COALESCE(@MT,DBO.GKSTAVKA.IDMJESTOTROSKA)) AND (KONTO.IDAKTIVNOST = COALESCE (@IDAKTIVNOST, KONTO.IDAKTIVNOST)) AND  (DATUMDOKUMENTA between @RAZDOBLJEOD AND @RAZDOBLJEDO)

GROUP BY GKSTAVKA.IDPARTNER, KONTO.IDAKTIVNOST, PARTNER.partnermjesto, PARTNER.NAZIVPARTNER
ORDER BY GKSTAVKA.IDPARTNER
END
RETURN

GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_PROMJENA_STATUSA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_PROMJENA_STATUSA]
GO



	
CREATE PROCEDURE [dbo].[S_FIN_PROMJENA_STATUSA]
	(
		@BROJDOKUMENTA int,
		@IDDOKUMENT int,
		@STATUSGK BIT,
		@godina INT
	)
AS
	
	DECLARE @SALDO money
	
	SELECT @SALDO=SUM(DUGUJE) - SUM(POTRAZUJE) FROM GKSTAVKA WHERE BROJDOKUMENTA = @BROJDOKUMENTA AND IDDOKUMENT=@IDDOKUMENT and GKGODIDGODINE = @godina
	IF @SALDO=0
	BEGIN
	UPDATE GKSTAVKA SET STATUSGK = @STATUSGK WHERE BROJDOKUMENTA = @BROJDOKUMENTA AND IDDOKUMENT=@IDDOKUMENT AND GKGODIDGODINE = @GODINA
	END
		
			RETURN


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_URA_PLACANJE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_URA_PLACANJE]
GO


CREATE  PROCEDURE [dbo].[S_FIN_URA_PLACANJE]

	(
		
	
		@iddokument int = null,
		@od int = null,
		@doo int = null,
		@dat1 datetime,
		@dat2 datetime
		

	)

AS
SELECT     TOP 100 PERCENT ISNULL(dbo.VW_FIN_URA_UKUPNO.ZATVARANJE_IZNOS,0) AS ZATVARANJE_IZNOS, dbo.VW_FIN_URA_UKUPNO.ZATVARANJE_DATUM, 
                      dbo.URA.URABROJ, dbo.URA.IDTIPURA, dbo.URA.URABROJRACUNADOBAVLJACA, dbo.URA.URAPARTNERIDPARTNER, dbo.URA.URANAPOMENA, 
                      dbo.URA.URAVALUTA, dbo.URA.URAUKUPNO,  dbo.URA.URADATUM, 
                       dbo.URA.URAGODIDGODINE, dbo.PARTNER.NAZIVPARTNER, 
                      dbo.PARTNER.MB, dbo.URA.URADOKIDDOKUMENT,PARTNER.PARTNEROIB,
CASE (SELECT COUNT(BROJDOKUMENTA) FROM GKSTAVKA WHERE IDDOKUMENT = @IDDOKUMENT AND BROJDOKUMENTA = DBO.URA.URABROJ AND GKGODIDGODINE =URA.URAGODIDGODINE) WHEN 0 THEN '---------' ELSE 'Kontirano' END AS Status,
dbo.ura.uramodel,dbo.ura.urapozivnabroj,OSNOVICA0,OSNOVICA10,OSNOVICA22,OSNOVICA23,PDV10DA,PDV10NE,PDV22DA,PDV22NE,PDV23DA,PDV23NE,OSNOVICA10NE,OSNOVICA22NE,OSNOVICA23NE,R2

FROM         dbo.URA LEFT OUTER  JOIN
                      dbo.VW_FIN_URA_UKUPNO ON dbo.URA.URADOKIDDOKUMENT = dbo.VW_FIN_URA_UKUPNO.IDDOKUMENT AND 
                      dbo.URA.URABROJ = dbo.VW_FIN_URA_UKUPNO.URA_BROJ AND dbo.URA.uragodidgodine = dbo.VW_FIN_URA_UKUPNO.GKGODIDGODINE INNER JOIN
                      dbo.PARTNER ON dbo.URA.URAPARTNERIDPARTNER = dbo.PARTNER.IDPARTNER
where  
dbo.ura.URADOKIDDOKUMENT = coalesce(@iddokument,dbo.ura.URADOKIDDOKUMENT) 
and (dbo.ura.URADATUM between @dat1 and @dat2) 
and (ura.URABROJ  between coalesce(@od,ura.URABROJ) and coalesce(@doo,ura.URABROJ)) 
RETURN
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_OD_DIR]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_OD_DIR]
GO



CREATE PROCEDURE [dbo].[S_OD_DIR]
AS
BEGIN

Set nocount on

declare @tblpaths table (
			[property]		varchar (100),
			[path]			varchar (200)
			)

declare 
@returncode		int,
@instancename	varchar (100),
@path				nvarchar(4000)


Select @instancename = @@servername
insert into @tblpaths ([property], [path])
select 'Instance Name', @instancename






exec @returncode = master.dbo.xp_instance_regread N'hkey_local_machine',N'software\microsoft\mssqlserver\mssqlserver',N'defaultdata', @path output, 'no_output'

if @path is null
begin

exec @returncode = master.dbo.xp_instance_regread N'hkey_local_machine',N'software\microsoft\mssqlserver\setup',N'sqldataroot', @path output, 'no_output'
set @path = @path + '\data'
insert into @tblpaths ([property], [path])
select 'Database Data Directory', @path
end
else
begin
insert into @tblpaths ([property], [path])
select 'Database Data Directory',  @path
end



exec @returncode = master.dbo.xp_instance_regread N'hkey_local_machine',N'software\microsoft\mssqlserver\mssqlserver',N'defaultlog', @path output, 'no_output'

if @path is null
begin

exec @returncode = master.dbo.xp_instance_regread N'hkey_local_machine',N'software\microsoft\mssqlserver\setup',N'sqldataroot', @path output, 'no_output'
set @path = @path + '\data'
insert into @tblpaths ([property], [path])
select 'Database Log Directory', @path
end
else
begin
insert into @tblpaths ([property], [path])
select 'Database Log Directory', @path
end



exec @returncode = master.dbo.xp_instance_regread N'hkey_local_machine',N'software\microsoft\mssqlserver\setup',N'sqlbinroot', @path output, 'no_output'

insert into @tblpaths ([property], [path])
select 'Binn Directory', @path



exec @returncode = master.dbo.xp_instance_regread N'hkey_local_machine',N'software\microsoft\mssqlserver\mssqlserver',N'backupdirectory', @path output, 'no_output'
insert into @tblpaths ([property], [path])
select 'Backup Directory', @path

select * from @tblpaths
END


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_BOLOVANJE_FOND]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_BOLOVANJE_FOND]
GO





CREATE PROCEDURE dbo.S_PLACA_BOLOVANJE_FOND
(
@odd varchar(7),
@dooo varchar(7),
@idradnik int
)
AS 
BEGIN
SELECT     radnik.BROJZDRAVSTVENOG,RADNIK.OIB,dbo.ObracunRadnici.IDRADNIK, RADNIK.PREZIME,RADNIK.IME,RADNIK.JMBG,dbo.OBRACUN.MJESECOBRACUNA, dbo.OBRACUN.GODINAOBRACUNA,
                      ISNULL(SUM(obracun_bruto.iznosbruto), 0) AS UKUPNOBRUTO, 
                                        
                       ISNULL(SUM(obracun_bruto.iznosbruto), 0) 
                      - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) - ISNULL(SUM(obracun_porezi.iznosporez), 0) 
                      - ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) - ISNULL(SUM(obracun_krizni.porezkrizni), 0)  AS NETOPLACA,					  
                      ISNULL(SUM(obracun_bruto.satiukupno), 0) AS SATIUKUPNO,
ISNULL(SUM(obracun_bruto.KOLONA4), 0) AS KOLONA4,
ISNULL(SUM(obracun_bruto.KOLONA5), 0) AS KOLONA5,
ISNULL(SUM(obracun_bruto.KOLONA6), 0) AS KOLONA6,
ISNULL(SUM(obracun_bruto.KOLONA8), 0) AS KOLONA8,
max(obracun.MJESECNIFONDSATIOBRACUN) as FONDMJESECA

FROM         dbo.ObracunRadnici INNER JOIN RADNIK ON ObracunRadnici.IDRADNIK = RADNIK.IDRADNIK INNER JOIN
                      dbo.OBRACUN ON dbo.ObracunRadnici.IDOBRACUN = dbo.OBRACUN.IDOBRACUN  right OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, 

SUM(case when element.idvrstaelementa=2 then OBRIZNOS else 0 end) AS iznosbruto, 


SUM(CASE WHEN DBO.BOLOVANJEFOND.KOLONA = 4 THEN obrsati ELSE 0 END) AS KOLONA4,
SUM(CASE WHEN DBO.BOLOVANJEFOND.KOLONA = 5 THEN obrsati ELSE 0 END) AS KOLONA5,
SUM(CASE WHEN DBO.BOLOVANJEFOND.KOLONA = 6 THEN obrsati ELSE 0 END) AS KOLONA6,
SUM(CASE WHEN DBO.BOLOVANJEFOND.KOLONA = 8 THEN obrsati ELSE 0 END) AS KOLONA8,
SUM(CASE WHEN element.zbrajasateufondsati = 1  AND (ELEMENT.IDOSNOVAOSIGURANJA = 10 OR ELEMENT.IDOSNOVAOSIGURANJA = 18) THEN OBRSATI ELSE 0 END) AS SATIUKUPNO
				
                            FROM          dbo.ObracunElementi inner join dbo.element on dbo.obracunelementi.idelement = dbo.element.idelement
							left outer  JOIN DBO.BOLOVANJEFOND ON DBO.BOLOVANJEFOND.ELEMENTBOLOVANJEIDELEMENT = DBO.ELEMENT.IDELEMENT
							WHERE (ELEMENT.IDOSNOVAOSIGURANJA &lt;&gt; 17)
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_bruto ON dbo.ObracunRadnici.IDOBRACUN = obracun_bruto.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_bruto.IDRADNIK left outer JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, 0 AS osnovicadoprinos, SUM(OBRACUNATIDOPRINOS) AS iznosdoprinos
                            FROM          dbo.ObracunDoprinosi
                            WHERE      (IDVRSTADOPRINOS = 2)
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_doprinosi ON dbo.ObracunRadnici.IDOBRACUN = obracun_doprinosi.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_doprinosi.IDRADNIK left outer  JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, 0 AS osnovicadoprinos, SUM(OBRACUNATIDOPRINOS) AS iznosdoprinos
                            FROM          dbo.ObracunDoprinosi AS ObracunDoprinosi_1
                            WHERE      (IDVRSTADOPRINOS = 1)
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_doprinosi_na ON dbo.ObracunRadnici.IDOBRACUN = obracun_doprinosi_na.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_doprinosi_na.IDRADNIK left outer JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(OBRACUNATIPOREZ) AS iznosporez
                            FROM          dbo.ObracunPorezi
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_porezi ON dbo.ObracunRadnici.IDOBRACUN = obracun_porezi.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_porezi.IDRADNIK left outer  JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(IZNOSOLAKSICE) AS iznosolaksice, SUM(IZNOSPOREZNOPRIZNATEOLAKSICE) 
                                                   AS iznosporeznopriznateolaksice
                            FROM          dbo.VW_PLACA_OLAKSICE_GRUPE
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_olaksice ON dbo.ObracunRadnici.IDOBRACUN = obracun_olaksice.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_olaksice.IDRADNIK left outer JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(OBRIZNOS) AS iznosnetonaknade
                            FROM          dbo.ObracunElementi AS ObracunElementi_1
                            WHERE      (IDVRSTAELEMENTA = 1)
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_netonaknade ON dbo.ObracunRadnici.IDOBRACUN = obracun_netonaknade.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_netonaknade.IDRADNIK left outer JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(OBRACUNATAOBUSTAVAUKUNAMA) AS iznosobustave
                            FROM          dbo.OBRACUNObustave
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_obustave ON dbo.ObracunRadnici.IDOBRACUN = obracun_obustave.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_obustave.IDRADNIK left outer JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(OBRACUNATIKUNSKIIZNOS) AS iznoskredita
                            FROM          dbo.OBRACUNKrediti
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_krediti ON dbo.ObracunRadnici.IDOBRACUN = obracun_krediti.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_krediti.IDRADNIK left outer JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(POREZKRIZNI) AS porezkrizni
                            FROM          dbo.OBRACUNOBRACUNLevel1ObracunKrizni
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_krizni ON dbo.ObracunRadnici.IDOBRACUN = obracun_krizni.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_krizni.IDRADNIK
WHERE  (obracun.godinaobracuna + '-' + dbo.OBRACUN.MJESECOBRACUNA &gt;= @ODD and obracun.godinaobracuna +'-' + dbo.OBRACUN.MJESECOBRACUNA &lt;= @DOOO) and dbo.ObracunRadnici.IDRADNIK = @idradnik
GROUP BY dbo.ObracunRadnici.IDRADNIK,obracun.godinaobracuna + '-' + dbo.OBRACUN.MJESECOBRACUNA,RADNIK.PREZIME,RADNIK.IME,RADNIK.JMBG,dbo.OBRACUN.MJESECOBRACUNA,dbo.OBRACUN.GODINAOBRACUNA,RADNIK.OIB,radnik.BROJZDRAVSTVENOG
ORDER BY IDRADNIK,obracun.godinaobracuna + '-' + dbo.OBRACUN.MJESECOBRACUNA
end
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_BOLOVANJE_POSLODAVAC]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_BOLOVANJE_POSLODAVAC]
GO







CREATE PROCEDURE dbo.S_PLACA_BOLOVANJE_POSLODAVAC
(
@odd varchar(7),
@dooo varchar(7),
@IDRADNIK AS INT
)
AS 
BEGIN

SELECT      RADNIK.IDRADNIK,RADNIK.PREZIME,RADNIK.IME, SUM(OBRIZNOS) AS iznosbruto, 

case when element.ZBRAJASATEUFONDSATI=1 then SUM(OBRSATI) ELSE 0 END AS SATIUKUPNO,



obracun.godinaobracuna + '-' + dbo.OBRACUN.MJESECOBRACUNA AS GODINAMJESEC


                            FROM          dbo.ObracunElementi inner join dbo.element on dbo.obracunelementi.idelement = dbo.element.idelement
								inner join obracun on dbo.obracunelementi.idobracun = dbo.obracun.idobracun
								INNER JOIN RADNIK ON DBO.OBRACUNELEMENTI.IDRADNIK = DBO.RADNIK.IDRADNIK
                            
WHERE  (obracunelementi.IDVRSTAELEMENTA = 2) and (RADNIK.IDRADNIK = @IDRADNIK) AND  (obracun.godinaobracuna + '-' + dbo.OBRACUN.MJESECOBRACUNA &gt;= @odd and obracun.godinaobracuna +'-' + dbo.OBRACUN.MJESECOBRACUNA &lt;= @dooo) and element.idosnovaosiguranja = '10'
     GROUP BY RADNIK.IDRADNIK,RADNIK.PREZIME,RADNIK.IME,obracun.godinaobracuna + '-' + dbo.OBRACUN.MJESECOBRACUNA,element.ZBRAJASATEUFONDSATI
	order by RADNIK.idradnik
end


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_BRUTO]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_BRUTO]
GO






CREATE PROCEDURE dbo.S_PLACA_BRUTO
(
@IDOBRACUN varchar(11)
)
AS
BEGIN

	SET NOCOUNT ON

	SELECT     SUM(dbo.OBRACUNELEMENTI.OBRSATI) AS SATI, SUM(dbo.OBRACUNELEMENTI.OBRIZNOS) AS IZNOS, dbo.RADNIK.PREZIME, dbo.RADNIK.IME, dbo.RADNIK.JMBG, 
                      dbo.RADNIK.IDRADNIK, dbo.OBRACUNELEMENTI.IDVRSTAELEMENTA, dbo.OBRACUNELEMENTI.NAZIVELEMENT, dbo.OBRACUNELEMENTI.NAZIVVRSTAELEMENT
FROM         dbo.OBRACUNELEMENTI INNER JOIN
                      dbo.RADNIK ON dbo.OBRACUNELEMENTI.IDRADNIK = dbo.RADNIK.IDRADNIK
WHERE IDOBRACUN = @IDOBRACUN
GROUP BY dbo.RADNIK.PREZIME, dbo.RADNIK.IME, dbo.RADNIK.JMBG, dbo.RADNIK.IDRADNIK, dbo.OBRACUNELEMENTI.IDVRSTAELEMENTA, 
                      dbo.OBRACUNELEMENTI.NAZIVELEMENT, dbo.OBRACUNELEMENTI.NAZIVVRSTAELEMENT
HAVING      (dbo.OBRACUNELEMENTI.IDVRSTAELEMENTA = 2)

	SET NOCOUNT OFF

END








GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_DOPRINOS]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_DOPRINOS]
GO






CREATE PROCEDURE dbo.S_PLACA_DOPRINOS
(
@IDOBRACUN varchar(11)
)
AS
BEGIN

	SET NOCOUNT ON

	SELECT     TOP 100 PERCENT SUM(OBRACUNATIDOPRINOS) AS Iznos, IDDOPRINOS AS Sifra, NAZIVVRSTADOPRINOS AS Vrsta, NAZIVDOPRINOS AS NAZIVDOPRINOS,
idvrstadoprinos as vrstasifra
FROM         dbo.OBRACUNDOPRINOSI
WHERE IDOBRACUN = @IDOBRACUN
GROUP BY IDDOPRINOS, NAZIVVRSTADOPRINOS, NAZIVDOPRINOS, IDVRSTADOPRINOS
ORDER BY IDVRSTADOPRINOS DESC

	SET NOCOUNT OFF

END








GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_ELEMENTI_OBRACUNA_REKAPITULACIJA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_ELEMENTI_OBRACUNA_REKAPITULACIJA]
GO






CREATE PROCEDURE dbo.S_PLACA_ELEMENTI_OBRACUNA_REKAPITULACIJA

(
@IDOBRACUN varchar(11)
)
AS
BEGIN

SELECT     TOP 100 PERCENT SUM(OBRSATI) AS SATI, SUM(OBRIZNOS) AS IZNOS, NAZIVELEMENT, IDELEMENT, IDVRSTAELEMENTA,IDOBRACUN,NAZIVVRSTAELEMENT
FROM         dbo.OBRACUNELEMENTI
GROUP BY NAZIVELEMENT, IDELEMENT, IDVRSTAELEMENTA,IDOBRACUN,NAZIVVRSTAELEMENT
HAVING OBRACUNELEMENTI.IDOBRACUN = @IDOBRACUN
ORDER BY IDVRSTAELEMENTA DESC, IDELEMENT


END








GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_GOD_MJE_OBR]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_GOD_MJE_OBR]
GO



CREATE PROCEDURE dbo.S_PLACA_GOD_MJE_OBR
AS
BEGIN
	
	SET NOCOUNT ON;

    
	SELECT     TOP (100) PERCENT GODINAOBRACUNA + '-' + MJESECOBRACUNA AS GODINAIMJESECOBRACUNA
FROM         dbo.OBRACUN
GROUP BY GODINAOBRACUNA + '-' + MJESECOBRACUNA
ORDER BY GODINAIMJESECOBRACUNA DESC
END



GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_GODISNJI]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_GODISNJI]
GO



CREATE PROCEDURE dbo.S_PLACA_GODISNJI

(
@od varchar(7),
@do varchar(7),
@tjedni float,
@mjesecni float
)

AS
BEGIN




DECLARE @listCol VARCHAR(2000)
DECLARE @query VARCHAR(4000)







SELECT  @listCol = STUFF((
SELECT DISTINCT '],[' + obracun.godinaobracuna + '-' + obracun.mjesecobracuna
   FROM    obracun
	where (obracun.godinaobracuna + '-' + dbo.OBRACUN.MJESECOBRACUNA &gt;= @od and obracun.godinaobracuna +'-' + dbo.OBRACUN.MJESECOBRACUNA &lt;= @do)
    ORDER BY '],[' + obracun.godinaobracuna + '-' + obracun.mjesecobracuna
    FOR XML PATH('')
),1,2,'')+ ']'
SET @query =
'SELECT   * from (select top 100 percent  SUM(dbo.ObracunElementi.OBRIZNOS) AS IznosBruto, dbo.ObracunElementi.IDRADNIK, dbo.RADNIK.PREZIME, 
                      dbo.RADNIK.IME,dbo.OBRACUN.godiNAOBRACUNA+ ''-'' + dbo.OBRACUN.MJESECOBRACUNA   as test,radnik.koeficijent,radnik.tjednifondsati,' 
+  CAST(@mjesecni / @tjedni AS varchar(30)) +  ' * radnik.tjednifondsati  as Sati
FROM         dbo.ObracunElementi INNER JOIN
                      dbo.OBRACUN ON dbo.ObracunElementi.IDOBRACUN = dbo.OBRACUN.IDOBRACUN INNER JOIN
                      dbo.RADNIK ON dbo.ObracunElementi.IDRADNIK = dbo.RADNIK.IDRADNIK INNER JOIN
                      dbo.ELEMENT ON dbo.ObracunElementi.IDELEMENT = dbo.ELEMENT.IDELEMENT
where    
(dbo.ELEMENT.IDVRSTAELEMENTA = 2) AND 
                      (dbo.ELEMENT.IDOSNOVAOSIGURANJA = 10 OR
                      dbo.ELEMENT.IDOSNOVAOSIGURANJA = 18) and
(obracun.godinaobracuna + ''-'' + dbo.OBRACUN.MJESECOBRACUNA &gt;= ''' + cast(@od as varchar(7)) + ''' and obracun.godinaobracuna + ''-'' + dbo.OBRACUN.MJESECOBRACUNA &lt;= ''' + cast(@do as varchar(7)) + ''')


GROUP BY dbo.OBRACUN.mjesecobracuna,dbo.OBRACUN.GODINAOBRACUNA, dbo.ObracunElementi.IDRADNIK, dbo.RADNIK.PREZIME, dbo.RADNIK.IME, 
                      dbo.ELEMENT.IDVRSTAELEMENTA, dbo.ELEMENT.IDOSNOVAOSIGURANJA,radnik.koeficijent,radnik.tjednifondsati
ORDER BY dbo.ObracunElementi.IDRADNIK, dbo.RADNIK.PREZIME, dbo.OBRACUN.GODINAOBRACUNA, dbo.OBRACUN.MJESECOBRACUNA) o
pivot
(sum(IznosBruto) for  o.test in ('+@listCol+'))  p'

eXECUTE (@query)
END



GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_ID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_ID]
GO

CREATE PROCEDURE [dbo].[S_PLACA_ID]
(

@IDOBRACUN varchar(11) = '',
@MJESECISPLATE varchar(2) = '',
@GODINAISPLATE varchar(4) = '',
@VOLONTERI INT = 0 --- POSTAVITI 1 ZA VOLONTERE
)
AS
BEGIN

	SET NOCOUNT ON

	
	DECLARE	@NAZIVFIRME VARCHAR(100)
	DECLARE	@ADRESA VARCHAR(100)
	DECLARE	@MJESTO VARCHAR(100)
	DECLARE	@MATICNIBROJ VARCHAR(13)
	DECLARE	@BROJRADNIKA INT
	DECLARE @brojradnikaveci int

	SET		@NAZIVFIRME = ''
	SET		@ADRESA = ''
	SET		@MJESTO = ''
	SET		@MATICNIBROJ = ''

	SELECT 	@NAZIVFIRME = KORISNIK1NAZIV,
			@ADRESA = KORISNIK1ADRESA,
			@MJESTO = KORISNIK1MJESTO,
			@MATICNIBROJ = KORISNIKOIB
	FROM 		KORISNIK 
	WHERE	IDKORISNIK = 1

--- STANDARDNI OBRAZAC
IF @VOLONTERI = 0 
BEGIN
set @brojradnika = (SELECT COUNT(DISTINCT OBRACUNELEMENTI.IDRADNIK) FROM OBRACUN INNER JOIN OBRACUNRADNICI ON OBRACUN.IDOBRACUN = OBRACUNRADNICI.IDOBRACUN INNER JOIN
OBRACUNELEMENTI ON OBRACUNRADNICI.IDOBRACUN = OBRACUNELEMENTI.IDOBRACUN
WHERE (OBRACUN.IDOBRACUN = @IDOBRACUN OR @IDOBRACUN = '') AND (OBRACUN.MJESECISPLATE = @MJESECISPLATE OR @MJESECISPLATE = '') 
AND (OBRACUN.GODINAISPLATE = @GODINAISPLATE OR @GODINAISPLATE = '') AND OBRACUNELEMENTI.OBRIZNOS &gt; 0 AND OBRACUNRADNICI.IDIPIDENT &lt;&gt; 11 )

set @brojradnikaveci = (SELECT COUNT(DISTINCT OBRACUNELEMENTI.IDRADNIK) FROM OBRACUN INNER JOIN OBRACUNRADNICI ON OBRACUN.IDOBRACUN = OBRACUNRADNICI.IDOBRACUN INNER JOIN
OBRACUNELEMENTI ON OBRACUNRADNICI.IDOBRACUN = OBRACUNELEMENTI.IDOBRACUN
WHERE (OBRACUN.IDOBRACUN = @IDOBRACUN OR @IDOBRACUN = '') AND (OBRACUN.MJESECISPLATE = @MJESECISPLATE OR @MJESECISPLATE = '') 
AND (OBRACUN.GODINAISPLATE = @GODINAISPLATE OR @GODINAISPLATE = ''  AND OBRACUNRADNICI.IDIPIDENT &lt;&gt; 11))



	SELECT	1 AS IDIDOBRASCA,
			@NAZIVFIRME AS NAZIVFIRME,
			@ADRESA + ', ' + @MJESTO AS PUNAADRESA,
			@MATICNIBROJ AS MATICNIBROJ,
			'1' AS IDENTIFIKATOR,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOBRUTO), 0) AS REDAK_II_1,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOMIOI), 0) + ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOMIOII), 0) + ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOMIOPRIJE2003), 0) + ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOZIVOTNO), 0) + ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNODOPZDRAV), 0) + ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNODOBMIROV), 0) AS REDAK_II_2,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOMIOI), 0) + ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOMIOII), 0) + ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOMIOPRIJE2003), 0) AS REDAK_II_2_1,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOMIOI), 0) AS REDAK_II_2_1_1,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOMIOII), 0) AS REDAK_II_2_1_2,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOMIOPRIJE2003), 0) AS REDAK_II_2_1_3,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOZIVOTNO), 0) + ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNODOPZDRAV), 0) + ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNODOBMIROV), 0) AS REDAK_II_2_2,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOZIVOTNO), 0) AS REDAK_II_2_2_1,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNODOPZDRAV), 0) AS REDAK_II_2_2_2,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNODOBMIROV), 0) AS REDAK_II_2_2_3,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOBRUTO), 0) - (ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOMIOI), 0) + ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOMIOII), 0) + ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOMIOPRIJE2003), 0) + ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOZIVOTNO), 0) + ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNODOPZDRAV), 0) + ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNODOBMIROV), 0)) AS REDAK_II_3,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOOO), 0) AS REDAK_II_4,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOBRUTO), 0) - (ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOMIOI), 0) + ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOMIOII), 0) + ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOMIOPRIJE2003), 0) + ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOZIVOTNO), 0) + ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNODOPZDRAV), 0) + ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNODOBMIROV), 0)) - ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOOO), 0) AS REDAK_II_5,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOPOREZ), 0) + ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOPRIREZ), 0) AS REDAK_II_6,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOPOREZ), 0) AS REDAK_II_6_1,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOPRIREZ), 0) AS REDAK_II_6_2,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOPOREZ), 0) + ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOPRIREZ), 0) AS REDAK_II_7,
			@BROJRADNIKA AS REDAK_II_8,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOMIOIO), 0) AS REDAK_III_1_1,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOMIOIP), 0) AS REDAK_III_1_2,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOMIOIIO), 0) AS REDAK_III_2_1,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOMIOIIP), 0) AS REDAK_III_2_2,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOZDRO), 0) AS REDAK_III_3_1,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOZDRP), 0) AS REDAK_III_3_2,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOZDRI), 0) AS REDAK_III_3_3,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOZAP), 0) AS REDAK_III_4_1,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOZAPI), 0) AS REDAK_III_4_2,
			@brojradnikaveci AS REDAK_III_5,
			GETDATE() AS DATUMSASTAVLJANJA
	FROM		VW_PLACA_ID_UKUPNO
	WHERE	(VW_PLACA_ID_UKUPNO.IDOBRACUN = @IDOBRACUN OR @IDOBRACUN = '')
	AND		(VW_PLACA_ID_UKUPNO.MJESECISPLATE = @MJESECISPLATE OR @MJESECISPLATE = '')
	AND		(VW_PLACA_ID_UKUPNO.GODINAISPLATE = @GODINAISPLATE OR @GODINAISPLATE = '')
	AND (VW_PLACA_ID_UKUPNO.IDENTIFIKATOR &lt;&gt; 11)
	
END

--- OBRAZAC ZA VOLONTERE
IF @VOLONTERI = 1
BEGIN

set @brojradnika = (SELECT COUNT(DISTINCT OBRACUNRADNICI.IDRADNIK) FROM OBRACUN INNER JOIN OBRACUNRADNICI 
ON OBRACUN.IDOBRACUN = OBRACUNRADNICI.IDOBRACUN 
WHERE (OBRACUN.IDOBRACUN = @IDOBRACUN OR @IDOBRACUN = '') AND (OBRACUN.MJESECISPLATE = @MJESECISPLATE OR @MJESECISPLATE = '') 
AND (OBRACUN.GODINAISPLATE = @GODINAISPLATE OR @GODINAISPLATE = '')  AND OBRACUNRADNICI.IDIPIDENT = 11)

set @brojradnikaveci = (SELECT COUNT(DISTINCT OBRACUNRADNICI.IDRADNIK) FROM OBRACUN INNER JOIN OBRACUNRADNICI 
ON OBRACUN.IDOBRACUN = OBRACUNRADNICI.IDOBRACUN 
WHERE (OBRACUN.IDOBRACUN = @IDOBRACUN OR @IDOBRACUN = '') AND (OBRACUN.MJESECISPLATE = @MJESECISPLATE OR @MJESECISPLATE = '') 
AND (OBRACUN.GODINAISPLATE = @GODINAISPLATE OR @GODINAISPLATE = '') AND   (OBRACUNRADNICI.IDIPIDENT = 11))







	SELECT	1 AS IDIDOBRASCA,
			@NAZIVFIRME AS NAZIVFIRME,
			@ADRESA + ', ' + @MJESTO AS PUNAADRESA,
			@MATICNIBROJ AS MATICNIBROJ,
			'11' AS IDENTIFIKATOR,
			0 AS REDAK_II_1,
			0 AS REDAK_II_2,
			0 AS REDAK_II_2_1,
			0 AS REDAK_II_2_1_1,
			0 AS REDAK_II_2_1_2,
			0 AS REDAK_II_2_1_3,
			0 AS REDAK_II_2_2,
			0 AS REDAK_II_2_2_1,
			0 AS REDAK_II_2_2_2,
			0 AS REDAK_II_2_2_3,
			0 AS REDAK_II_3,
			0 AS REDAK_II_4,
			0 AS REDAK_II_5,
			0 AS REDAK_II_6,
			0 AS REDAK_II_6_1,
			0 AS REDAK_II_6_2,
			0 AS REDAK_II_7,
			0 AS REDAK_II_8,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOMIOIO), 0) AS REDAK_III_1_1,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOMIOIP), 0) AS REDAK_III_1_2,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOMIOIIO), 0) AS REDAK_III_2_1,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOMIOIIP), 0) AS REDAK_III_2_2,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOZDRO), 0) AS REDAK_III_3_1,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOZDRP), 0) AS REDAK_III_3_2,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOZDRI), 0) AS REDAK_III_3_3,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOZAP), 0) AS REDAK_III_4_1,
			ISNULL(SUM(VW_PLACA_ID_UKUPNO.UKUPNOZAPI), 0) AS REDAK_III_4_2,
			@brojradnikaveci AS REDAK_III_5,
			GETDATE() AS DATUMSASTAVLJANJA
	FROM		VW_PLACA_ID_UKUPNO 
		WHERE	(VW_PLACA_ID_UKUPNO.IDOBRACUN = @IDOBRACUN OR @IDOBRACUN = '')
	AND		(VW_PLACA_ID_UKUPNO.MJESECISPLATE = @MJESECISPLATE OR @MJESECISPLATE = '')
	AND		(VW_PLACA_ID_UKUPNO.GODINAISPLATE = @GODINAISPLATE OR @GODINAISPLATE = '')
	
	AND (VW_PLACA_ID_UKUPNO.IDENTIFIKATOR = 11)
	
END
END
GO



IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_ID_REDOVI]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_ID_REDOVI]
GO






CREATE PROCEDURE [dbo].[S_PLACA_ID_REDOVI]
(

@IDOBRACUN varchar(11) = '',
@MJESECISPLATE varchar(2) = '',
@GODINAISPLATE varchar(4) = '',
@VOLONTERI INT = 0 
)
AS
BEGIN


	CREATE TABLE #TEMP_DETALJI (
		IDIDOBRASCA int NOT NULL ,
		REDNIBROJ int IDENTITY (1, 1) NOT NULL ,
		IDOPCINE nvarchar (50) NOT NULL ,
		NAZIVOPCINE nvarchar (100) NOT NULL ,
		OBRACUNANIPOREZ decimal(18, 2) NOT NULL ,
		OBRACUNANIPRIREZ decimal(18, 2) NOT NULL ,
		OBRACUNANOUKUPNO decimal(18, 2) NOT NULL 
	)
	
	IF @VOLONTERI = 0
	BEGIN
	INSERT INTO   	#TEMP_DETALJI (
		IDIDOBRASCA,
		IDOPCINE,
		NAZIVOPCINE,
		OBRACUNANIPOREZ,
		OBRACUNANIPRIREZ,
		OBRACUNANOUKUPNO
	)
	SELECT	1 AS IDIDOBRASCA, 
			LEFT(OBRACUNRADNICI.SIFRAOPCINESTANOVANJA, 3) AS IDOPCINE, 
			OPCINA.NAZIVOPCINE, 
			ISNULL(SUM(OBRACUN_POREZ.UKUPNOPOREZ), 0) AS OBRACUNANIPOREZ, SUM(OBRACUNRADNICI.OBRACUNATIPRIREZ) + SUM(OBRACUNRADNICI.KOREKCIJAPRIREZA) AS OBRACUNANIPRIREZ, 
			ISNULL(SUM(OBRACUN_POREZ.UKUPNOPOREZ), 0) + SUM(OBRACUNRADNICI.OBRACUNATIPRIREZ) + SUM(OBRACUNRADNICI.KOREKCIJAPRIREZA) AS OBRACUNANOUKUPNO
	FROM         	OBRACUN 
	INNER JOIN	OBRACUNRADNICI ON OBRACUN.IDOBRACUN = OBRACUNRADNICI.IDOBRACUN 
	INNER JOIN	(SELECT IDOBRACUN, IDRADNIK, SUM(OBRACUNATIPOREZ) AS UKUPNOPOREZ FROM OBRACUNPOREZI GROUP BY IDOBRACUN, IDRADNIK) OBRACUN_POREZ ON OBRACUNRADNICI.IDOBRACUN = OBRACUN_POREZ.IDOBRACUN AND OBRACUNRADNICI.IDRADNIK = OBRACUN_POREZ.IDRADNIK 
	INNER JOIN	RADNIK ON OBRACUNRADNICI.IDRADNIK = RADNIK.IDRADNIK 
	INNER JOIN	OPCINA ON OBRACUNRADNICI.SIFRAOPCINESTANOVANJA = OPCINA.IDOPCINE
	WHERE	(OBRACUN.IDOBRACUN = @IDOBRACUN OR @IDOBRACUN = '')
	AND		(OBRACUN.MJESECISPLATE = @MJESECISPLATE OR @MJESECISPLATE = '')
	AND		(OBRACUN.GODINAISPLATE = @GODINAISPLATE OR @GODINAISPLATE = '')
	AND (OBRACUNRADNICI.IDIPIDENT &lt;&gt; 11)
	
	GROUP BY 	OBRACUNRADNICI.SIFRAOPCINESTANOVANJA, 
			OPCINA.NAZIVOPCINE
	ORDER BY 	OBRACUNRADNICI.SIFRAOPCINESTANOVANJA

	SELECT 	*
	FROM		#TEMP_DETALJI
END


IF @VOLONTERI = 1
BEGIN
INSERT INTO   	#TEMP_DETALJI (
		IDIDOBRASCA,
		IDOPCINE,
		NAZIVOPCINE,
		OBRACUNANIPOREZ,
		OBRACUNANIPRIREZ,
		OBRACUNANOUKUPNO
	)
	SELECT	1 AS IDIDOBRASCA, 
			LEFT(OBRACUNRADNICI.SIFRAOPCINESTANOVANJA, 3) AS IDOPCINE, 
			OPCINA.NAZIVOPCINE, 
			ISNULL(SUM(OBRACUN_POREZ.UKUPNOPOREZ), 0) AS OBRACUNANIPOREZ, SUM(OBRACUNRADNICI.OBRACUNATIPRIREZ) + SUM(OBRACUNRADNICI.KOREKCIJAPRIREZA) AS OBRACUNANIPRIREZ, 
			ISNULL(SUM(OBRACUN_POREZ.UKUPNOPOREZ), 0) + SUM(OBRACUNRADNICI.OBRACUNATIPRIREZ) + SUM(OBRACUNRADNICI.KOREKCIJAPRIREZA) AS OBRACUNANOUKUPNO
	FROM         	OBRACUN 
	INNER JOIN	OBRACUNRADNICI ON OBRACUN.IDOBRACUN = OBRACUNRADNICI.IDOBRACUN 
	INNER JOIN	(SELECT IDOBRACUN, IDRADNIK, SUM(OBRACUNATIPOREZ) AS UKUPNOPOREZ FROM OBRACUNPOREZI GROUP BY IDOBRACUN, IDRADNIK) OBRACUN_POREZ ON OBRACUNRADNICI.IDOBRACUN = OBRACUN_POREZ.IDOBRACUN AND OBRACUNRADNICI.IDRADNIK = OBRACUN_POREZ.IDRADNIK 
	INNER JOIN	RADNIK ON OBRACUNRADNICI.IDRADNIK = RADNIK.IDRADNIK 
	INNER JOIN	OPCINA ON OBRACUNRADNICI.SIFRAOPCINESTANOVANJA = OPCINA.IDOPCINE
	WHERE	(OBRACUN.IDOBRACUN = @IDOBRACUN OR @IDOBRACUN = '')
	AND		(OBRACUN.MJESECISPLATE = @MJESECISPLATE OR @MJESECISPLATE = '')
	AND		(OBRACUN.GODINAISPLATE = @GODINAISPLATE OR @GODINAISPLATE = '')
	AND (OBRACUNRADNICI.IDIPIDENT = 11)
	
	GROUP BY 	OBRACUNRADNICI.SIFRAOPCINESTANOVANJA, 
			OPCINA.NAZIVOPCINE
	ORDER BY 	OBRACUNRADNICI.SIFRAOPCINESTANOVANJA

	SELECT 	*
	FROM		#TEMP_DETALJI
END
END
GO



IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_IP]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_IP]
GO



CREATE PROCEDURE [dbo].[S_PLACA_IP]
(
@GODINA int,
@IDRADNIK int = NULL
)
AS
BEGIN

declare @koristijmbg as bit
declare @duzina as int
select @duzina = (select isnull(len(max(dosjmbg)),0) from dosipzaglavljelevel1)

if @duzina = 13 
select @koristijmbg = 1
else
select @koristijmbg = 0




IF @KORISTIJMBG = 0
BEGIN
	SET NOCOUNT ON

	SELECT	1 AS oznacen,
			VW_PLACA_ZAPOSLENIK_UKUPNO.IDIPIDENT,
			RADNIK.OIB,
			RADNIK.oib AS JMBG,
			RADNIK.PREZIME,
			RADNIK.IME,
			RTRIM(ISNULL(RADNIK.ULICA, '') + ' ' + ISNULL(RADNIK.KUCNIBROJ, '')) + ', ' + ISNULL(RADNIK.MJESTO, '') AS ADRESA,
			GODINAISPLATE AS ISPLATAUGODINI,
			CASE VW_PLACA_ZAPOSLENIK_UKUPNO.IDIPIDENT  WHEN 3 THEN CAST(GODINAISPLATE AS INT)-2 ELSE VW_PLACA_ZAPOSLENIK_UKUPNO.GODINAISPLATE END AS ISPLATAZAGODINU
	FROM		VW_PLACA_ZAPOSLENIK_UKUPNO
	INNER JOIN	RADNIK
	ON		VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK = RADNIK.IDRADNIK
	WHERE	GODINAISPLATE = @GODINA
	AND		RADNIK.IDRADNIK = COALESCE(@IDRADNIK, RADNIK.IDRADNIK)
	GROUP BY	VW_PLACA_ZAPOSLENIK_UKUPNO.IDIPIDENT,
			RADNIK.OIB,
			RADNIK.JMBG,
			RADNIK.PREZIME,
			RADNIK.IME,
			RADNIK.ULICA,
			RADNIK.KUCNIBROJ,
			RADNIK.MJESTO,
			GODINAISPLATE,
			CASE VW_PLACA_ZAPOSLENIK_UKUPNO.IDIPIDENT  WHEN 3 THEN CAST(GODINAISPLATE AS INT)-2  ELSE VW_PLACA_ZAPOSLENIK_UKUPNO.GODINAISPLATE END

UNION


SELECT     dbo.DOSIPZAGLAVLJE.DOSOZNACEN, dbo.DOSIPZAGLAVLJE.DOSIPIDENT,RADNIK.OIB,dbo.DOSIPZAGLAVLJE.DOSJMBG, dbo.RADNIK.PREZIME, 
                      dbo.RADNIK.IME, RTRIM(ISNULL(dbo.RADNIK.ulica, N'') + ' ' + ISNULL(dbo.RADNIK.kucnibroj, N'')) + ', ' + ISNULL(dbo.RADNIK.mjesto, N'') AS ADRESA, 
                      dbo.DOSIPZAGLAVLJE.DOSISPLATAUGODINI, dbo.DOSIPZAGLAVLJE.DOSISPLATAZAGODINU
FROM         dbo.DOSIPZAGLAVLJE INNER JOIN
                      dbo.RADNIK ON dbo.DOSIPZAGLAVLJE.DOSJMBG = dbo.RADNIK.oib
WHERE	DOSIPZAGLAVLJE.DOSISPLATAUGODINI = @GODINA
	AND		RADNIK.IDRADNIK = COALESCE(@IDRADNIK, RADNIK.IDRADNIK)
ORDER BY RADNIK.PREZIME,RADNIK.IME
END

IF @KORISTIJMBG = 1
BEGIN
	SET NOCOUNT ON

	SELECT	1 AS oznacen,
			VW_PLACA_ZAPOSLENIK_UKUPNO.IDIPIDENT,
			RADNIK.OIB,
			RADNIK.JMBG AS JMBG,
			RADNIK.PREZIME,
			RADNIK.IME,
			RTRIM(ISNULL(RADNIK.ULICA, '') + ' ' + ISNULL(RADNIK.KUCNIBROJ, '')) + ', ' + ISNULL(RADNIK.MJESTO, '') AS ADRESA,
			GODINAISPLATE AS ISPLATAUGODINI,
			CASE VW_PLACA_ZAPOSLENIK_UKUPNO.IDIPIDENT  WHEN 3 THEN CAST(GODINAISPLATE AS INT)-2 ELSE VW_PLACA_ZAPOSLENIK_UKUPNO.GODINAISPLATE END AS ISPLATAZAGODINU
	FROM		VW_PLACA_ZAPOSLENIK_UKUPNO
	INNER JOIN	RADNIK
	ON		VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK = RADNIK.IDRADNIK
	WHERE	GODINAISPLATE = @GODINA
	AND		RADNIK.IDRADNIK = COALESCE(@IDRADNIK, RADNIK.IDRADNIK)
	GROUP BY	VW_PLACA_ZAPOSLENIK_UKUPNO.IDIPIDENT,
			RADNIK.OIB,
			RADNIK.JMBG,
			RADNIK.PREZIME,
			RADNIK.IME,
			RADNIK.ULICA,
			RADNIK.KUCNIBROJ,
			RADNIK.MJESTO,
			GODINAISPLATE,
			CASE VW_PLACA_ZAPOSLENIK_UKUPNO.IDIPIDENT  WHEN 3 THEN CAST(GODINAISPLATE AS INT)-2  ELSE VW_PLACA_ZAPOSLENIK_UKUPNO.GODINAISPLATE END

UNION


SELECT     dbo.DOSIPZAGLAVLJE.DOSOZNACEN, dbo.DOSIPZAGLAVLJE.DOSIPIDENT,RADNIK.OIB,dbo.DOSIPZAGLAVLJE.DOSJMBG, dbo.RADNIK.PREZIME, 
                      dbo.RADNIK.IME, RTRIM(ISNULL(dbo.RADNIK.ulica, N'') + ' ' + ISNULL(dbo.RADNIK.kucnibroj, N'')) + ', ' + ISNULL(dbo.RADNIK.mjesto, N'') AS ADRESA, 
                      dbo.DOSIPZAGLAVLJE.DOSISPLATAUGODINI, dbo.DOSIPZAGLAVLJE.DOSISPLATAZAGODINU
FROM         dbo.DOSIPZAGLAVLJE INNER JOIN
                      dbo.RADNIK ON dbo.DOSIPZAGLAVLJE.DOSJMBG = dbo.RADNIK.JMBG
WHERE	DOSIPZAGLAVLJE.DOSISPLATAUGODINI = @GODINA
	AND		RADNIK.IDRADNIK = COALESCE(@IDRADNIK, RADNIK.IDRADNIK)
ORDER BY RADNIK.PREZIME,RADNIK.IME
END
END
GO




IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_IP_REDOVI]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_IP_REDOVI]
GO


CREATE PROCEDURE [dbo].[S_PLACA_IP_REDOVI]
(
@GODINA int,
@IDRADNIK int = NULL
)
AS
BEGIN
declare @koristijmbg as bit
declare @duzina as int
select @duzina = (select isnull(len(max(dosjmbg)),0) from dosipzaglavljelevel1)

if @duzina = 13 
select @koristijmbg = 1
else
select @koristijmbg = 0


IF @KORISTIJMBG = 0
BEGIN

	SET NOCOUNT ON
	SELECT	
			RADNIK.OIB,
			RADNIK.OIB AS JMBG,
			ot.IDIPIDENT, 
			MJESECISPLATE,
			LEFT(ISNULL(RADNIK.OPCINASTANOVANJAIDOPCINE, '000'), 3) AS IDOPCINESTANOVANJA,
			UKUPNOBRUTO,
			UKUPNODOPRINOSI,
			UKUPNOPOREZNOPRIZNATEOLAKSICE,
			UKUPNOBRUTO - UKUPNODOPRINOSI - UKUPNOPOREZNOPRIZNATEOLAKSICE AS DOHODAK,
			UKUPNOOO,
			UKUPNOBRUTO - UKUPNODOPRINOSI - UKUPNOPOREZNOPRIZNATEOLAKSICE - UKUPNOOO AS POREZNAOSNOVICA,
			UKUPNOPOREZIPRIREZ,
			ISNULL(UKUPNOBRUTO - UKUPNODOPRINOSI - UKUPNOPOREZNOPRIZNATEOLAKSICE - UKUPNOPOREZIPRIREZ - POREZKRIZNI,0) AS NETOISPLATA,
			ISNULL(UKUPNOBRUTO - UKUPNODOPRINOSI - UKUPNOPOREZNOPRIZNATEOLAKSICE - UKUPNOPOREZIPRIREZ,0) AS NETOPLACA,
			ISNULL(POREZKRIZNI,0) AS POREZKRIZNI,
			RADNIK.PREZIME,RADNIK.IME
	FROM		
	(
		SELECT     	IDIPIDENT, 
				MJESECISPLATE, 
				GODINAISPLATE, 
				IDRADNIK, 
				SUM(UKUPNOBRUTO) AS UKUPNOBRUTO, 
				SUM(UKUPNOOSNOVICAZADOPRINOS) AS UKUPNOOSNOVICAZADOPRINOS, 
				SUM(UKUPNODOPRINOSI) AS UKUPNODOPRINOSI, 
				SUM(UKUPNOOO) AS UKUPNOOO, 
				SUM(UKUPNOOLAKSICE) AS UKUPNOOLAKSICE, 
				SUM(UKUPNOPOREZNOPRIZNATEOLAKSICE) AS UKUPNOPOREZNOPRIZNATEOLAKSICE, 
				SUM(POREZNAOSNOVICA) AS POREZNAOSNOVICA, 
				SUM(UKUPNOPOREZ) AS UKUPNOPOREZ, 
				SUM(UKUPNOPRIREZ) AS UKUPNOPRIREZ, 
				SUM(UKUPNOPOREZIPRIREZ) AS UKUPNOPOREZIPRIREZ,
				SUM(NETOPLACA) AS NETOPLACA, 
				SUM(UKUPNONETONAKNADE) AS UKUPNONETONAKNADE, 
				SUM(NETOPRIMANJA) AS NETOPRIMANJA, 
				SUM(UKUPNOOBUSTAVE) AS UKUPNOOBUSTAVE, 
				SUM(UKUPNOZAISPLATU) AS UKUPNOZAISPLATU,
				ISNULL(SUM(POREZKRIZNI),0) AS POREZKRIZNI
		FROM         	VW_PLACA_ZAPOSLENIK_UKUPNO
		GROUP BY 	IDIPIDENT, 
				MJESECISPLATE, 
				GODINAISPLATE, 
				IDRADNIK
	) ot
	INNER JOIN	RADNIK
	ON		ot.IDRADNIK = RADNIK.IDRADNIK
	WHERE	GODINAISPLATE = @GODINA
	AND		RADNIK.IDRADNIK = COALESCE(@IDRADNIK, RADNIK.IDRADNIK)


UNION 

SELECT RADNIK.OIB,dosipzaglavljelevel1.DOSJMBG,dosipzaglavljelevel1.[DOSIPIDENT]
      
      ,[DOSMJESECISPLATE]
      ,[DOSIDOPCINESTANOVANJA]
      ,[DOSUKUPNOBRUTO]
      ,[DOSUKUPNODOPRINOSI]
      ,[DOSUKUPNOOLAKSICE]
      ,[DOSDOHODAK]
      ,[DOSUKUPNOOO]
      ,[DOSPOREZNAOSNOVICA]
      ,[DOSUKUPNOPOREZIPRIREZ]
      ,[DOSUKUPNONETOISPLATA]
		,[DOSUKUPNONETOISPLATA] AS NETOPLACA
		,[DOSPOSEBANPOREZ] AS POREZKRIZNI,
	radnik.prezime,radnik.ime
  FROM [dbo].[DOSIPZAGLAVLJELevel1]
	inner join radnik on [DOSIPZAGLAVLJELevel1].dosjmbg = radnik.oib 
		inner join dosipzaglavlje on dosipzaglavljelevel1.dosjmbg = dosipzaglavlje.dosjmbg
WHERE	dosipzaglavlje.dosisplataugodini = @godina
	AND		RADNIK.IDRADNIK = COALESCE(@IDRADNIK, RADNIK.IDRADNIK)
order by RADNIK.PREZIME,RADNIK.IME,MJESECISPLATE
END


IF @KORISTIJMBG = 1
BEGIN
	SET NOCOUNT ON
	SELECT	
			RADNIK.OIB,
			RADNIK.JMBG AS JMBG,
			ot.IDIPIDENT, 
			MJESECISPLATE,
			LEFT(ISNULL(RADNIK.OPCINASTANOVANJAIDOPCINE, '000'), 3) AS IDOPCINESTANOVANJA,
			UKUPNOBRUTO,
			UKUPNODOPRINOSI,
			UKUPNOPOREZNOPRIZNATEOLAKSICE,
			UKUPNOBRUTO - UKUPNODOPRINOSI - UKUPNOPOREZNOPRIZNATEOLAKSICE AS DOHODAK,
			UKUPNOOO,
			UKUPNOBRUTO - UKUPNODOPRINOSI - UKUPNOPOREZNOPRIZNATEOLAKSICE - UKUPNOOO AS POREZNAOSNOVICA,
			UKUPNOPOREZIPRIREZ,
			ISNULL(UKUPNOBRUTO - UKUPNODOPRINOSI - UKUPNOPOREZNOPRIZNATEOLAKSICE - UKUPNOPOREZIPRIREZ - POREZKRIZNI,0) AS NETOISPLATA,
			ISNULL(UKUPNOBRUTO - UKUPNODOPRINOSI - UKUPNOPOREZNOPRIZNATEOLAKSICE - UKUPNOPOREZIPRIREZ,0) AS NETOPLACA,
			ISNULL(POREZKRIZNI,0) AS POREZKRIZNI,
			RADNIK.PREZIME,RADNIK.IME
	FROM		
	(
		SELECT     	IDIPIDENT, 
				MJESECISPLATE, 
				GODINAISPLATE, 
				IDRADNIK, 
				SUM(UKUPNOBRUTO) AS UKUPNOBRUTO, 
				SUM(UKUPNOOSNOVICAZADOPRINOS) AS UKUPNOOSNOVICAZADOPRINOS, 
				SUM(UKUPNODOPRINOSI) AS UKUPNODOPRINOSI, 
				SUM(UKUPNOOO) AS UKUPNOOO, 
				SUM(UKUPNOOLAKSICE) AS UKUPNOOLAKSICE, 
				SUM(UKUPNOPOREZNOPRIZNATEOLAKSICE) AS UKUPNOPOREZNOPRIZNATEOLAKSICE, 
				SUM(POREZNAOSNOVICA) AS POREZNAOSNOVICA, 
				SUM(UKUPNOPOREZ) AS UKUPNOPOREZ, 
				SUM(UKUPNOPRIREZ) AS UKUPNOPRIREZ, 
				SUM(UKUPNOPOREZIPRIREZ) AS UKUPNOPOREZIPRIREZ,
				SUM(NETOPLACA) AS NETOPLACA, 
				SUM(UKUPNONETONAKNADE) AS UKUPNONETONAKNADE, 
				SUM(NETOPRIMANJA) AS NETOPRIMANJA, 
				SUM(UKUPNOOBUSTAVE) AS UKUPNOOBUSTAVE, 
				SUM(UKUPNOZAISPLATU) AS UKUPNOZAISPLATU,
				ISNULL(SUM(POREZKRIZNI),0) AS POREZKRIZNI
		FROM         	VW_PLACA_ZAPOSLENIK_UKUPNO
		GROUP BY 	IDIPIDENT, 
				MJESECISPLATE, 
				GODINAISPLATE, 
				IDRADNIK
	) ot
	INNER JOIN	RADNIK
	ON		ot.IDRADNIK = RADNIK.IDRADNIK
	WHERE	GODINAISPLATE = @GODINA
	AND		RADNIK.IDRADNIK = COALESCE(@IDRADNIK, RADNIK.IDRADNIK)


UNION 

SELECT RADNIK.OIB,dosipzaglavljelevel1.DOSJMBG,dosipzaglavljelevel1.[DOSIPIDENT]
      
      ,[DOSMJESECISPLATE]
      ,[DOSIDOPCINESTANOVANJA]
      ,[DOSUKUPNOBRUTO]
      ,[DOSUKUPNODOPRINOSI]
      ,[DOSUKUPNOOLAKSICE]
      ,[DOSDOHODAK]
      ,[DOSUKUPNOOO]
      ,[DOSPOREZNAOSNOVICA]
      ,[DOSUKUPNOPOREZIPRIREZ]
      ,[DOSUKUPNONETOISPLATA]
		,[DOSUKUPNONETOISPLATA] AS NETOPLACA
		,[DOSPOSEBANPOREZ] AS POREZKRIZNI,
	radnik.prezime,radnik.ime
  FROM [dbo].[DOSIPZAGLAVLJELevel1]
	inner join radnik on [DOSIPZAGLAVLJELevel1].dosjmbg = radnik.JMBG 
		inner join dosipzaglavlje on dosipzaglavljelevel1.dosjmbg = dosipzaglavlje.dosjmbg
WHERE	dosipzaglavlje.dosisplataugodini = @godina
	AND		RADNIK.IDRADNIK = COALESCE(@IDRADNIK, RADNIK.IDRADNIK)
order by RADNIK.PREZIME,RADNIK.IME,MJESECISPLATE
END
END
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_IP_ZBIRNI]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_IP_ZBIRNI]
GO



CREATE PROCEDURE [dbo].[S_PLACA_IP_ZBIRNI]
(

	@GODINA VARCHAR(4)
)
AS
BEGIN

SELECT	
				
			
			SUM(UKUPNOBRUTO) as ukupnobruto,
			SUM(UKUPNODOPRINOSI) as ukupnodoprinosi,
			SUM(UKUPNOPOREZNOPRIZNATEOLAKSICE) as ukupnoolaksice,
			SUM(UKUPNOBRUTO - UKUPNODOPRINOSI - UKUPNOPOREZNOPRIZNATEOLAKSICE) AS DOHODAK,
			SUM(UKUPNOOO) as ukupnooo,
			SUM(UKUPNOBRUTO - UKUPNODOPRINOSI - UKUPNOPOREZNOPRIZNATEOLAKSICE - UKUPNOOO) AS POREZNAOSNOVICA,
			SUM(UKUPNOPOREZIPRIREZ) as porezprirez,
			SUM(ISNULL(UKUPNOBRUTO - UKUPNODOPRINOSI - UKUPNOPOREZNOPRIZNATEOLAKSICE - UKUPNOPOREZIPRIREZ - POREZKRIZNI,0)) AS NETOISPLATA,
			SUM(ISNULL(UKUPNOBRUTO - UKUPNODOPRINOSI - UKUPNOPOREZNOPRIZNATEOLAKSICE - UKUPNOPOREZIPRIREZ,0)) AS NETOPLACA,
			SUM(ISNULL(POREZKRIZNI,0)) AS POREZKRIZNI,
			T.PREZIME,T.IME,T.OIB
FROM 


(

	SELECT	
			
				
			
			UKUPNOBRUTO,
			UKUPNODOPRINOSI,
			UKUPNOPOREZNOPRIZNATEOLAKSICE,
			UKUPNOBRUTO - UKUPNODOPRINOSI - UKUPNOPOREZNOPRIZNATEOLAKSICE AS DOHODAK,
			UKUPNOOO,
			UKUPNOBRUTO - UKUPNODOPRINOSI - UKUPNOPOREZNOPRIZNATEOLAKSICE - UKUPNOOO AS POREZNAOSNOVICA,
			UKUPNOPOREZIPRIREZ,
			ISNULL(UKUPNOBRUTO - UKUPNODOPRINOSI - UKUPNOPOREZNOPRIZNATEOLAKSICE - UKUPNOPOREZIPRIREZ - POREZKRIZNI,0) AS NETOISPLATA,
			ISNULL(UKUPNOBRUTO - UKUPNODOPRINOSI - UKUPNOPOREZNOPRIZNATEOLAKSICE - UKUPNOPOREZIPRIREZ,0) AS NETOPLACA,
			ISNULL(POREZKRIZNI,0) AS POREZKRIZNI,
			RADNIK.PREZIME,RADNIK.IME,RADNIK.OIB
	FROM		
	(
		SELECT     	
				
				GODINAISPLATE, 
				IDRADNIK, 
				SUM(UKUPNOBRUTO) AS UKUPNOBRUTO, 
				SUM(UKUPNOOSNOVICAZADOPRINOS) AS UKUPNOOSNOVICAZADOPRINOS, 
				SUM(UKUPNODOPRINOSI) AS UKUPNODOPRINOSI, 
				SUM(UKUPNOOO) AS UKUPNOOO, 
				SUM(UKUPNOOLAKSICE) AS UKUPNOOLAKSICE, 
				SUM(UKUPNOPOREZNOPRIZNATEOLAKSICE) AS UKUPNOPOREZNOPRIZNATEOLAKSICE, 
				SUM(POREZNAOSNOVICA) AS POREZNAOSNOVICA, 
				SUM(UKUPNOPOREZ) AS UKUPNOPOREZ, 
				SUM(UKUPNOPRIREZ) AS UKUPNOPRIREZ, 
				SUM(UKUPNOPOREZIPRIREZ) AS UKUPNOPOREZIPRIREZ,
				SUM(NETOPLACA) AS NETOPLACA, 
				SUM(UKUPNONETONAKNADE) AS UKUPNONETONAKNADE, 
				SUM(NETOPRIMANJA) AS NETOPRIMANJA, 
				SUM(UKUPNOOBUSTAVE) AS UKUPNOOBUSTAVE, 
				SUM(UKUPNOZAISPLATU) AS UKUPNOZAISPLATU,
				ISNULL(SUM(POREZKRIZNI),0) AS POREZKRIZNI
		FROM         	VW_PLACA_ZAPOSLENIK_UKUPNO
		GROUP BY 	GODINAISPLATE,IDRADNIK
				
			
				
	) ot
	INNER JOIN	RADNIK
	ON		ot.IDRADNIK = RADNIK.IDRADNIK
	WHERE	GODINAISPLATE = @GODINA
	


UNION
SELECT 
     
      
      SUM([DOSUKUPNOBRUTO])
      ,SUM([DOSUKUPNODOPRINOSI])
      ,SUM([DOSUKUPNOOLAKSICE])
      ,SUM([DOSDOHODAK])
      ,SUM([DOSUKUPNOOO])
      ,SUM([DOSPOREZNAOSNOVICA])
      ,SUM([DOSUKUPNOPOREZIPRIREZ])
      ,SUM([DOSUKUPNONETOISPLATA])
		,SUM([DOSUKUPNONETOISPLATA]) AS NETOPLACA
		,SUM([DOSPOSEBANPOREZ]) AS POREZKRIZNI,
	radnik.prezime,radnik.ime,RADNIK.OIB
  FROM [dbo].[DOSIPZAGLAVLJELevel1]
	inner join radnik on [DOSIPZAGLAVLJELevel1].dosjmbg = radnik.jmbg 
		inner join dosipzaglavlje on dosipzaglavljelevel1.dosjmbg = dosipzaglavlje.dosjmbg

WHERE	dosipzaglavlje.dosisplataugodini = @godina

GROUP BY RADNIK.PREZIME,RADNIK.IME,RADNIK.OIB

) AS T
 GROUP BY T.PREZIME,T.IME,T.OIB
ORDER BY 11,12
END
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_IPP]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_IPP]
GO





CREATE PROCEDURE dbo.S_PLACA_IPP
(
	@MJESEC VARCHAR(2),
	@GODINA VARCHAR(4)


)
AS
BEGIN

	SET NOCOUNT ON
	
SELECT SUM(NETOPLACA) AS OSNOVICAKRIZNOGPOREZA,SUM(POREZKRIZNI) AS KRIZNIPOREZ,COUNT(distinct IDRADNIK) AS BROJRADNIKA  
FROM  (
SELECT     IDRADNIK, ISNULL(SUM(porezkrizni), 0) AS POREZKRIZNI, ISNULL(SUM(NETOPLACA), 0) -  isnull(SUM(UKUPNOOLAKSICE),0) AS NETOPLACA
FROM         dbo.VW_PLACA_ZAPOSLENIK_UKUPNO
WHERE     (GODINAISPLATE = @GODINA) AND (MJESECISPLATE = @MJESEC)
GROUP BY IDRADNIK
HAVING      (ISNULL(SUM(porezkrizni), 0) &gt; 0)
) AS P

END





GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_ISPLATE_ZA_BANKU]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_ISPLATE_ZA_BANKU]
GO

create PROCEDURE [dbo].[S_PLACA_ISPLATE_ZA_BANKU] 
(
@IDOBRACUN varchar(11),
@VBDIBANKE varchar(7)
)
AS
BEGIN

	SET NOCOUNT ON
	
	SELECT	OBRACUNRADNICI.IDRADNIK, 
			RADNIK.PREZIME, 
			RADNIK.IME, 
			RADNIK.JMBG, 
			RADNIK.TEKUCI, 
	                      	RADNIK.SIFRAOPISAPLACANJANETO,
			RADNIK.OPISPLACANJANETO + Convert(varchar, OBRACUN.MJESECOBRACUNA) + '/' + Convert(varchar, OBRACUN.GODINAOBRACUNA) AS OPISPLACANJANETO, 
			BANKE.VBDIBANKE, 
			BANKE.ZRNBANKE, 
	                VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNOZAISPLATU  
	                +  ISNULL(KONACNIPOMOCNA.PRI,0)+ ISNULL(KONACNIPOMOCNA.POR,0) 
	                - isnull((SELECT SUM(iznosizuzeca) FROM OBRACUNOBRACUNLevel1ObracunIzuzece
                         WHERE OBRACUNOBRACUNLevel1ObracunIzuzece.idobracun = @idobracun AND OBRACUNOBRACUNLevel1ObracunIzuzece.idradnik = obracunradnici.idradnik),0)
                         
	                
	                
	                as UKUPNOZAISPLATU,
			banke.nazivbanke1
	FROM 		OBRACUN
	INNER JOIN	OBRACUNRADNICI ON OBRACUN.IDOBRACUN = OBRACUNRADNICI.IDOBRACUN
	INNER JOIN	RADNIK ON OBRACUNRADNICI.IDRADNIK = RADNIK.IDRADNIK 
	INNER JOIN	BANKE ON RADNIK.IDBANKE = BANKE.IDBANKE 
	INNER JOIN	VW_PLACA_ZAPOSLENIK_UKUPNO ON OBRACUNRADNICI.IDOBRACUN = VW_PLACA_ZAPOSLENIK_UKUPNO.IDOBRACUN AND OBRACUNRADNICI.IDRADNIK = VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK
	LEFT JOIN KONACNIPOMOCNA ON VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK = KONACNIPOMOCNA.IDRADNIK AND VW_PLACA_ZAPOSLENIK_UKUPNO.IDOBRACUN = KONACNIPOMOCNA.SIFRAOBRACUNA
	WHERE     	RADNIK.ZBIRNINETO = 1
	AND		OBRACUNRADNICI.IDOBRACUN = @IDOBRACUN
	AND		BANKE.VBDIBANKE = @VBDIBANKE
	AND 		VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNOZAISPLATU  
	                +  ISNULL(KONACNIPOMOCNA.PRI,0)+ ISNULL(KONACNIPOMOCNA.POR,0) 
	                - isnull((SELECT SUM(iznosizuzeca) FROM OBRACUNOBRACUNLevel1ObracunIzuzece
                         WHERE OBRACUNOBRACUNLevel1ObracunIzuzece.idobracun = @idobracun AND OBRACUNOBRACUNLevel1ObracunIzuzece.idradnik = obracunradnici.idradnik),0) &gt; 0
	ORDER BY 	BANKE.VBDIBANKE, 
			RADNIK.PREZIME, 
			RADNIK.IME

	SET NOCOUNT OFF
END
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_IZNOSI_PO_ZAPOSLENIKU]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_IZNOSI_PO_ZAPOSLENIKU]
GO







CREATE PROCEDURE dbo.S_PLACA_IZNOSI_PO_ZAPOSLENIKU
(
@IDOBRACUN varchar(11) = NULL,
@MJESECOBRACUNA varchar(2) = NULL,
@GODINAOBRACUNA varchar(4) = NULL,
@SORT int = 0
)
AS
BEGIN
	
	SET NOCOUNT ON

	IF @IDOBRACUN IS NOT NULL
	BEGIN
		SELECT     	VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK, 
				RADNIK.PREZIME, 
				RADNIK.IME, 
				VW_PLACA_ZAPOSLENIK_UKUPNO.SATIBRUTO,
		   		VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNOBRUTO, 
			  CASE WHEN dbo.OBRACUNRADNICI.OBRACUNSKIKOEFICIJENT = 0 THEN DBO.OBRACUNRADNICI.KOEFICIJENT ELSE DBO.OBRACUNRADNICI.OBRACUNSKIKOEFICIJENT END AS KOEFICIJENT, 
				VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNODOPRINOSI,
				VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNOPOREZIPRIREZ, 
				VW_PLACA_ZAPOSLENIK_UKUPNO.NETOPLACA, 
				VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNONETONAKNADE, 
				VW_PLACA_ZAPOSLENIK_UKUPNO.NETOPRIMANJA, 
	                      		VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNOOBUSTAVE, 
				VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNOZAISPLATU,
				VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNOOLAKSICE,
				VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNODOPRINOSINA,
	VW_PLACA_ZAPOSLENIK_UKUPNO.POREZKRIZNI,
VW_PLACA_ZAPOSLENIK_UKUPNO.NETOPLACAMANJEKRIZNI
		FROM         	VW_PLACA_ZAPOSLENIK_UKUPNO 
		INNER JOIN 	RADNIK
		ON 		VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK = RADNIK.IDRADNIK
		INNER JOIN 	OBRACUNRADNICI
		ON 		VW_PLACA_ZAPOSLENIK_UKUPNO.IDOBRACUN = OBRACUNRADNICI.IDOBRACUN
		AND		VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK = OBRACUNRADNICI.IDRADNIK
		WHERE	VW_PLACA_ZAPOSLENIK_UKUPNO.IDOBRACUN = @IDOBRACUN
		ORDER BY	CASE WHEN @sort = 1 THEN RADNIK.PREZIME ELSE Right('000000000000000' + Convert(varchar, VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK), 15) END, 
				CASE WHEN @sort = 1 THEN RADNIK.IME ELSE Right('000000000000000' + Convert(varchar, VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK), 15) END, 
				VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK
	END
	ELSE 
	BEGIN
		IF @MJESECOBRACUNA IS NOT NULL AND @GODINAOBRACUNA IS NOT NULL
		BEGIN
			SELECT     	VW_PLACA_ZAPOSLENIK_UKUPNO_MO.IDRADNIK, 
					RADNIK.PREZIME, 
					RADNIK.IME, 
					VW_PLACA_ZAPOSLENIK_UKUPNO_MO.SATIBRUTO,
			   		VW_PLACA_ZAPOSLENIK_UKUPNO_MO.UKUPNOBRUTO,
					(SELECT ko1.OBRACUNSKIKOEFICIJENT FROM OBRACUNRADNICI AS ko1 WHERE ko1.IDRADNIK = VW_PLACA_ZAPOSLENIK_UKUPNO_MO.IDRADNIK AND ko1.IDOBRACUN = (SELECT MAX(mo1.IDOBRACUN) FROM OBRACUN AS mo INNER JOIN OBRACUNRADNICI AS mo1 ON mo.IDOBRACUN = mo1.IDOBRACUN WHERE mo1.IDRADNIK = VW_PLACA_ZAPOSLENIK_UKUPNO_MO.IDRADNIK AND mo.MJESECISPLATE = @MJESECOBRACUNA AND mo.GODINAISPLATE = @GODINAOBRACUNA)) AS KOEFICIJENT, 
					VW_PLACA_ZAPOSLENIK_UKUPNO_MO.UKUPNODOPRINOSI,
					VW_PLACA_ZAPOSLENIK_UKUPNO_MO.UKUPNOPOREZIPRIREZ, 
					VW_PLACA_ZAPOSLENIK_UKUPNO_MO.NETOPLACA, 
					VW_PLACA_ZAPOSLENIK_UKUPNO_MO.UKUPNONETONAKNADE, 
					VW_PLACA_ZAPOSLENIK_UKUPNO_MO.NETOPRIMANJA, 
		                      VW_PLACA_ZAPOSLENIK_UKUPNO_MO.UKUPNOOBUSTAVE, 
					VW_PLACA_ZAPOSLENIK_UKUPNO_MO.UKUPNOZAISPLATU,
					VW_PLACA_ZAPOSLENIK_UKUPNO_MO.UKUPNOOLAKSICE,
					VW_PLACA_ZAPOSLENIK_UKUPNO_MO.UKUPNODOPRINOSINA
			FROM         	VW_PLACA_ZAPOSLENIK_UKUPNO_MO 
			INNER JOIN 	RADNIK
			ON 		VW_PLACA_ZAPOSLENIK_UKUPNO_MO.IDRADNIK = RADNIK.IDRADNIK
			WHERE	VW_PLACA_ZAPOSLENIK_UKUPNO_MO.MJESECOBRACUNA = @MJESECOBRACUNA
			AND 		VW_PLACA_ZAPOSLENIK_UKUPNO_MO.GODINAOBRACUNA = @GODINAOBRACUNA
			ORDER BY	CASE WHEN @sort = 1 THEN RADNIK.PREZIME ELSE Right('000000000000000' + Convert(varchar, VW_PLACA_ZAPOSLENIK_UKUPNO_MO.IDRADNIK), 15) END, 
					CASE WHEN @sort = 1 THEN RADNIK.IME ELSE Right('000000000000000' + Convert(varchar, VW_PLACA_ZAPOSLENIK_UKUPNO_MO.IDRADNIK), 15) END, 
					VW_PLACA_ZAPOSLENIK_UKUPNO_MO.IDRADNIK
		END
		ELSE 
		BEGIN
			SELECT     	VW_PLACA_ZAPOSLENIK_UKUPNO_MO.IDRADNIK, 
					RADNIK.PREZIME, 
					RADNIK.IME, 
					SUM(VW_PLACA_ZAPOSLENIK_UKUPNO_MO.SATIBRUTO) AS SATIBRUTO,
			   		SUM(VW_PLACA_ZAPOSLENIK_UKUPNO_MO.UKUPNOBRUTO) AS UKUPNOBRUTO, 
					(SELECT ko1.OBRACUNSKIKOEFICIJENT FROM OBRACUNRADNICI AS ko1 WHERE ko1.IDRADNIK = VW_PLACA_ZAPOSLENIK_UKUPNO_MO.IDRADNIK AND ko1.IDOBRACUN = (SELECT MAX(mo1.IDOBRACUN) FROM OBRACUN AS mo INNER JOIN OBRACUNRADNICI AS mo1 ON mo.IDOBRACUN = mo1.IDOBRACUN WHERE mo1.IDRADNIK = VW_PLACA_ZAPOSLENIK_UKUPNO_MO.IDRADNIK AND mo.GODINAOBRACUNA = @GODINAOBRACUNA)) AS KOEFICIJENT, 
					SUM(VW_PLACA_ZAPOSLENIK_UKUPNO_MO.UKUPNODOPRINOSI) AS UKUPNODOPRINOSI,
					SUM(VW_PLACA_ZAPOSLENIK_UKUPNO_MO.UKUPNOPOREZIPRIREZ) AS UKUPNOPOREZIPRIREZ,
					SUM(VW_PLACA_ZAPOSLENIK_UKUPNO_MO.NETOPLACA) AS NETOPLACA,
					SUM(VW_PLACA_ZAPOSLENIK_UKUPNO_MO.UKUPNONETONAKNADE) AS UKUPNONETONAKNADE,
					SUM(VW_PLACA_ZAPOSLENIK_UKUPNO_MO.NETOPRIMANJA) AS NETOPRIMANJA,
		                      		SUM(VW_PLACA_ZAPOSLENIK_UKUPNO_MO.UKUPNOOBUSTAVE) AS UKUPNOOBUSTAVE,
					SUM(VW_PLACA_ZAPOSLENIK_UKUPNO_MO.UKUPNOZAISPLATU) AS UKUPNOZAISPLATU,
					SUM(VW_PLACA_ZAPOSLENIK_UKUPNO_MO.UKUPNOOLAKSICE) AS UKUPNOOLAKSICE,
					SUM(VW_PLACA_ZAPOSLENIK_UKUPNO_MO.UKUPNODOPRINOSINA) AS UKUPNODOPRINOSINA

			FROM         	VW_PLACA_ZAPOSLENIK_UKUPNO_MO 
			INNER JOIN 	RADNIK
			ON 		VW_PLACA_ZAPOSLENIK_UKUPNO_MO.IDRADNIK = RADNIK.IDRADNIK
			WHERE	VW_PLACA_ZAPOSLENIK_UKUPNO_MO.GODINAOBRACUNA = @GODINAOBRACUNA
			GROUP BY	VW_PLACA_ZAPOSLENIK_UKUPNO_MO.IDRADNIK, 
					RADNIK.PREZIME, 
					RADNIK.IME
			ORDER BY	CASE WHEN @sort = 1 THEN RADNIK.PREZIME ELSE Right('000000000000000' + Convert(varchar, VW_PLACA_ZAPOSLENIK_UKUPNO_MO.IDRADNIK), 15) END, 
					CASE WHEN @sort = 1 THEN RADNIK.IME ELSE Right('000000000000000' + Convert(varchar, VW_PLACA_ZAPOSLENIK_UKUPNO_MO.IDRADNIK), 15) END, 
					VW_PLACA_ZAPOSLENIK_UKUPNO_MO.IDRADNIK
		END
	END

	SET NOCOUNT OFF

END













GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_KONACNI]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_KONACNI]
GO

CREATE PROCEDURE [dbo].[S_PLACA_KONACNI]
(
@GODINA INT,
@idobracun varchar(11)
)
AS
BEGIN
declare @koristijmbg as bit
declare @duzina as int
select @duzina = (select isnull(len(max(dosjmbg)),0) from dosipzaglavljelevel1)

if @duzina = 13 
select @koristijmbg = 1
else
select @koristijmbg = 0

IF @KORISTIJMBG = 0
BEGIN
SELECT SUM(POREZNAOSNOVICA) AS POREZNAOSNOVICA , SUM(UKUPNOPOREZIPRIREZ) AS POREZIPRIREZ,IDOPCINESTANOVANJA AS OPCINA,P.OIB,P.IDIPIDENT AS IP,MJESECISPLATE AS BROJMJESECISAISPLATAMA,OPCINA.PRIREZ AS STOPAPRIREZA,
SUM(UKUPNOOO) AS ODBITAK,SUM(DOHODAK) AS DOHODAK,SUM(UKUPNOPOREZNOPRIZNATEOLAKSICE) AS OLAKSICE,SUM(UKUPNOBRUTO) AS BRUTO,SUM(UKUPNODOPRINOSI) AS DOPRINOSI,faktor AS FAKTOR,
sum(ukupnoporez) AS porez,sum(ukupnoprirez) AS prirez,SUM(P.POREZKRIZNI) AS KRIZNIPOREZ
  

FROM
(
	SELECT	
			RADNIK.OIB,
			RADNIK.JMBG,
			ot.IDIPIDENT, 
			MJESECISPLATE,
			LEFT(ISNULL(RADNIK.OPCINASTANOVANJAIDOPCINE, '000'), 3) AS IDOPCINESTANOVANJA,
			UKUPNOBRUTO,
			UKUPNODOPRINOSI,
			UKUPNOPOREZNOPRIZNATEOLAKSICE,
			UKUPNOBRUTO - UKUPNODOPRINOSI - UKUPNOPOREZNOPRIZNATEOLAKSICE AS DOHODAK,
			UKUPNOOO,
			UKUPNOBRUTO - UKUPNODOPRINOSI - UKUPNOPOREZNOPRIZNATEOLAKSICE - UKUPNOOO AS POREZNAOSNOVICA,
			UKUPNOPOREZ,
			UKUPNOPRIREZ,
			UKUPNOPOREZIPRIREZ,
			ISNULL(UKUPNOBRUTO - UKUPNODOPRINOSI - UKUPNOPOREZNOPRIZNATEOLAKSICE - UKUPNOPOREZIPRIREZ - POREZKRIZNI,0) AS NETOISPLATA,
			ISNULL(UKUPNOBRUTO - UKUPNODOPRINOSI - UKUPNOPOREZNOPRIZNATEOLAKSICE - UKUPNOPOREZIPRIREZ,0) AS NETOPLACA,
			ISNULL(POREZKRIZNI,0) AS POREZKRIZNI,
			ISNULL(FAKTOR,0) AS FAKTOR,
			
			RADNIK.PREZIME,RADNIK.IME
	FROM		
	(
		SELECT     	IDIPIDENT, 
				MJESECISPLATE, 
				GODINAISPLATE, 
				IDRADNIK, 
				SUM(UKUPNOBRUTO) AS UKUPNOBRUTO, 
				
				SUM(UKUPNODOPRINOSI) AS UKUPNODOPRINOSI, 
				SUM(UKUPNOOLAKSICE) AS UKUPNOOLAKSICE,
				SUM(UKUPNOOO) AS UKUPNOOO, 
			 
				SUM(UKUPNOPOREZNOPRIZNATEOLAKSICE) AS UKUPNOPOREZNOPRIZNATEOLAKSICE, 
				SUM(POREZNAOSNOVICA) AS POREZNAOSNOVICA, 
				SUM(UKUPNOPOREZ) AS UKUPNOPOREZ, 
				SUM(UKUPNOPRIREZ) AS UKUPNOPRIREZ, 
				SUM(UKUPNOPOREZIPRIREZ) AS UKUPNOPOREZIPRIREZ,
				SUM(NETOPLACA) AS NETOPLACA, 
				SUM(UKUPNONETONAKNADE) AS UKUPNONETONAKNADE, 
				SUM(NETOPRIMANJA) AS NETOPRIMANJA, 
				SUM(UKUPNOOBUSTAVE) AS UKUPNOOBUSTAVE, 
				SUM(UKUPNOZAISPLATU) AS UKUPNOZAISPLATU,
				ISNULL(SUM(POREZKRIZNI),0) AS POREZKRIZNI,
				ISNULL((FAKTOR),0) AS FAKTOR
		FROM         	VW_PLACA_ZAPOSLENIK_UKUPNO
		WHERE IDOBRACUN &lt;&gt; @IDOBRACUN
		GROUP BY 	IDIPIDENT, 
				MJESECISPLATE, 
				GODINAISPLATE, 
				IDRADNIK,faktor
		UNION ALL
		SELECT     	IDIPIDENT, 
				99, 
				GODINAISPLATE, 
				IDRADNIK, 
				SUM(UKUPNOBRUTO) AS UKUPNOBRUTO, 
				
				SUM(UKUPNODOPRINOSI) AS UKUPNODOPRINOSI, 
				SUM(UKUPNOOLAKSICE) AS UKUPNOOLAKSICE,
				SUM(UKUPNOOO) AS UKUPNOOO, 
			 
				SUM(UKUPNOPOREZNOPRIZNATEOLAKSICE) AS UKUPNOPOREZNOPRIZNATEOLAKSICE, 
				SUM(POREZNAOSNOVICA) AS POREZNAOSNOVICA, 
				SUM(UKUPNOPOREZ) AS UKUPNOPOREZ, 
				SUM(UKUPNOPRIREZ) AS UKUPNOPRIREZ, 
				SUM(UKUPNOPOREZIPRIREZ) AS UKUPNOPOREZIPRIREZ,
				SUM(NETOPLACA) AS NETOPLACA, 
				SUM(UKUPNONETONAKNADE) AS UKUPNONETONAKNADE, 
				SUM(NETOPRIMANJA) AS NETOPRIMANJA, 
				SUM(UKUPNOOBUSTAVE) AS UKUPNOOBUSTAVE, 
				SUM(UKUPNOZAISPLATU) AS UKUPNOZAISPLATU,
				ISNULL(SUM(POREZKRIZNI),0) AS POREZKRIZNI,
				ISNULL((FAKTOR),0) AS FAKTOR
		FROM         	VW_PLACA_ZAPOSLENIK_UKUPNO
		WHERE IDOBRACUN = @IDOBRACUN
		GROUP BY 	IDIPIDENT, 
				MJESECISPLATE, 
				GODINAISPLATE, 
				IDRADNIK,faktor
				
	) ot
	INNER JOIN	RADNIK
	ON		ot.IDRADNIK = RADNIK.IDRADNIK
	WHERE	GODINAISPLATE = @GODINA
	
UNION 


SELECT RADNIK.OIB,dosipzaglavljelevel1.DOSJMBG,dosipzaglavljelevel1.[DOSIPIDENT]
     
      ,[DOSMJESECISPLATE]
      ,[DOSIDOPCINESTANOVANJA]
      ,[DOSUKUPNOBRUTO]
      ,[DOSUKUPNODOPRINOSI]
      ,[DOSUKUPNOOLAKSICE]
      ,[DOSDOHODAK]
      ,[DOSUKUPNOOO]
      ,[DOSPOREZNAOSNOVICA]
      ,dosukupnoporeziprirez - ROUND(((100 * OPCINA.PRIREZ) / (100 + OPCINA.PRIREZ)) * [DOSUKUPNOPOREZIPRIREZ] / 100,2)
      ,ROUND(((100 * OPCINA.PRIREZ) / (100 + OPCINA.PRIREZ)) * [DOSUKUPNOPOREZIPRIREZ] / 100,2)
      ,[DOSUKUPNOPOREZIPRIREZ]
      ,[DOSUKUPNONETOISPLATA]
		,[DOSUKUPNONETOISPLATA] AS NETOPLACA
		,[DOSPOSEBANPOREZ] AS POREZKRIZNI,
		0 AS FAKTOR,
	radnik.prezime,radnik.ime
  FROM [dbo].[DOSIPZAGLAVLJELevel1]
	inner join radnik on [DOSIPZAGLAVLJELevel1].dosjmbg = radnik.oib 
		inner join dosipzaglavlje on dosipzaglavljelevel1.dosjmbg = dosipzaglavlje.dosjmbg
			INNER JOIN OPCINA ON DOSIDOPCINESTANOVANJA  = LEFT(ISNULL(OPCINA.IDOPCINE, '000'), 3)
WHERE	dosipzaglavlje.dosisplataugodini = @godina
	) AS P
INNER JOIN OPCINA ON P.IDOPCINESTANOVANJA = LEFT(ISNULL(OPCINA.IDOPCINE, '000'), 3)
GROUP BY IDOPCINESTANOVANJA,OIB,IDIPIDENT,PRIREZ,MJESECISPLATE,faktor
ORDER BY OIB
END


IF @KORISTIJMBG = 1
BEGIN
SELECT SUM(POREZNAOSNOVICA) AS POREZNAOSNOVICA , SUM(UKUPNOPOREZIPRIREZ) AS POREZIPRIREZ,IDOPCINESTANOVANJA AS OPCINA,P.OIB,P.IDIPIDENT AS IP,MJESECISPLATE AS BROJMJESECISAISPLATAMA,OPCINA.PRIREZ AS STOPAPRIREZA,
SUM(UKUPNOOO) AS ODBITAK,SUM(DOHODAK) AS DOHODAK,SUM(UKUPNOPOREZNOPRIZNATEOLAKSICE) AS OLAKSICE,SUM(UKUPNOBRUTO) AS BRUTO,SUM(UKUPNODOPRINOSI) AS DOPRINOSI,faktor AS FAKTOR,
sum(ukupnoporez) AS porez,sum(ukupnoprirez) AS prirez,SUM(P.POREZKRIZNI) AS KRIZNIPOREZ
  

FROM
(
	SELECT	
			RADNIK.OIB,
			RADNIK.JMBG,
			ot.IDIPIDENT, 
			MJESECISPLATE,
			LEFT(ISNULL(RADNIK.OPCINASTANOVANJAIDOPCINE, '000'), 3) AS IDOPCINESTANOVANJA,
			UKUPNOBRUTO,
			UKUPNODOPRINOSI,
			UKUPNOPOREZNOPRIZNATEOLAKSICE,
			UKUPNOBRUTO - UKUPNODOPRINOSI - UKUPNOPOREZNOPRIZNATEOLAKSICE AS DOHODAK,
			UKUPNOOO,
			UKUPNOBRUTO - UKUPNODOPRINOSI - UKUPNOPOREZNOPRIZNATEOLAKSICE - UKUPNOOO AS POREZNAOSNOVICA,
			UKUPNOPOREZ,
			UKUPNOPRIREZ,
			UKUPNOPOREZIPRIREZ,
			ISNULL(UKUPNOBRUTO - UKUPNODOPRINOSI - UKUPNOPOREZNOPRIZNATEOLAKSICE - UKUPNOPOREZIPRIREZ - POREZKRIZNI,0) AS NETOISPLATA,
			ISNULL(UKUPNOBRUTO - UKUPNODOPRINOSI - UKUPNOPOREZNOPRIZNATEOLAKSICE - UKUPNOPOREZIPRIREZ,0) AS NETOPLACA,
			ISNULL(POREZKRIZNI,0) AS POREZKRIZNI,
			ISNULL(FAKTOR,0) AS FAKTOR,
			
			RADNIK.PREZIME,RADNIK.IME
	FROM		
	(
		SELECT     	IDIPIDENT, 
				MJESECISPLATE, 
				GODINAISPLATE, 
				IDRADNIK, 
				SUM(UKUPNOBRUTO) AS UKUPNOBRUTO, 
				
				SUM(UKUPNODOPRINOSI) AS UKUPNODOPRINOSI, 
				SUM(UKUPNOOLAKSICE) AS UKUPNOOLAKSICE,
				SUM(UKUPNOOO) AS UKUPNOOO, 
			 
				SUM(UKUPNOPOREZNOPRIZNATEOLAKSICE) AS UKUPNOPOREZNOPRIZNATEOLAKSICE, 
				SUM(POREZNAOSNOVICA) AS POREZNAOSNOVICA, 
				SUM(UKUPNOPOREZ) AS UKUPNOPOREZ, 
				SUM(UKUPNOPRIREZ) AS UKUPNOPRIREZ, 
				SUM(UKUPNOPOREZIPRIREZ) AS UKUPNOPOREZIPRIREZ,
				SUM(NETOPLACA) AS NETOPLACA, 
				SUM(UKUPNONETONAKNADE) AS UKUPNONETONAKNADE, 
				SUM(NETOPRIMANJA) AS NETOPRIMANJA, 
				SUM(UKUPNOOBUSTAVE) AS UKUPNOOBUSTAVE, 
				SUM(UKUPNOZAISPLATU) AS UKUPNOZAISPLATU,
				ISNULL(SUM(POREZKRIZNI),0) AS POREZKRIZNI,
				ISNULL((FAKTOR),0) AS FAKTOR
		FROM         	VW_PLACA_ZAPOSLENIK_UKUPNO
		WHERE IDOBRACUN &lt;&gt; @IDOBRACUN
		GROUP BY 	IDIPIDENT, 
				MJESECISPLATE, 
				GODINAISPLATE, 
				IDRADNIK,faktor
		UNION ALL
		SELECT     	IDIPIDENT, 
				99, 
				GODINAISPLATE, 
				IDRADNIK, 
				SUM(UKUPNOBRUTO) AS UKUPNOBRUTO, 
				
				SUM(UKUPNODOPRINOSI) AS UKUPNODOPRINOSI, 
				SUM(UKUPNOOLAKSICE) AS UKUPNOOLAKSICE,
				SUM(UKUPNOOO) AS UKUPNOOO, 
			 
				SUM(UKUPNOPOREZNOPRIZNATEOLAKSICE) AS UKUPNOPOREZNOPRIZNATEOLAKSICE, 
				SUM(POREZNAOSNOVICA) AS POREZNAOSNOVICA, 
				SUM(UKUPNOPOREZ) AS UKUPNOPOREZ, 
				SUM(UKUPNOPRIREZ) AS UKUPNOPRIREZ, 
				SUM(UKUPNOPOREZIPRIREZ) AS UKUPNOPOREZIPRIREZ,
				SUM(NETOPLACA) AS NETOPLACA, 
				SUM(UKUPNONETONAKNADE) AS UKUPNONETONAKNADE, 
				SUM(NETOPRIMANJA) AS NETOPRIMANJA, 
				SUM(UKUPNOOBUSTAVE) AS UKUPNOOBUSTAVE, 
				SUM(UKUPNOZAISPLATU) AS UKUPNOZAISPLATU,
				ISNULL(SUM(POREZKRIZNI),0) AS POREZKRIZNI,
				ISNULL((FAKTOR),0) AS FAKTOR
		FROM         	VW_PLACA_ZAPOSLENIK_UKUPNO
		WHERE IDOBRACUN = @IDOBRACUN
		GROUP BY 	IDIPIDENT, 
				MJESECISPLATE, 
				GODINAISPLATE, 
				IDRADNIK,faktor
				
	) ot
	INNER JOIN	RADNIK
	ON		ot.IDRADNIK = RADNIK.IDRADNIK
	WHERE	GODINAISPLATE = @GODINA
	
UNION 


SELECT RADNIK.OIB,dosipzaglavljelevel1.DOSJMBG,dosipzaglavljelevel1.[DOSIPIDENT]
     
      ,[DOSMJESECISPLATE]
      ,[DOSIDOPCINESTANOVANJA]
      ,[DOSUKUPNOBRUTO]
      ,[DOSUKUPNODOPRINOSI]
      ,[DOSUKUPNOOLAKSICE]
      ,[DOSDOHODAK]
      ,[DOSUKUPNOOO]
      ,[DOSPOREZNAOSNOVICA]
      ,dosukupnoporeziprirez - ROUND(((100 * OPCINA.PRIREZ) / (100 + OPCINA.PRIREZ)) * [DOSUKUPNOPOREZIPRIREZ] / 100,2)
      ,ROUND(((100 * OPCINA.PRIREZ) / (100 + OPCINA.PRIREZ)) * [DOSUKUPNOPOREZIPRIREZ] / 100,2)
      ,[DOSUKUPNOPOREZIPRIREZ]
      ,[DOSUKUPNONETOISPLATA]
		,[DOSUKUPNONETOISPLATA] AS NETOPLACA
		,[DOSPOSEBANPOREZ] AS POREZKRIZNI,
		0 AS FAKTOR,
	radnik.prezime,radnik.ime
  FROM [dbo].[DOSIPZAGLAVLJELevel1]
	inner join radnik on [DOSIPZAGLAVLJELevel1].dosjmbg = radnik.JMBG 
		inner join dosipzaglavlje on dosipzaglavljelevel1.dosjmbg = dosipzaglavlje.dosjmbg
			INNER JOIN OPCINA ON DOSIDOPCINESTANOVANJA  = LEFT(ISNULL(OPCINA.IDOPCINE, '000'), 3)
WHERE	dosipzaglavlje.dosisplataugodini = @godina
	) AS P
INNER JOIN OPCINA ON P.IDOPCINESTANOVANJA = LEFT(ISNULL(OPCINA.IDOPCINE, '000'), 3)
GROUP BY IDOPCINESTANOVANJA,OIB,IDIPIDENT,PRIREZ,MJESECISPLATE,faktor
ORDER BY OIB
END
END
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_KONACNI_POREZ_PO_OPCINAMA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_KONACNI_POREZ_PO_OPCINAMA]
GO



CREATE PROCEDURE [dbo].[S_PLACA_KONACNI_POREZ_PO_OPCINAMA]
(
@idobracun varchar(11)

)
AS
BEGIN
	
	SELECT SIFRAOPCINESTANOVANJA,NAZIVOPCINE,SUM(OBRACUNATOPOREZ) AS OBRACUNATOPOREZ,SUM(OBRACUNATOPRIREZ) AS OBRACUNATOPRIREZ
	FROM
	(
	SELECT     lEFT(ISNULL(OBRACUNRADNICI.SIFRAOPCINESTANOVANJA, '000'), 3) as sifraopcinestanovanja, OPCINA.NAZIVOPCINE, SUM(OBRACUNPOREZI.OBRACUNATIPOREZ)+isnull(SUM(dbo.KONACNIPOMOCNA.POR),0)  AS ObracunatoPOREZ,0 AS OBRACUNATOPRIREZ
FROM         OBRACUNRADNICI
INNER JOIN OBRACUNPOREZI ON OBRACUNRADNICI.IDOBRACUN = OBRACUNPOREZI.IDOBRACUN AND OBRACUNRADNICI.IDRADNIK = OBRACUNPOREZI.IDRADNIK
LEFT JOIN OPCINA ON OBRACUNRADNICI.SIFRAOPCINESTANOVANJA = OPCINA.IDOPCINE
left JOIN dbo.KONACNIPOMOCNA ON dbo.obracunradnici.IDRADNIK = dbo.KONACNIPOMOCNA.IDRADNIK AND dbo.obracunradnici.IDOBRACUN = dbo.KONACNIPOMOCNA.SIFRAOBRACUNA
WHERE OBRACUNRADNICI.IDOBRACUN = @IDOBRACUN
GROUP BY OBRACUNRADNICI.SIFRAOPCINESTANOVANJA, OPCINA.NAZIVOPCINE

	UNION ALL

	SELECT     lEFT(ISNULL(OBRACUNRADNICI.SIFRAOPCINESTANOVANJA, '000'), 3) as sifraopcinestanovanja, OPCINA.NAZIVOPCINE, 0 AS OBRACUNATOPOREZ,(SUM(OBRACUNATIPRIREZ) + SUM(KOREKCIJAPRIREZA) +isnull(SUM(dbo.KONACNIPOMOCNA.PRI),0)) AS ObracunatoPRIREZ
FROM         OBRACUNRADNICI
LEFT JOIN OPCINA ON OBRACUNRADNICI.SIFRAOPCINESTANOVANJA = OPCINA.IDOPCINE
left JOIN dbo.KONACNIPOMOCNA ON dbo.obracunradnici.IDRADNIK = dbo.KONACNIPOMOCNA.IDRADNIK AND dbo.obracunradnici.IDOBRACUN = dbo.KONACNIPOMOCNA.SIFRAOBRACUNA

WHERE IDOBRACUN = @IDOBRACUN 
GROUP BY OBRACUNRADNICI.SIFRAOPCINESTANOVANJA, OPCINA.NAZIVOPCINE
	) AS P
	GROUP BY P.sifraopcinestanovanja,P.NAZIVOPCINE
	
end
go


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_KONACNI_POREZ_REKAPITULACIJA_PO_RADNICIMA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_KONACNI_POREZ_REKAPITULACIJA_PO_RADNICIMA]
GO


CREATE PROCEDURE [dbo].[S_PLACA_KONACNI_POREZ_REKAPITULACIJA_PO_RADNICIMA]
(
@idobracun varchar(11)

)
AS
BEGIN
	
	SELECT P.IDRADNIK,P.PREZIME,P.IME,SIFRAOPCINESTANOVANJA,NAZIVOPCINE,SUM(OBRACUNATOPOREZ) AS KOREKCIJAPOREZA,SUM(OBRACUNATOPRIREZ) AS KOREKCIJAPRIREZ,
	SUM(ObracunatoPOREZORIGINAL) AS ORIGINALPOREZ,SUM(P.OBRACUNATOPRIREZORIGINAL) AS ORIGINALPRIREZ
	FROM
	(
	SELECT     RADNIK.IDRADNIK,RADNIK.PREZIME,RADNIK.IME,lEFT(ISNULL(OBRACUNRADNICI.SIFRAOPCINESTANOVANJA, '000'), 3) as sifraopcinestanovanja, OPCINA.NAZIVOPCINE, SUM(OBRACUNPOREZI.OBRACUNATIPOREZ) AS ObracunatoPOREZ,0 AS OBRACUNATOPRIREZ,
	0 AS ObracunatoPOREZORIGINAL,0 AS ObracunatoPRIREZORIGINAL
FROM         OBRACUNRADNICI
INNER JOIN OBRACUNPOREZI ON OBRACUNRADNICI.IDOBRACUN = OBRACUNPOREZI.IDOBRACUN AND OBRACUNRADNICI.IDRADNIK = OBRACUNPOREZI.IDRADNIK
LEFT JOIN OPCINA ON OBRACUNRADNICI.SIFRAOPCINESTANOVANJA = OPCINA.IDOPCINE INNER JOIN RADNIK ON OBRACUNRADNICI.IDRADNIK = RADNIK.IDRADNIK
WHERE OBRACUNRADNICI.IDOBRACUN = @IDOBRACUN AND OBRACUNPOREZI.IDPOREZ = 999
GROUP BY OBRACUNRADNICI.SIFRAOPCINESTANOVANJA, OPCINA.NAZIVOPCINE,RADNIK.PREZIME,RADNIK.IME,RADNIK.IDRADNIK

	UNION ALL

	SELECT     RADNIK.IDRADNIK,RADNIK.PREZIME,RADNIK.IME,lEFT(ISNULL(OBRACUNRADNICI.SIFRAOPCINESTANOVANJA, '000'), 3) as sifraopcinestanovanja, OPCINA.NAZIVOPCINE, 0 AS OBRACUNATOPOREZ,SUM(KOREKCIJAPRIREZA) AS ObracunatoPRIREZ,
		0 AS ObracunatoPOREZORIGINAL,0 AS OBRACUNATOPRIREZORIGINAL
	
FROM         OBRACUNRADNICI
LEFT JOIN OPCINA ON OBRACUNRADNICI.SIFRAOPCINESTANOVANJA = OPCINA.IDOPCINE 
INNER JOIN RADNIK ON OBRACUNRADNICI.IDRADNIK = RADNIK.IDRADNIK
WHERE IDOBRACUN = @IDOBRACUN AND OBRACUNRADNICI.KOREKCIJAPRIREZA &lt; 0 
GROUP BY OBRACUNRADNICI.SIFRAOPCINESTANOVANJA, OPCINA.NAZIVOPCINE,RADNIK.PREZIME,RADNIK.IME,RADNIK.IDRADNIK

UNION ALL


SELECT     RADNIK.IDRADNIK,RADNIK.PREZIME,RADNIK.IME,lEFT(ISNULL(OBRACUNRADNICI.SIFRAOPCINESTANOVANJA, '000'), 3) as sifraopcinestanovanja, OPCINA.NAZIVOPCINE, 0,0,SUM(OBRACUNPOREZI.OBRACUNATIPOREZ) AS ObracunatoPOREZORIGINAL,0 AS OBRACUNATOPRIREZORIGINAL
FROM         OBRACUNRADNICI
INNER JOIN OBRACUNPOREZI ON OBRACUNRADNICI.IDOBRACUN = OBRACUNPOREZI.IDOBRACUN AND OBRACUNRADNICI.IDRADNIK = OBRACUNPOREZI.IDRADNIK
LEFT JOIN OPCINA ON OBRACUNRADNICI.SIFRAOPCINESTANOVANJA = OPCINA.IDOPCINE INNER JOIN RADNIK ON OBRACUNRADNICI.IDRADNIK = RADNIK.IDRADNIK
WHERE OBRACUNRADNICI.IDOBRACUN = @IDOBRACUN AND OBRACUNPOREZI.IDPOREZ &lt;&gt; 999
GROUP BY OBRACUNRADNICI.SIFRAOPCINESTANOVANJA, OPCINA.NAZIVOPCINE,RADNIK.PREZIME,RADNIK.IME,RADNIK.IDRADNIK

	UNION ALL

	SELECT     RADNIK.IDRADNIK,RADNIK.PREZIME,RADNIK.IME,lEFT(ISNULL(OBRACUNRADNICI.SIFRAOPCINESTANOVANJA, '000'), 3) as sifraopcinestanovanja, OPCINA.NAZIVOPCINE,0,0, 0 AS OBRACUNATOPOREZORIGINAL,SUM(OBRACUNATIPRIREZ) AS ObracunatoPRIREZORIGINAL
FROM         OBRACUNRADNICI
LEFT JOIN OPCINA ON OBRACUNRADNICI.SIFRAOPCINESTANOVANJA = OPCINA.IDOPCINE 
INNER JOIN RADNIK ON OBRACUNRADNICI.IDRADNIK = RADNIK.IDRADNIK
WHERE IDOBRACUN = @IDOBRACUN  
GROUP BY OBRACUNRADNICI.SIFRAOPCINESTANOVANJA, OPCINA.NAZIVOPCINE,RADNIK.PREZIME,RADNIK.IME,RADNIK.IDRADNIK

	) AS P
	GROUP BY P.sifraopcinestanovanja,P.NAZIVOPCINE,P.PREZIME,P.IME,P.IDRADNIK
	
end
GO




IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_KREDIT_OBRACUNAT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_KREDIT_OBRACUNAT]
GO






CREATE PROCEDURE dbo.S_PLACA_KREDIT_OBRACUNAT
(
	@IDOBRACUN VARCHAR(11)
	)
AS
BEGIN
SET NOCOUNT ON

SELECT Count(*) AS obracunato,OBRACUNKREDITI.IDKREDITOR,OBRACUNKREDITI.DATUMUGOVORA,OBRACUNKREDITI.IDRADNIK FROM OBRACUN 
INNER JOIN OBRACUNkrediti ON OBRACUN.IDOBRACUN = OBRACUNkrediti.IDOBRACUN 
INNER JOIN OBRACUN OBRACUN_1 ON OBRACUN.MJESECOBRACUNA = OBRACUN_1.MJESECOBRACUNA AND OBRACUN.GODINAOBRACUNA = OBRACUN_1.GODINAOBRACUNA 
WHERE (OBRACUN_1.IDOBRACUN = @IDOBRACUN) AND (OBRACUN.IDOBRACUN &lt;&gt; @IDOBRACUN) 
GROUP BY OBRACUNKREDITI.IDKREDITOR,OBRACUNKREDITI.DATUMUGOVORA,OBRACUNKREDITI.IDRADNIK
END








GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_KREDITI_DO_ZAD_OBRACUNA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_KREDITI_DO_ZAD_OBRACUNA]
GO








CREATE PROCEDURE dbo.S_PLACA_KREDITI_DO_ZAD_OBRACUNA
(
	@IDRADNIK INT,
	@IDKREDITOR INT,
	@DATUMUGOVORA DATETIME
)
AS
BEGIN
	SET NOCOUNT ON

SELECT     isnull(COUNT(dbo.OBRACUNKrediti.OBRACUNATIKUNSKIIZNOS),0)
FROM         dbo.OBRACUNKrediti 
WHERE OBRACUNKREDITI.IDRADNIK = @IDRADNIK AND  
IDKREDITOR= @IDKREDITOR AND OBRACUNKREDITI.DATUMUGOVORA =  @DATUMUGOVORA
END







GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_KREDITI_OBUSTAVLJENO_DO_OBRACUNA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_KREDITI_OBUSTAVLJENO_DO_OBRACUNA]
GO









CREATE PROCEDURE dbo.S_PLACA_KREDITI_OBUSTAVLJENO_DO_OBRACUNA
(
	@IDRADNIK INT,
	@IDKREDITOR INT,
	@DATUMUGOVORA DATETIME
)
AS
BEGIN
	SET NOCOUNT ON
SELECT     isnull(SUM(dbo.OBRACUNKrediti.OBRACUNATIKUNSKIIZNOS),0)
FROM         dbo.OBRACUNKrediti 
WHERE OBRACUNKREDITI.IDRADNIK = @IDRADNIK AND  
obracunkrediti.IDKREDITOR= @IDKREDITOR AND OBRACUNKREDITI.DATUMUGOVORA =  @DATUMUGOVORA
END












GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_KRIZNI_POREZ]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_KRIZNI_POREZ]
GO




CREATE PROCEDURE dbo.S_PLACA_KRIZNI_POREZ
(
	@IDOBRACUN VARCHAR(11),
	@MJESECISPLATE VARCHAR(2),
	@GODINAISPLATE VARCHAR(4)
)
AS
BEGIN
	SET NOCOUNT ON
SELECT     IDRADNIK,isnull(SUM(POREZKRIZNI),0) as POREZKRIZNI,isnull(SUM(NETOPLACA),0) - isnull(SUM(UKUPNOOLAKSICE),0) as NETOPLACA
FROM         dbo.VW_PLACA_ZAPOSLENIK_UKUPNO
WHERE IDOBRACUN &lt; @IDOBRACUN AND MJESECISPLATE = @MJESECISPLATE AND GODINAISPLATE = @GODINAISPLATE
group by IDRADNIK


END





GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_MAT_DOP]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_MAT_DOP]
GO

CREATE PROCEDURE dbo.S_PLACA_MAT_DOP
(
    @GODINA AS INT,
    @IDRADNIK_DO AS INT,
    @IDRADNIK_OD AS INT,
    @UKLJUCENODOPRINOSIIZ AS BIT,
    @UKLJUCENODOPRINOSINA AS BIT,
    @ZBIRNI AS BIT
) AS
BEGIN
INSERT  INTO #TEMP_M
                        SELECT  CASE p.IDVRSTADOPRINOS
                                  WHEN 2 THEN 2
                                  ELSE 3
                                END,
                                CASE p.IDVRSTADOPRINOS
                                  WHEN 2 THEN 'Doprinosi iz'
                                  ELSE 'Doprinosi na'
                                END,
                                1,
                                CASE WHEN @ZBIRNI = 0 THEN p.IDRADNIK
                                     ELSE 0
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.PREZIME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.IME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.JMBG
                                     ELSE ''
                                END,
                                p.IDDOPRINOS,
                                p.NAZIVDOPRINOS,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 1
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ01,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 2
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ02,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 3
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ03,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 4
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ04,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 5
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ05,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 6
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ06,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 7
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ07,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 8
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ08,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 9
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ09,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 10
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ10,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 11
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ11,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 12
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ12,
                                SUM(p.UKUPNOIZNOS) AS UKUPNO,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 1
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI01,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 2
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI02,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 3
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI03,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 4
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI04,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 5
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI05,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 6
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI06,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 7
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI07,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 8
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI08,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 9
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI09,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 10
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI10,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 11
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI11,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 12
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI12,
                                SUM(p.UKUPNOSATI) AS UKUPNOSATI
                        FROM    ( SELECT    OBRACUNRADNICI.IDRADNIK,
                                            RADNIK.PREZIME,
                                            RADNIK.IME,
                                            RADNIK.JMBG,
                                            OBRACUN.MJESECOBRACUNA,
                                            OBRACUNDOPRINOSI.IDDOPRINOS,
                                            OBRACUNDOPRINOSI.NAZIVDOPRINOS,
                                            OBRACUNDOPRINOSI.IDVRSTADOPRINOS,
                                            SUM(OBRACUNDOPRINOSI.OBRACUNATIDOPRINOS) AS UKUPNOIZNOS,
                                            0 AS UKUPNOSATI
                                  FROM      dbo.OBRACUN
                                            INNER JOIN dbo.OBRACUNRADNICI ON OBRACUN.IDOBRACUN = OBRACUNRADNICI.IDOBRACUN
                                            INNER JOIN dbo.OBRACUNDOPRINOSI ON OBRACUNRADNICI.IDOBRACUN = OBRACUNDOPRINOSI.IDOBRACUN
                                                                           AND OBRACUNRADNICI.IDRADNIK = OBRACUNDOPRINOSI.IDRADNIK
                                            INNER JOIN dbo.RADNIK ON OBRACUNRADNICI.IDRADNIK = RADNIK.IDRADNIK
                                  WHERE     OBRACUN.GODINAOBRACUNA = @GODINA
                                            AND OBRACUNRADNICI.IDRADNIK &gt;= COALESCE(@IDRADNIK_OD, OBRACUNRADNICI.IDRADNIK)
                                            AND OBRACUNRADNICI.IDRADNIK &lt;= COALESCE(@IDRADNIK_DO, OBRACUNRADNICI.IDRADNIK)
                                            AND ( ( OBRACUNDOPRINOSI.IDVRSTADOPRINOS = 2
                                                    AND @UKLJUCENODOPRINOSIIZ = 1
                                                  )
                                                  OR ( OBRACUNDOPRINOSI.IDVRSTADOPRINOS = 1
                                                       AND @UKLJUCENODOPRINOSINA = 1
                                                     )
                                                )
                                  GROUP BY  OBRACUNRADNICI.IDRADNIK,
                                            RADNIK.PREZIME,
                                            RADNIK.IME,
                                            RADNIK.JMBG,
                                            OBRACUN.MJESECOBRACUNA,
                                            OBRACUNDOPRINOSI.IDDOPRINOS,
                                            OBRACUNDOPRINOSI.NAZIVDOPRINOS,
                                            OBRACUNDOPRINOSI.IDVRSTADOPRINOS
                                ) AS p
                        GROUP BY CASE WHEN @ZBIRNI = 0 THEN p.IDRADNIK
                                      ELSE 0
                                 END,
                                CASE WHEN @ZBIRNI = 0 THEN p.PREZIME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.IME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.JMBG
                                     ELSE ''
                                END,
                                p.IDDOPRINOS,
                                p.NAZIVDOPRINOS,
                                p.IDVRSTADOPRINOS
END


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_MAT_ELEMENTI]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_MAT_ELEMENTI]
GO

CREATE PROCEDURE dbo.S_PLACA_MAT_ELEMENTI
(
    @GODINA AS INT,
    @IDRADNIK_DO AS INT,
    @IDRADNIK_OD AS INT,
    @UKLJUCENOBRUTO AS BIT,
    @UKLJUCENONETONAKNADE AS BIT,
    @ZBIRNI AS BIT
) AS
BEGIN
INSERT  INTO #TEMP_M
                        SELECT  CASE p.IDVRSTAELEMENTA
                                  WHEN 2 THEN 1
                                  ELSE 10
                                END,
                                CASE p.IDVRSTAELEMENTA
                                  WHEN 2 THEN 'Bruto primici'
                                  ELSE 'Neto naknade'
                                END,
                                2,
                                CASE WHEN @ZBIRNI = 0 THEN p.IDRADNIK
                                     ELSE 0
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.PREZIME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.IME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.JMBG
                                     ELSE ''
                                END,
                                p.IDELEMENT,
                                p.NAZIVELEMENT,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 1
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ01,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 2
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ02,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 3
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ03,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 4
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ04,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 5
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ05,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 6
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ06,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 7
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ07,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 8
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ08,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 9
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ09,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 10
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ10,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 11
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ11,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 12
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ12,
                                SUM(p.UKUPNOIZNOS) AS UKUPNO,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 1
                                              AND p.ZBRAJASATEUFONDSATI = 1
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI01,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 2
                                              AND p.ZBRAJASATEUFONDSATI = 1
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI02,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 3
                                              AND p.ZBRAJASATEUFONDSATI = 1
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI03,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 4
                                              AND p.ZBRAJASATEUFONDSATI = 1
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI04,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 5
                                              AND p.ZBRAJASATEUFONDSATI = 1
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI05,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 6
                                              AND p.ZBRAJASATEUFONDSATI = 1
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI06,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 7
                                              AND p.ZBRAJASATEUFONDSATI = 1
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI07,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 8
                                              AND p.ZBRAJASATEUFONDSATI = 1
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI08,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 9
                                              AND p.ZBRAJASATEUFONDSATI = 1
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI09,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 10
                                              AND p.ZBRAJASATEUFONDSATI = 1
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI10,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 11
                                              AND p.ZBRAJASATEUFONDSATI = 1
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI11,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 12
                                              AND p.ZBRAJASATEUFONDSATI = 1
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI12,
                                SUM(CASE WHEN p.ZBRAJASATEUFONDSATI = 1
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS UKUPNOSATI
                        FROM    ( SELECT    OBRACUNRADNICI.IDRADNIK,
                                            RADNIK.PREZIME,
                                            RADNIK.IME,
                                            RADNIK.JMBG,
                                            OBRACUN.MJESECOBRACUNA,
                                            OBRACUNELEMENTI.IDELEMENT,
                                            OBRACUNELEMENTI.NAZIVELEMENT,
                                            OBRACUNELEMENTI.IDVRSTAELEMENTA,
                                            SUM(OBRACUNELEMENTI.OBRIZNOS) AS UKUPNOIZNOS,
                                            SUM(OBRACUNELEMENTI.OBRSATI) AS UKUPNOSATI,
                                            ELEMENT.ZBRAJASATEUFONDSATI
                                  FROM      dbo.OBRACUN
                                            INNER JOIN dbo.OBRACUNRADNICI ON OBRACUN.IDOBRACUN = OBRACUNRADNICI.IDOBRACUN
                                            INNER JOIN dbo.OBRACUNELEMENTI ON OBRACUNRADNICI.IDOBRACUN = OBRACUNELEMENTI.IDOBRACUN
                                                                          AND OBRACUNRADNICI.IDRADNIK = OBRACUNELEMENTI.IDRADNIK
                                            INNER JOIN dbo.RADNIK ON OBRACUNRADNICI.IDRADNIK = RADNIK.IDRADNIK
                                            INNER JOIN dbo.ELEMENT ON OBRACUNELEMENTI.IDELEMENT = ELEMENT.IDELEMENT
                                  WHERE     OBRACUN.GODINAOBRACUNA = @GODINA
                                            AND OBRACUNRADNICI.IDRADNIK &gt;= COALESCE(@IDRADNIK_OD, OBRACUNRADNICI.IDRADNIK)
                                            AND OBRACUNRADNICI.IDRADNIK &lt;= COALESCE(@IDRADNIK_DO, OBRACUNRADNICI.IDRADNIK)
                                            AND ( ( OBRACUNELEMENTI.IDVRSTAELEMENTA = 1
                                                    AND @UKLJUCENONETONAKNADE = 1
                                                  )
                                                  OR ( OBRACUNELEMENTI.IDVRSTAELEMENTA = 2
                                                       AND @UKLJUCENOBRUTO = 1
                                                     )
                                                )
                                  GROUP BY  OBRACUNRADNICI.IDRADNIK,
                                            RADNIK.PREZIME,
                                            RADNIK.IME,
                                            RADNIK.JMBG,
                                            OBRACUN.MJESECOBRACUNA,
                                            OBRACUNELEMENTI.IDELEMENT,
                                            OBRACUNELEMENTI.NAZIVELEMENT,
                                            OBRACUNELEMENTI.IDVRSTAELEMENTA,
                                            ELEMENT.ZBRAJASATEUFONDSATI
                                ) AS p
                        GROUP BY CASE WHEN @ZBIRNI = 0 THEN p.IDRADNIK
                                      ELSE 0
                                 END,
                                CASE WHEN @ZBIRNI = 0 THEN p.PREZIME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.IME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.JMBG
                                     ELSE ''
                                END,
                                p.IDELEMENT,
                                p.NAZIVELEMENT,
                                p.IDVRSTAELEMENTA
END


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_MAT_ISPLATE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_MAT_ISPLATE]
GO

CREATE PROCEDURE dbo.S_PLACA_MAT_ISPLATE
(
    @GODINA AS INT,
    @IDRADNIK_DO AS INT,
    @IDRADNIK_OD AS INT,
    @ZBIRNI AS BIT
) AS
BEGIN
INSERT  INTO #TEMP_M
                        SELECT  11,
                                'Iznos za isplatu',
                                1,
                                CASE WHEN @ZBIRNI = 0 THEN p.IDRADNIK
                                     ELSE 0
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.PREZIME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.IME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.JMBG
                                     ELSE ''
                                END,
                                1,
                                'Iznos za isplatu',
                                SUM(CASE WHEN p.MJESECOBRACUNA = 1
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ01,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 2
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ02,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 3
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ03,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 4
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ04,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 5
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ05,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 6
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ06,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 7
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ07,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 8
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ08,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 9
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ09,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 10
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ10,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 11
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ11,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 12
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ12,
                                SUM(p.UKUPNOIZNOS) AS UKUPNO,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 1
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI01,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 2
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI02,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 3
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI03,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 4
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI04,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 5
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI05,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 6
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI06,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 7
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI07,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 8
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI08,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 9
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI09,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 10
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI10,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 11
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI11,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 12
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI12,
                                SUM(p.UKUPNOSATI) AS UKUPNOSATI
                        FROM    ( SELECT    OBRACUNRADNICI.IDRADNIK,
                                            RADNIK.PREZIME,
                                            RADNIK.IME,
                                            RADNIK.JMBG,
                                            OBRACUN.MJESECOBRACUNA,
                                            SUM(VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNOZAISPLATU) AS UKUPNOIZNOS,
                                            0 AS UKUPNOSATI
                                  FROM      dbo.OBRACUN
                                            INNER JOIN dbo.OBRACUNRADNICI ON OBRACUN.IDOBRACUN = OBRACUNRADNICI.IDOBRACUN
                                            INNER JOIN dbo.VW_PLACA_ZAPOSLENIK_UKUPNO ON OBRACUNRADNICI.IDOBRACUN = VW_PLACA_ZAPOSLENIK_UKUPNO.IDOBRACUN
                                                                                     AND OBRACUNRADNICI.IDRADNIK = VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK
                                            INNER JOIN dbo.RADNIK ON OBRACUNRADNICI.IDRADNIK = RADNIK.IDRADNIK
                                  WHERE     OBRACUN.GODINAOBRACUNA = @GODINA
                                            AND OBRACUNRADNICI.IDRADNIK &gt;= COALESCE(@IDRADNIK_OD, OBRACUNRADNICI.IDRADNIK)
                                            AND OBRACUNRADNICI.IDRADNIK &lt;= COALESCE(@IDRADNIK_DO, OBRACUNRADNICI.IDRADNIK)
                                  GROUP BY  OBRACUNRADNICI.IDRADNIK,
                                            RADNIK.PREZIME,
                                            RADNIK.IME,
                                            RADNIK.JMBG,
                                            OBRACUN.MJESECOBRACUNA
                                ) AS p
                        GROUP BY CASE WHEN @ZBIRNI = 0 THEN p.IDRADNIK
                                      ELSE 0
                                 END,
                                CASE WHEN @ZBIRNI = 0 THEN p.PREZIME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.IME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.JMBG
                                     ELSE ''
                                END
END


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_MAT_KRIZNI]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_MAT_KRIZNI]
GO

CREATE PROCEDURE dbo.S_PLACA_MAT_KRIZNI
(
    @GODINA AS INT,
    @IDRADNIK_DO AS INT,
    @IDRADNIK_OD AS INT,
    @ZBIRNI AS BIT
) AS
BEGIN
INSERT  INTO #TEMP_M
                SELECT  7,
                        'Posebni porez',
                        1,
                        CASE WHEN @ZBIRNI = 0 THEN p.IDRADNIK
                             ELSE 0
                        END,
                        CASE WHEN @ZBIRNI = 0 THEN p.PREZIME
                             ELSE ''
                        END,
                        CASE WHEN @ZBIRNI = 0 THEN p.IME
                             ELSE ''
                        END,
                        CASE WHEN @ZBIRNI = 0 THEN p.JMBG
                             ELSE ''
                        END,
                        1,
                        'Posebni porez',
                        SUM(CASE WHEN p.MJESECOBRACUNA = 1 THEN p.UKUPNOIZNOS
                                 ELSE 0
                            END) AS MJ01,
                        SUM(CASE WHEN p.MJESECOBRACUNA = 2 THEN p.UKUPNOIZNOS
                                 ELSE 0
                            END) AS MJ02,
                        SUM(CASE WHEN p.MJESECOBRACUNA = 3 THEN p.UKUPNOIZNOS
                                 ELSE 0
                            END) AS MJ03,
                        SUM(CASE WHEN p.MJESECOBRACUNA = 4 THEN p.UKUPNOIZNOS
                                 ELSE 0
                            END) AS MJ04,
                        SUM(CASE WHEN p.MJESECOBRACUNA = 5 THEN p.UKUPNOIZNOS
                                 ELSE 0
                            END) AS MJ05,
                        SUM(CASE WHEN p.MJESECOBRACUNA = 6 THEN p.UKUPNOIZNOS
                                 ELSE 0
                            END) AS MJ06,
                        SUM(CASE WHEN p.MJESECOBRACUNA = 7 THEN p.UKUPNOIZNOS
                                 ELSE 0
                            END) AS MJ07,
                        SUM(CASE WHEN p.MJESECOBRACUNA = 8 THEN p.UKUPNOIZNOS
                                 ELSE 0
                            END) AS MJ08,
                        SUM(CASE WHEN p.MJESECOBRACUNA = 9 THEN p.UKUPNOIZNOS
                                 ELSE 0
                            END) AS MJ09,
                        SUM(CASE WHEN p.MJESECOBRACUNA = 10 THEN p.UKUPNOIZNOS
                                 ELSE 0
                            END) AS MJ10,
                        SUM(CASE WHEN p.MJESECOBRACUNA = 11 THEN p.UKUPNOIZNOS
                                 ELSE 0
                            END) AS MJ11,
                        SUM(CASE WHEN p.MJESECOBRACUNA = 12 THEN p.UKUPNOIZNOS
                                 ELSE 0
                            END) AS MJ12,
                        SUM(p.UKUPNOIZNOS) AS UKUPNO,
                        SUM(CASE WHEN p.MJESECOBRACUNA = 1 THEN p.UKUPNOSATI
                                 ELSE 0
                            END) AS SATI01,
                        SUM(CASE WHEN p.MJESECOBRACUNA = 2 THEN p.UKUPNOSATI
                                 ELSE 0
                            END) AS SATI02,
                        SUM(CASE WHEN p.MJESECOBRACUNA = 3 THEN p.UKUPNOSATI
                                 ELSE 0
                            END) AS SATI03,
                        SUM(CASE WHEN p.MJESECOBRACUNA = 4 THEN p.UKUPNOSATI
                                 ELSE 0
                            END) AS SATI04,
                        SUM(CASE WHEN p.MJESECOBRACUNA = 5 THEN p.UKUPNOSATI
                                 ELSE 0
                            END) AS SATI05,
                        SUM(CASE WHEN p.MJESECOBRACUNA = 6 THEN p.UKUPNOSATI
                                 ELSE 0
                            END) AS SATI06,
                        SUM(CASE WHEN p.MJESECOBRACUNA = 7 THEN p.UKUPNOSATI
                                 ELSE 0
                            END) AS SATI07,
                        SUM(CASE WHEN p.MJESECOBRACUNA = 8 THEN p.UKUPNOSATI
                                 ELSE 0
                            END) AS SATI08,
                        SUM(CASE WHEN p.MJESECOBRACUNA = 9 THEN p.UKUPNOSATI
                                 ELSE 0
                            END) AS SATI09,
                        SUM(CASE WHEN p.MJESECOBRACUNA = 10 THEN p.UKUPNOSATI
                                 ELSE 0
                            END) AS SATI10,
                        SUM(CASE WHEN p.MJESECOBRACUNA = 11 THEN p.UKUPNOSATI
                                 ELSE 0
                            END) AS SATI11,
                        SUM(CASE WHEN p.MJESECOBRACUNA = 12 THEN p.UKUPNOSATI
                                 ELSE 0
                            END) AS SATI12,
                        SUM(p.UKUPNOSATI) AS UKUPNOSATI
                FROM    ( SELECT    OBRACUNRADNICI.IDRADNIK,
                                    RADNIK.PREZIME,
                                    RADNIK.IME,
                                    RADNIK.JMBG,
                                    OBRACUN.MJESECOBRACUNA,
                                    SUM(VW_PLACA_ZAPOSLENIK_UKUPNO.POREZKRIZNI) AS UKUPNOIZNOS,
                                    0 AS UKUPNOSATI
                          FROM      dbo.OBRACUN
                                    INNER JOIN dbo.OBRACUNRADNICI ON OBRACUN.IDOBRACUN = OBRACUNRADNICI.IDOBRACUN
                                    INNER JOIN dbo.RADNIK ON OBRACUNRADNICI.IDRADNIK = RADNIK.IDRADNIK
                                    INNER JOIN dbo.VW_PLACA_ZAPOSLENIK_UKUPNO ON OBRACUNRADNICI.IDOBRACUN = VW_PLACA_ZAPOSLENIK_UKUPNO.IDOBRACUN
                                                                             AND OBRACUNRADNICI.IDRADNIK = VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK
                          WHERE     OBRACUN.GODINAOBRACUNA = @GODINA
                                    AND OBRACUNRADNICI.IDRADNIK &gt;= COALESCE(@IDRADNIK_OD, OBRACUNRADNICI.IDRADNIK)
                                    AND OBRACUNRADNICI.IDRADNIK &lt;= COALESCE(@IDRADNIK_DO, OBRACUNRADNICI.IDRADNIK)
                          GROUP BY  OBRACUNRADNICI.IDRADNIK,
                                    RADNIK.PREZIME,
                                    RADNIK.IME,
                                    RADNIK.JMBG,
                                    OBRACUN.MJESECOBRACUNA
                        ) AS p
                GROUP BY CASE WHEN @ZBIRNI = 0 THEN p.IDRADNIK
                              ELSE 0
                         END,
                        CASE WHEN @ZBIRNI = 0 THEN p.PREZIME
                             ELSE ''
                        END,
                        CASE WHEN @ZBIRNI = 0 THEN p.IME
                             ELSE ''
                        END,
                        CASE WHEN @ZBIRNI = 0 THEN p.JMBG
                             ELSE ''
                        END
END


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_MAT_NETOPLACA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_MAT_NETOPLACA]
GO

CREATE PROCEDURE dbo.S_PLACA_MAT_NETOPLACA
(
    @GODINA AS INT,
    @IDRADNIK_DO AS INT,
    @IDRADNIK_OD AS INT,
    @ZBIRNI AS BIT
) AS
BEGIN
INSERT  INTO #TEMP_M
                        SELECT  6,
                                'Neto plaća',
                                1,
                                CASE WHEN @ZBIRNI = 0 THEN p.IDRADNIK
                                     ELSE 0
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.PREZIME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.IME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.JMBG
                                     ELSE ''
                                END,
                                1,
                                'Neto plaća',
                                SUM(CASE WHEN p.MJESECOBRACUNA = 1
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ01,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 2
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ02,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 3
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ03,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 4
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ04,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 5
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ05,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 6
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ06,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 7
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ07,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 8
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ08,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 9
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ09,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 10
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ10,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 11
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ11,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 12
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ12,
                                SUM(p.UKUPNOIZNOS) AS UKUPNO,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 1
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI01,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 2
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI02,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 3
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI03,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 4
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI04,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 5
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI05,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 6
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI06,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 7
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI07,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 8
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI08,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 9
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI09,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 10
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI10,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 11
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI11,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 12
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI12,
                                SUM(p.UKUPNOSATI) AS UKUPNOSATI
                        FROM    ( SELECT    OBRACUNRADNICI.IDRADNIK,
                                            RADNIK.PREZIME,
                                            RADNIK.IME,
                                            RADNIK.JMBG,
                                            OBRACUN.MJESECOBRACUNA,
                                            SUM(VW_PLACA_ZAPOSLENIK_UKUPNO.NETOPLACA) AS UKUPNOIZNOS,
                                            0 AS UKUPNOSATI
                                  FROM      dbo.OBRACUN
                                            INNER JOIN dbo.OBRACUNRADNICI ON OBRACUN.IDOBRACUN = OBRACUNRADNICI.IDOBRACUN
                                            INNER JOIN dbo.RADNIK ON OBRACUNRADNICI.IDRADNIK = RADNIK.IDRADNIK
                                            INNER JOIN dbo.VW_PLACA_ZAPOSLENIK_UKUPNO ON OBRACUNRADNICI.IDOBRACUN = VW_PLACA_ZAPOSLENIK_UKUPNO.IDOBRACUN
                                                                                     AND OBRACUNRADNICI.IDRADNIK = VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK
                                  WHERE     OBRACUN.GODINAOBRACUNA = @GODINA
                                            AND OBRACUNRADNICI.IDRADNIK &gt;= COALESCE(@IDRADNIK_OD, OBRACUNRADNICI.IDRADNIK)
                                            AND OBRACUNRADNICI.IDRADNIK &lt;= COALESCE(@IDRADNIK_DO, OBRACUNRADNICI.IDRADNIK)
                                  GROUP BY  OBRACUNRADNICI.IDRADNIK,
                                            RADNIK.PREZIME,
                                            RADNIK.IME,
                                            RADNIK.JMBG,
                                            OBRACUN.MJESECOBRACUNA
                                ) AS p
                        GROUP BY CASE WHEN @ZBIRNI = 0 THEN p.IDRADNIK
                                      ELSE 0
                                 END,
                                CASE WHEN @ZBIRNI = 0 THEN p.PREZIME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.IME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.JMBG
                                     ELSE ''
                                END
END


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_MAT_OBUSTAVE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_MAT_OBUSTAVE]
GO

CREATE PROCEDURE dbo.S_PLACA_MAT_OBUSTAVE
(
    @GODINA AS INT,
    @IDRADNIK_DO AS INT,
    @IDRADNIK_OD AS INT,
    @ZBIRNI AS BIT
) AS
BEGIN
INSERT  INTO #TEMP_M
                        SELECT  9,
                                'Obustave',
                                1,
                                CASE WHEN @ZBIRNI = 0 THEN p.IDRADNIK
                                     ELSE 0
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.PREZIME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.IME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.JMBG
                                     ELSE ''
                                END,
                                p.IDOBUSTAVA,
                                p.NAZIVOBUSTAVA,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 1
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ01,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 2
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ02,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 3
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ03,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 4
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ04,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 5
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ05,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 6
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ06,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 7
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ07,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 8
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ08,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 9
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ09,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 10
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ10,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 11
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ11,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 12
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ12,
                                SUM(p.UKUPNOIZNOS) AS UKUPNO,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 1
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI01,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 2
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI02,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 3
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI03,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 4
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI04,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 5
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI05,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 6
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI06,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 7
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI07,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 8
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI08,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 9
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI09,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 10
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI10,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 11
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI11,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 12
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI12,
                                SUM(p.UKUPNOSATI) AS UKUPNOSATI
                        FROM    ( SELECT    OBRACUNRADNICI.IDRADNIK,
                                            RADNIK.PREZIME,
                                            RADNIK.IME,
                                            RADNIK.JMBG,
                                            OBRACUN.MJESECOBRACUNA,
                                            OBRACUNOBUSTAVE.IDOBUSTAVA,
                                            LEFT(OBRACUNOBUSTAVE.NAZIVOBUSTAVA,49) AS nazivobustava,
                                            SUM(OBRACUNOBUSTAVE.OBRACUNATAOBUSTAVAUKUNAMA) AS UKUPNOIZNOS,
                                            0 AS UKUPNOSATI
                                  FROM      dbo.OBRACUN
                                            INNER JOIN dbo.OBRACUNRADNICI ON OBRACUN.IDOBRACUN = OBRACUNRADNICI.IDOBRACUN
                                            INNER JOIN dbo.OBRACUNOBUSTAVE ON OBRACUNRADNICI.IDOBRACUN = OBRACUNOBUSTAVE.IDOBRACUN
                                                                          AND OBRACUNRADNICI.IDRADNIK = OBRACUNOBUSTAVE.IDRADNIK
                                            INNER JOIN dbo.RADNIK ON OBRACUNRADNICI.IDRADNIK = RADNIK.IDRADNIK
                                  WHERE     OBRACUN.GODINAOBRACUNA = @GODINA
                                            AND OBRACUNRADNICI.IDRADNIK &gt;= COALESCE(@IDRADNIK_OD, OBRACUNRADNICI.IDRADNIK)
                                            AND OBRACUNRADNICI.IDRADNIK &lt;= COALESCE(@IDRADNIK_DO, OBRACUNRADNICI.IDRADNIK)
                                  GROUP BY  OBRACUNRADNICI.IDRADNIK,
                                            RADNIK.PREZIME,
                                            RADNIK.IME,
                                            RADNIK.JMBG,
                                            OBRACUN.MJESECOBRACUNA,
                                            OBRACUNOBUSTAVE.IDOBUSTAVA,
                                            OBRACUNOBUSTAVE.NAZIVOBUSTAVA
                                ) AS p
                        GROUP BY CASE WHEN @ZBIRNI = 0 THEN p.IDRADNIK
                                      ELSE 0
                                 END,
                                CASE WHEN @ZBIRNI = 0 THEN p.PREZIME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.IME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.JMBG
                                     ELSE ''
                                END,
                                p.IDOBUSTAVA,
                                p.NAZIVOBUSTAVA
END
GO



IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_MAT_ODBITAK]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_MAT_ODBITAK]
GO

CREATE PROCEDURE dbo.S_PLACA_MAT_ODBITAK
(
    @GODINA AS INT,
    @IDRADNIK_DO AS INT,
    @IDRADNIK_OD AS INT,
    @ZBIRNI AS BIT
) AS
BEGIN
INSERT  INTO #TEMP_M
                        SELECT  5,
                                'Osobni odbitak',
                                3,
                                CASE WHEN @ZBIRNI = 0 THEN p.IDRADNIK
                                     ELSE 0
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.PREZIME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.IME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.JMBG
                                     ELSE ''
                                END,
                                1,
                                'Ukupno iskoristivo',
                                SUM(CASE WHEN p.MJESECOBRACUNA = 1
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ01,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 2
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ02,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 3
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ03,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 4
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ04,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 5
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ05,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 6
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ06,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 7
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ07,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 8
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ08,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 9
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ09,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 10
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ10,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 11
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ11,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 12
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ12,
                                SUM(p.UKUPNOIZNOS) AS UKUPNO,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 1
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI01,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 2
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI02,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 3
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI03,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 4
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI04,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 5
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI05,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 6
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI06,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 7
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI07,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 8
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI08,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 9
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI09,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 10
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI10,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 11
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI11,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 12
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI12,
                                SUM(p.UKUPNOSATI) AS UKUPNOSATI
                        FROM    ( SELECT    OBRACUNRADNICI.IDRADNIK,
                                            RADNIK.PREZIME,
                                            RADNIK.IME,
                                            RADNIK.JMBG,
                                            OBRACUN.MJESECOBRACUNA,
                                            SUM(OBRACUN.OSNOVNIOO
                                                * OBRACUNRADNICI.FAKTOO) AS UKUPNOIZNOS,
                                            0 AS UKUPNOSATI
                                  FROM      dbo.OBRACUN
                                            INNER JOIN dbo.OBRACUNRADNICI ON OBRACUN.IDOBRACUN = OBRACUNRADNICI.IDOBRACUN
                                            INNER JOIN dbo.RADNIK ON OBRACUNRADNICI.IDRADNIK = RADNIK.IDRADNIK
                                  WHERE     OBRACUN.GODINAOBRACUNA = @GODINA
                                            AND OBRACUNRADNICI.IDRADNIK &gt;= COALESCE(@IDRADNIK_OD, OBRACUNRADNICI.IDRADNIK)
                                            AND OBRACUNRADNICI.IDRADNIK &lt;= COALESCE(@IDRADNIK_DO, OBRACUNRADNICI.IDRADNIK)
                                  GROUP BY  OBRACUNRADNICI.IDRADNIK,
                                            RADNIK.PREZIME,
                                            RADNIK.IME,
                                            RADNIK.JMBG,
                                            OBRACUN.MJESECOBRACUNA
                                ) AS p
                        GROUP BY CASE WHEN @ZBIRNI = 0 THEN p.IDRADNIK
                                      ELSE 0
                                 END,
                                CASE WHEN @ZBIRNI = 0 THEN p.PREZIME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.IME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.JMBG
                                     ELSE ''
                                END

		
                INSERT  INTO #TEMP_M
                        SELECT  5,
                                'Osobni odbitak',
                                1,
                                CASE WHEN @ZBIRNI = 0 THEN p.IDRADNIK
                                     ELSE 0
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.PREZIME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.IME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.JMBG
                                     ELSE ''
                                END,
                                2,
                                'Iskoristeno',
                                SUM(CASE WHEN p.MJESECOBRACUNA = 1
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ01,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 2
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ02,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 3
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ03,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 4
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ04,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 5
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ05,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 6
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ06,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 7
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ07,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 8
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ08,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 9
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ09,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 10
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ10,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 11
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ11,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 12
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ12,
                                SUM(p.UKUPNOIZNOS) AS UKUPNO,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 1
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI01,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 2
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI02,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 3
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI03,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 4
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI04,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 5
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI05,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 6
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI06,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 7
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI07,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 8
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI08,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 9
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI09,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 10
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI10,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 11
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI11,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 12
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI12,
                                SUM(p.UKUPNOSATI) AS UKUPNOSATI
                        FROM    ( SELECT    OBRACUNRADNICI.IDRADNIK,
                                            RADNIK.PREZIME,
                                            RADNIK.IME,
                                            RADNIK.JMBG,
                                            OBRACUN.MJESECOBRACUNA,
                                            SUM(OBRACUNRADNICI.ISKORISTENOOO) AS UKUPNOIZNOS,
                                            0 AS UKUPNOSATI
                                  FROM      dbo.OBRACUN
                                            INNER JOIN dbo.OBRACUNRADNICI ON OBRACUN.IDOBRACUN = OBRACUNRADNICI.IDOBRACUN
                                            INNER JOIN dbo.RADNIK ON OBRACUNRADNICI.IDRADNIK = RADNIK.IDRADNIK
                                  WHERE     OBRACUN.GODINAOBRACUNA = @GODINA
                                            AND OBRACUNRADNICI.IDRADNIK &gt;= COALESCE(@IDRADNIK_OD, OBRACUNRADNICI.IDRADNIK)
                                            AND OBRACUNRADNICI.IDRADNIK &lt;= COALESCE(@IDRADNIK_DO, OBRACUNRADNICI.IDRADNIK)
                                  GROUP BY  OBRACUNRADNICI.IDRADNIK,
                                            RADNIK.PREZIME,
                                            RADNIK.IME,
                                            RADNIK.JMBG,
                                            OBRACUN.MJESECOBRACUNA
                                ) AS p
                        GROUP BY CASE WHEN @ZBIRNI = 0 THEN p.IDRADNIK
                                      ELSE 0
                                 END,
                                CASE WHEN @ZBIRNI = 0 THEN p.PREZIME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.IME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.JMBG
                                     ELSE ''
                                END
END


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_MAT_OLAKSICE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_MAT_OLAKSICE]
GO

CREATE PROCEDURE dbo.S_PLACA_MAT_OLAKSICE
(
    @GODINA AS INT,
    @IDRADNIK_DO AS INT,
    @IDRADNIK_OD AS INT,
    @ZBIRNI AS BIT
) AS
BEGIN
INSERT  INTO #TEMP_M
                        SELECT  8,
                                'Olakšice',
                                1,
                                CASE WHEN @ZBIRNI = 0 THEN p.IDRADNIK
                                     ELSE 0
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.PREZIME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.IME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.JMBG
                                     ELSE ''
                                END,
                                p.IDOLAKSICE,
                                p.NAZIVOLAKSICE,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 1
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ01,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 2
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ02,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 3
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ03,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 4
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ04,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 5
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ05,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 6
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ06,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 7
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ07,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 8
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ08,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 9
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ09,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 10
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ10,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 11
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ11,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 12
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ12,
                                SUM(p.UKUPNOIZNOS) AS UKUPNO,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 1
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI01,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 2
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI02,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 3
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI03,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 4
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI04,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 5
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI05,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 6
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI06,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 7
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI07,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 8
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI08,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 9
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI09,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 10
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI10,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 11
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI11,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 12
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI12,
                                SUM(p.UKUPNOSATI) AS UKUPNOSATI
                        FROM    ( SELECT    OBRACUNRADNICI.IDRADNIK,
                                            RADNIK.PREZIME,
                                            RADNIK.IME,
                                            RADNIK.JMBG,
                                            OBRACUN.MJESECOBRACUNA,
                                            OBRACUNOLAKSICE.IDOLAKSICE,
                                            LEFT(OBRACUNOLAKSICE.NAZIVOLAKSICE,49) AS NAZIVOLAKSICE,
                                            SUM(OBRACUNOLAKSICE.OBRACUNATAOLAKSICA) AS UKUPNOIZNOS,
                                            0 AS UKUPNOSATI
                                  FROM      dbo.OBRACUN
                                            INNER JOIN dbo.OBRACUNRADNICI ON OBRACUN.IDOBRACUN = OBRACUNRADNICI.IDOBRACUN
                                            INNER JOIN dbo.OBRACUNOLAKSICE ON OBRACUNRADNICI.IDOBRACUN = OBRACUNOLAKSICE.IDOBRACUN
                                                                          AND OBRACUNRADNICI.IDRADNIK = OBRACUNOLAKSICE.IDRADNIK
                                            INNER JOIN dbo.RADNIK ON OBRACUNRADNICI.IDRADNIK = RADNIK.IDRADNIK
                                  WHERE     OBRACUN.GODINAOBRACUNA = @GODINA
                                            AND OBRACUNRADNICI.IDRADNIK &gt;= COALESCE(@IDRADNIK_OD, OBRACUNRADNICI.IDRADNIK)
                                            AND OBRACUNRADNICI.IDRADNIK &lt;= COALESCE(@IDRADNIK_DO, OBRACUNRADNICI.IDRADNIK)
                                  GROUP BY  OBRACUNRADNICI.IDRADNIK,
                                            RADNIK.PREZIME,
                                            RADNIK.IME,
                                            RADNIK.JMBG,
                                            OBRACUN.MJESECOBRACUNA,
                                            OBRACUNOLAKSICE.IDOLAKSICE,
                                            OBRACUNOLAKSICE.NAZIVOLAKSICE
                                ) AS p
                        GROUP BY CASE WHEN @ZBIRNI = 0 THEN p.IDRADNIK
                                      ELSE 0
                                 END,
                                CASE WHEN @ZBIRNI = 0 THEN p.PREZIME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.IME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.JMBG
                                     ELSE ''
                                END,
                                p.IDOLAKSICE,
                                p.NAZIVOLAKSICE
END
GO



IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_MAT_POREZ]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_MAT_POREZ]
GO

CREATE PROCEDURE dbo.S_PLACA_MAT_POREZ
(
    @GODINA AS INT,
    @IDRADNIK_DO AS INT,
    @IDRADNIK_OD AS INT,
    @ZBIRNI AS BIT
) AS
BEGIN
INSERT  INTO #TEMP_M
                        SELECT  4,
                                'Porezi i prirez',
                                1,
                                CASE WHEN @ZBIRNI = 0 THEN p.IDRADNIK
                                     ELSE 0
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.PREZIME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.IME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.JMBG
                                     ELSE ''
                                END,
                                p.IDPOREZ,
                                p.NAZIVPOREZ,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 1
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ01,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 2
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ02,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 3
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ03,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 4
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ04,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 5
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ05,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 6
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ06,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 7
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ07,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 8
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ08,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 9
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ09,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 10
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ10,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 11
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ11,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 12
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ12,
                                SUM(p.UKUPNOIZNOS) AS UKUPNO,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 1
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI01,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 2
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI02,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 3
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI03,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 4
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI04,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 5
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI05,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 6
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI06,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 7
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI07,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 8
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI08,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 9
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI09,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 10
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI10,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 11
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI11,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 12
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI12,
                                SUM(p.UKUPNOSATI) AS UKUPNOSATI
                        FROM    ( SELECT    OBRACUNRADNICI.IDRADNIK,
                                            RADNIK.PREZIME,
                                            RADNIK.IME,
                                            RADNIK.JMBG,
                                            OBRACUN.MJESECOBRACUNA,
                                            OBRACUNPOREZI.IDPOREZ,
                                            OBRACUNPOREZI.NAZIVPOREZ,
                                            SUM(OBRACUNPOREZI.OBRACUNATIPOREZ) AS UKUPNOIZNOS,
                                            0 AS UKUPNOSATI
                                  FROM      dbo.OBRACUN
                                            INNER JOIN dbo.OBRACUNRADNICI ON OBRACUN.IDOBRACUN = OBRACUNRADNICI.IDOBRACUN
                                            INNER JOIN dbo.OBRACUNPOREZI ON OBRACUNRADNICI.IDOBRACUN = OBRACUNPOREZI.IDOBRACUN
                                                                        AND OBRACUNRADNICI.IDRADNIK = OBRACUNPOREZI.IDRADNIK
                                            INNER JOIN dbo.RADNIK ON OBRACUNRADNICI.IDRADNIK = RADNIK.IDRADNIK
                                  WHERE     OBRACUN.GODINAOBRACUNA = @GODINA
                                            AND OBRACUNRADNICI.IDRADNIK &gt;= COALESCE(@IDRADNIK_OD, OBRACUNRADNICI.IDRADNIK)
                                            AND OBRACUNRADNICI.IDRADNIK &lt;= COALESCE(@IDRADNIK_DO, OBRACUNRADNICI.IDRADNIK)
                                  GROUP BY  OBRACUNRADNICI.IDRADNIK,
                                            RADNIK.PREZIME,
                                            RADNIK.IME,
                                            RADNIK.JMBG,
                                            OBRACUN.MJESECOBRACUNA,
                                            OBRACUNPOREZI.IDPOREZ,
                                            OBRACUNPOREZI.NAZIVPOREZ
                                ) AS p
                        GROUP BY CASE WHEN @ZBIRNI = 0 THEN p.IDRADNIK
                                      ELSE 0
                                 END,
                                CASE WHEN @ZBIRNI = 0 THEN p.PREZIME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.IME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.JMBG
                                     ELSE ''
                                END,
                                p.IDPOREZ,
                                p.NAZIVPOREZ

                INSERT  INTO #TEMP_M
                        SELECT  4,
                                'Porezi i prirez',
                                1,
                                CASE WHEN @ZBIRNI = 0 THEN p.IDRADNIK
                                     ELSE 0
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.PREZIME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.IME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.JMBG
                                     ELSE ''
                                END,
                                99,
                                'PRIREZ',
                                SUM(CASE WHEN p.MJESECOBRACUNA = 1
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ01,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 2
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ02,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 3
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ03,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 4
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ04,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 5
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ05,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 6
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ06,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 7
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ07,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 8
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ08,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 9
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ09,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 10
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ10,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 11
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ11,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 12
                                         THEN p.UKUPNOIZNOS
                                         ELSE 0
                                    END) AS MJ12,
                                SUM(p.UKUPNOIZNOS) AS UKUPNO,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 1
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI01,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 2
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI02,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 3
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI03,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 4
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI04,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 5
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI05,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 6
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI06,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 7
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI07,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 8
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI08,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 9
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI09,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 10
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI10,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 11
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI11,
                                SUM(CASE WHEN p.MJESECOBRACUNA = 12
                                         THEN p.UKUPNOSATI
                                         ELSE 0
                                    END) AS SATI12,
                                SUM(p.UKUPNOSATI) AS UKUPNOSATI
                        FROM    ( SELECT    OBRACUNRADNICI.IDRADNIK,
                                            RADNIK.PREZIME,
                                            RADNIK.IME,
                                            RADNIK.JMBG,
                                            OBRACUN.MJESECOBRACUNA,
                                            SUM(OBRACUNRADNICI.OBRACUNATIPRIREZ) AS UKUPNOIZNOS,
                                            0 AS UKUPNOSATI
                                  FROM      dbo.OBRACUN
                                            INNER JOIN dbo.OBRACUNRADNICI ON OBRACUN.IDOBRACUN = OBRACUNRADNICI.IDOBRACUN
                                            INNER JOIN dbo.RADNIK ON OBRACUNRADNICI.IDRADNIK = RADNIK.IDRADNIK
                                  WHERE     OBRACUN.GODINAOBRACUNA = @GODINA
                                            AND OBRACUNRADNICI.IDRADNIK &gt;= COALESCE(@IDRADNIK_OD, OBRACUNRADNICI.IDRADNIK)
                                            AND OBRACUNRADNICI.IDRADNIK &lt;= COALESCE(@IDRADNIK_DO, OBRACUNRADNICI.IDRADNIK)
                                  GROUP BY  OBRACUNRADNICI.IDRADNIK,
                                            RADNIK.PREZIME,
                                            RADNIK.IME,
                                            RADNIK.JMBG,
                                            OBRACUN.MJESECOBRACUNA
                                ) AS p
                        GROUP BY CASE WHEN @ZBIRNI = 0 THEN p.IDRADNIK
                                      ELSE 0
                                 END,
                                CASE WHEN @ZBIRNI = 0 THEN p.PREZIME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.IME
                                     ELSE ''
                                END,
                                CASE WHEN @ZBIRNI = 0 THEN p.JMBG
                                     ELSE ''
                                END
END


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_MATICNI_KARTON_ZAPOSLENIKA_ILI_USTANOVE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_MATICNI_KARTON_ZAPOSLENIKA_ILI_USTANOVE]
GO








CREATE PROCEDURE [dbo].[S_PLACA_MATICNI_KARTON_ZAPOSLENIKA_ILI_USTANOVE]
    (
      @GODINA INT,
      @IDRADNIK_OD INT = NULL,
      @IDRADNIK_DO INT = NULL,
      @ZBIRNI BIT = 0,
      @UKLJUCENOBRUTO BIT = 1,
      @UKLJUCENODOPRINOSIIZ BIT = 1,
      @UKLJUCENODOPRINOSINA BIT = 1,
      @UKLJUCENOPOREZI BIT = 1,
      @UKLJUCENOOO BIT = 1,
      @UKLJUCENOOBUSTAVE BIT = 1,
      @UKLJUCENOOLAKSICE BIT = 1,
      @UKLJUCENONETOPLACA BIT = 1,
      @UKLJUCENONETONAKNADE BIT = 1,
      @UKLJUCENOISPLATA BIT = 1
    )
AS 
    BEGIN

        SET FMTONLY OFF
        SET NOCOUNT ON

        CREATE TABLE #TEMP_M
            (
              TIP TINYINT,
              OPISTIP VARCHAR(50),
              VRSTAVRIJ TINYINT,
              IDRADNIK INT,
              PREZIME VARCHAR(50),
              IME VARCHAR(50),
              JMBG VARCHAR(13),
              IDPODATKA INT,
              NAZIVPODATKA VARCHAR(50),
              MJ01 DECIMAL(18, 2),
              MJ02 DECIMAL(18, 2),
              MJ03 DECIMAL(18, 2),
              MJ04 DECIMAL(18, 2),
              MJ05 DECIMAL(18, 2),
              MJ06 DECIMAL(18, 2),
              MJ07 DECIMAL(18, 2),
              MJ08 DECIMAL(18, 2),
              MJ09 DECIMAL(18, 2),
              MJ10 DECIMAL(18, 2),
              MJ11 DECIMAL(18, 2),
              MJ12 DECIMAL(18, 2),
              UKUPNO DECIMAL(18, 2),
              SATI01 DECIMAL(18, 2),
              SATI02 DECIMAL(18, 2),
              SATI03 DECIMAL(18, 2),
              SATI04 DECIMAL(18, 2),
              SATI05 DECIMAL(18, 2),
              SATI06 DECIMAL(18, 2),
              SATI07 DECIMAL(18, 2),
              SATI08 DECIMAL(18, 2),
              SATI09 DECIMAL(18, 2),
              SATI10 DECIMAL(18, 2),
              SATI11 DECIMAL(18, 2),
              SATI12 DECIMAL(18, 2),
              UKUPNOSATI DECIMAL(18, 2)
            )

        IF @UKLJUCENOBRUTO = 1
            OR @UKLJUCENONETONAKNADE = 1 
            BEGIN
		
                EXEC dbo.S_PLACA_MAT_ELEMENTI @GODINA, @IDRADNIK_DO, @IDRADNIK_OD, @UKLJUCENOBRUTO, @UKLJUCENONETONAKNADE, @ZBIRNI ;
            END

        IF @UKLJUCENODOPRINOSIIZ = 1
            OR @UKLJUCENODOPRINOSINA = 1 
            BEGIN
		
                EXEC dbo.S_PLACA_MAT_DOP @GODINA, @IDRADNIK_DO, @IDRADNIK_OD, @UKLJUCENODOPRINOSIIZ, @UKLJUCENODOPRINOSINA, @ZBIRNI ;
            END


        IF @UKLJUCENOPOREZI = 1 
            BEGIN
		
                EXEC dbo.S_PLACA_MAT_POREZ @GODINA, @IDRADNIK_DO, @IDRADNIK_OD, @ZBIRNI ;
            END

        IF @UKLJUCENOOO = 1 
            BEGIN
		
                EXEC dbo.S_PLACA_MAT_ODBITAK @GODINA, @IDRADNIK_DO, @IDRADNIK_OD, @ZBIRNI ;
            END


        IF @UKLJUCENONETOPLACA = 1 
            BEGIN
	
                EXEC dbo.S_PLACA_MAT_NETOPLACA @GODINA, @IDRADNIK_DO, @IDRADNIK_OD, @ZBIRNI ;
            END


        EXEC dbo.S_PLACA_MAT_KRIZNI @GODINA, @IDRADNIK_DO, @IDRADNIK_OD, @ZBIRNI ;
	






        IF @UKLJUCENOOLAKSICE = 1 
            BEGIN
	
                EXEC dbo.S_PLACA_MAT_OLAKSICE @GODINA, @IDRADNIK_DO, @IDRADNIK_OD, @ZBIRNI ;
            END


        IF @UKLJUCENOOBUSTAVE = 1 
            BEGIN
		
                EXEC dbo.S_PLACA_MAT_OBUSTAVE @GODINA, @IDRADNIK_DO, @IDRADNIK_OD, @ZBIRNI ;
            END

        IF @UKLJUCENOISPLATA = 1 
            BEGIN
		                EXEC dbo.S_PLACA_MAT_ISPLATE @GODINA, @IDRADNIK_DO, @IDRADNIK_OD, @ZBIRNI ;
            END


        SELECT  *
        FROM    #TEMP_M
        ORDER BY TIP,
                IDPODATKA	
						

        SET NOCOUNT OFF
        SET FMTONLY ON
    END










GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_NA_RUKE_ISPLATA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_NA_RUKE_ISPLATA]
GO






CREATE PROCEDURE [dbo].[S_PLACA_NA_RUKE_ISPLATA]
(
@IDOBRACUN varchar(11),
@VBDIBANKE varchar(7) = NULL
)
AS
BEGIN
SELECT	OBRACUNRADNICI.IDRADNIK, 
			RADNIK.PREZIME, 
			RADNIK.IME, 
			RADNIK.JMBG, 
			RADNIK.TEKUCI, 
			RADNIK.ZBIRNINETO,
			BANKE.VBDIBANKE, 
			BANKE.ZRNBANKE, 
			BANKE.IDBANKE,
			BANKE.NAZIVBANKE1,
			BANKE.NAZIVBANKE2,
	        VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNOZAISPLATU -  
	        ISNULL((SELECT SUM(iznosizuzeca) FROM OBRACUNOBRACUNLevel1ObracunIzuzece
                         WHERE OBRACUNOBRACUNLevel1ObracunIzuzece.idobracun = @idobracun AND OBRACUNOBRACUNLevel1ObracunIzuzece.idradnik = obracunradnici.idradnik),0)
                         
	        
	        + ISNULL(KONACNIPOMOCNA.PRI,0)+ ISNULL(KONACNIPOMOCNA.POR,0) as UKUPNOZAISPLATU
	FROM 		OBRACUN
	INNER JOIN	OBRACUNRADNICI ON OBRACUN.IDOBRACUN = OBRACUNRADNICI.IDOBRACUN
	INNER JOIN	RADNIK ON OBRACUNRADNICI.IDRADNIK = RADNIK.IDRADNIK 
	INNER JOIN	BANKE ON RADNIK.IDBANKE = BANKE.IDBANKE 
	INNER JOIN	VW_PLACA_ZAPOSLENIK_UKUPNO ON OBRACUNRADNICI.IDOBRACUN = VW_PLACA_ZAPOSLENIK_UKUPNO.IDOBRACUN AND OBRACUNRADNICI.IDRADNIK = VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK
	AND		OBRACUNRADNICI.IDOBRACUN = @IDOBRACUN
	AND		BANKE.VBDIBANKE = coalesce(@VBDIBANKE,banke.vbdibanke)
	LEFT JOIN KONACNIPOMOCNA ON VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK = KONACNIPOMOCNA.IDRADNIK AND VW_PLACA_ZAPOSLENIK_UKUPNO.IDOBRACUN = KONACNIPOMOCNA.SIFRAOBRACUNA
	
			
	WHERE	VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNOZAISPLATU -  
	        ISNULL((SELECT SUM(iznosizuzeca) FROM OBRACUNOBRACUNLevel1ObracunIzuzece
                         WHERE OBRACUNOBRACUNLevel1ObracunIzuzece.idobracun = @idobracun AND OBRACUNOBRACUNLevel1ObracunIzuzece.idradnik = obracunradnici.idradnik),0)
                         
	        
	        + ISNULL(KONACNIPOMOCNA.PRI,0)+ ISNULL(KONACNIPOMOCNA.POR,0) &gt; 0


			
			
			
						
 UNION ALL
		
			
		SELECT	OBRACUNOBRACUNLevel1ObracunIzuzece.IDRADNIK, 
			RADNIK.PREZIME, 
			RADNIK.IME, 
			RADNIK.JMBG, 
			TEKUCIizuzece AS tekuci, 
			0,
			OBRACUNOBRACUNLevel1ObracunIzuzece.VBDIIZUZECE, 
			TEKUCIizuzece,
			0,
			primateljizuzece1,
			primateljizuzece2,
	        ISNULL(OBRACUNOBRACUNLevel1ObracunIzuzece.IZNOSIZUZECA,0)
	FROM 		OBRACUNOBRACUNLevel1ObracunIzuzece
	INNER JOIN	RADNIK ON OBRACUNOBRACUNLevel1ObracunIzuzece.IDRADNIK = RADNIK.IDRADNIK 
		
		INNER JOIN	VW_PLACA_ZAPOSLENIK_UKUPNO ON OBRACUNOBRACUNLevel1ObracunIzuzece.IDOBRACUN = VW_PLACA_ZAPOSLENIK_UKUPNO.IDOBRACUN AND OBRACUNOBRACUNLevel1ObracunIzuzece.IDRADNIK = VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK
	AND		OBRACUNOBRACUNLevel1ObracunIzuzece.IDOBRACUN = @IDOBRACUN
		WHERE	OBRACUNOBRACUNLevel1ObracunIzuzece.IZNOSIZUZECA &gt; 0
	
	
	
	ORDER BY 	
			RADNIK.PREZIME, 
			RADNIK.IME

END
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_NETO]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_NETO]
GO







CREATE PROCEDURE dbo.S_PLACA_NETO
(
@IDOBRACUN varchar(11)
)
AS
BEGIN

	SET NOCOUNT ON

	SELECT     SUM(dbo.OBRACUNELEMENTI.OBRSATI) AS SATI, SUM(dbo.OBRACUNELEMENTI.OBRIZNOS) AS IZNOS, dbo.RADNIK.PREZIME, dbo.RADNIK.IME, dbo.RADNIK.JMBG, 
                      dbo.RADNIK.IDRADNIK, dbo.OBRACUNELEMENTI.IDVRSTAELEMENTA, dbo.OBRACUNELEMENTI.NAZIVELEMENT, dbo.OBRACUNELEMENTI.NAZIVVRSTAELEMENT
FROM         dbo.OBRACUNELEMENTI INNER JOIN
                      dbo.RADNIK ON dbo.OBRACUNELEMENTI.IDRADNIK = dbo.RADNIK.IDRADNIK
WHERE IDOBRACUN = @IDOBRACUN
GROUP BY dbo.RADNIK.PREZIME, dbo.RADNIK.IME, dbo.RADNIK.JMBG, dbo.RADNIK.IDRADNIK, dbo.OBRACUNELEMENTI.IDVRSTAELEMENTA, 
                      dbo.OBRACUNELEMENTI.NAZIVELEMENT, dbo.OBRACUNELEMENTI.NAZIVVRSTAELEMENT
HAVING      (dbo.OBRACUNELEMENTI.IDVRSTAELEMENTA = 1)
order by RADNIK.PREZIME

	SET NOCOUNT OFF

END









GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_OBUSTAVA_OBRACUNATA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_OBUSTAVA_OBRACUNATA]
GO






CREATE PROCEDURE dbo.S_PLACA_OBUSTAVA_OBRACUNATA
(
	@IDOBRACUN VARCHAR(11)
	)
AS
BEGIN
SET NOCOUNT ON
SELECT Count(*) AS obracunato,OBRACUNOBUSTAVE.IDRADNIK,OBRACUNOBUSTAVE.IDOBUSTAVA
FROM OBRACUN INNER JOIN OBRACUNobustave 
ON OBRACUN.IDOBRACUN = OBRACUNobustave.IDOBRACUN INNER JOIN OBRACUN OBRACUN_1 
ON OBRACUN.MJESECOBRACUNA = OBRACUN_1.MJESECOBRACUNA AND OBRACUN.GODINAOBRACUNA = OBRACUN_1.GODINAOBRACUNA 
WHERE (OBRACUN_1.IDOBRACUN = @IDOBRACUN) AND (OBRACUN.IDOBRACUN &lt;&gt; @IDOBRACUN)
GROUP BY OBRACUNOBUSTAVE.IDRADNIK,OBRACUNOBUSTAVE.IDOBUSTAVA
END








GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_OBUSTAVE_FIKSNE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_OBUSTAVE_FIKSNE]
GO








create PROCEDURE dbo.S_PLACA_OBUSTAVE_FIKSNE
(
@IDOBRACUN varchar(11)
)
AS
BEGIN
SELECT     SUM(dbo.OBRACUNOBUSTAVE.OBRACUNATAOBUSTAVAUKUNAMA) AS Obracunato, dbo.OBRACUNOBUSTAVE.NAZIVOBUSTAVA, dbo.OBRACUNOBUSTAVE.IDOBUSTAVA, 
                      dbo.OBRACUNOBUSTAVE.PRIMATELJOBUSTAVA1, dbo.OBRACUNOBUSTAVE.PRIMATELJOBUSTAVA2, dbo.RADNIK.PREZIME, dbo.RADNIK.IME, dbo.RADNIK.JMBG, 
                      dbo.RADNIK.IDRADNIK, dbo.OBRACUNOBUSTAVE.IZNOSOBUSTAVE
FROM         dbo.OBRACUNOBUSTAVE  INNER JOIN
                      dbo.RADNIK ON dbo.OBRACUNOBUSTAVE.IDRADNIK = dbo.RADNIK.IDRADNIK 
WHERE IDOBRACUN = @IDOBRACUN
GROUP BY dbo.OBRACUNOBUSTAVE.NAZIVOBUSTAVA, dbo.OBRACUNOBUSTAVE.IDOBUSTAVA, dbo.OBRACUNOBUSTAVE.PRIMATELJOBUSTAVA1, dbo.OBRACUNOBUSTAVE.PRIMATELJOBUSTAVA2, 
                      dbo.RADNIK.PREZIME, dbo.RADNIK.IME, dbo.RADNIK.JMBG, dbo.RADNIK.IDRADNIK, dbo.OBRACUNOBUSTAVE.IZNOSOBUSTAVE,OBRACUNOBUSTAVE.VRSTAOBUSTAVE
HAVING      (dbo.OBRACUNOBUSTAVE.VRSTAOBUSTAVE = 1)
END












GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_OBUSTAVE_KREDITNE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_OBUSTAVE_KREDITNE]
GO









CREATE PROCEDURE [dbo].[S_PLACA_OBUSTAVE_KREDITNE]
(
@IDOBRACUN varchar(11)
)
AS
BEGIN

	SET NOCOUNT ON
SELECT     SUM(dbo.OBRACUNKREDITI.OBRACUNATIKUNSKIIZNOS) AS Obracunato, dbo.OBRACUNKREDITI.NAZIVKREDITOR, dbo.OBRACUNKREDITI.IDKREDITOR, 
                      dbo.OBRACUNKREDITI.PRIMATELJKREDITOR1, dbo.OBRACUNKREDITI.PRIMATELJKREDITOR2, dbo.RADNIK.PREZIME, dbo.RADNIK.IME, dbo.RADNIK.JMBG, 
                      dbo.RADNIK.IDRADNIK,
                                          
                      case when ltrim(rtrim(ISNULL(radnikkrediti.partijakreditaspecifikacija,''))) = '' then 
dbo.OBRACUNKREDITI.OBRMOKREDITOR + '-' + dbo.OBRACUNKREDITI.OBRPOKREDITOR
else
radnikkrediti.partijakreditaspecifikacija
end as modelpoziv
FROM         dbo.OBRACUNKREDITI INNER JOIN
                      dbo.RADNIK ON dbo.OBRACUNKREDITI.IDRADNIK = dbo.RADNIK.IDRADNIK 


INNER JOIN radnikkrediti 
ON dbo.obracunkrediti.IDRADNIK = dbo.radnikkrediti.IDRADNIK 
and obracunkrediti.idkreditor = radnikkrediti.zadkreditiidkreditor AND OBRACUNKREDITI.DatumUgovora = RADNIKKREDITI.DatumUgovora
WHERE IDOBRACUN = @IDOBRACUN
GROUP BY dbo.OBRACUNKREDITI.NAZIVKREDITOR, dbo.OBRACUNKREDITI.IDKREDITOR, dbo.OBRACUNKREDITI.PRIMATELJKREDITOR1, dbo.OBRACUNKREDITI.PRIMATELJKREDITOR2, 
                      dbo.RADNIK.PREZIME, dbo.RADNIK.IME, dbo.RADNIK.JMBG, dbo.RADNIK.IDRADNIK, 
                       dbo.OBRACUNKREDITI.OBRPOKREDITOR, 
                      dbo.OBRACUNKREDITI.OBRMOKREDITOR,radnikkrediti.partijakreditaspecifikacija
	SET NOCOUNT OFF
END
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_OBUSTAVE_OBUSTAVLJENO_DO_OBRACUNA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_OBUSTAVE_OBUSTAVLJENO_DO_OBRACUNA]
GO









CREATE PROCEDURE dbo.S_PLACA_OBUSTAVE_OBUSTAVLJENO_DO_OBRACUNA
(
	
	@IDRADNIK INT,
	@IDOBUSTAVA INT
	)
AS
BEGIN
	SET NOCOUNT ON
SELECT isnull(SUM(dbo.OBRACUNObustave.OBRACUNATAOBUSTAVAUKUNAMA),0)
FROM         dbo.OBRACUNObustave 
WHERE IDRADNIK = @IDRADNIK AND  
IDOBUSTAVA= @IDOBUSTAVA
END












GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_OBUSTAVE_POSTOTNE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_OBUSTAVE_POSTOTNE]
GO







CREATE PROCEDURE dbo.S_PLACA_OBUSTAVE_POSTOTNE
(
@IDOBRACUN varchar(11)
)
AS
BEGIN

	SET NOCOUNT ON

	SELECT     SUM(dbo.OBRACUNOBUSTAVE.OBRACUNATAOBUSTAVAUKUNAMA) AS Obracunato, dbo.OBRACUNOBUSTAVE.NAZIVOBUSTAVA, dbo.OBRACUNOBUSTAVE.IDOBUSTAVA, 
                      dbo.OBRACUNOBUSTAVE.PRIMATELJOBUSTAVA1, dbo.OBRACUNOBUSTAVE.PRIMATELJOBUSTAVA2, dbo.RADNIK.PREZIME, dbo.RADNIK.IME, dbo.RADNIK.JMBG, 
                      dbo.RADNIK.IDRADNIK, dbo.OBRACUNOBUSTAVE.POSTOTAKOBUSTAVE AS POSTOTAK
FROM         dbo.OBRACUNOBUSTAVE  INNER JOIN
                      dbo.RADNIK ON dbo.OBRACUNOBUSTAVE.IDRADNIK = dbo.RADNIK.IDRADNIK
WHERE IDOBRACUN = @IDOBRACUN
GROUP BY dbo.OBRACUNOBUSTAVE.NAZIVOBUSTAVA, dbo.OBRACUNOBUSTAVE.IDOBUSTAVA, dbo.OBRACUNOBUSTAVE.PRIMATELJOBUSTAVA1, dbo.OBRACUNOBUSTAVE.PRIMATELJOBUSTAVA2, 
                      dbo.RADNIK.PREZIME, dbo.RADNIK.IME, dbo.RADNIK.JMBG, dbo.RADNIK.IDRADNIK, dbo.OBRACUNOBUSTAVE.POSTOTAKOBUSTAVE,OBRACUNOBUSTAVE.VRSTAOBUSTAVE
 HAVING      (dbo.OBRACUNOBUSTAVE.VRSTAOBUSTAVE = 0)
	SET NOCOUNT OFF

END












GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_OLAKSICE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_OLAKSICE]
GO






CREATE PROCEDURE [dbo].[S_PLACA_OLAKSICE]
(
@IDOBRACUN varchar(11)
)
AS
BEGIN

	SET NOCOUNT ON
		
	SELECT  OBRACUNOLAKSICE.MOOLAKSICA, OBRACUNOLAKSICE.POOLAKSICA,  dbo.RADNIK.IDRADNIK, dbo.RADNIK.PREZIME, dbo.RADNIK.IME, dbo.RADNIK.JMBG, dbo.OBRACUNOLAKSICE.IDOLAKSICE, 
                      dbo.OBRACUNOLAKSICE.OBRACUNATAOLAKSICA, dbo.OBRACUNOLAKSICE.NAZIVOLAKSICE, dbo.OBRACUNOLAKSICE.NAZIVGRUPEOLAKSICA, dbo.OBRACUNOLAKSICE.IZNOSOLAKSICE, 
                      dbo.OBRACUNOLAKSICE.IDTIPOLAKSICE, dbo.OBRACUNOLAKSICE.NAZIVTIPOLAKSICE, dbo.OBRACUNOLAKSICE.PRIMATELJOLAKSICA1, dbo.OBRACUNOLAKSICE.PRIMATELJOLAKSICA2, VW_PLACA_OLAKSICE_PRIZNATE.IZNOSPOREZNOPRIZNATEOLAKSICE,
                      RADNIKOLAKSICA.ZADPOJEDINACNIPOZIV
                      
FROM         dbo.OBRACUNOLAKSICE INNER JOIN
                      dbo.RADNIK ON dbo.OBRACUNOLAKSICE.IDRADNIK = dbo.RADNIK.IDRADNIK  LEFT OUTER JOIN
                      dbo.VW_PLACA_OLAKSICE_PRIZNATE ON 
                      dbo.OBRACUNOLAKSICE.IDOBRACUN = dbo.VW_PLACA_OLAKSICE_PRIZNATE.IDOBRACUN AND 
                      dbo.OBRACUNOLAKSICE.IDRADNIK = dbo.VW_PLACA_OLAKSICE_PRIZNATE.IDRADNIK AND 
                      dbo.OBRACUNOLAKSICE.IDOLAKSICE = dbo.VW_PLACA_OLAKSICE_PRIZNATE.IDOLAKSICE
                      INNER JOIN RADNIKOLAKSICA ON dbo.OBRACUNOLAKSICE.IDRADNIK = dbo.RADNIKOLAKSICA.IDRADNIK AND DBO.OBRACUNOLAKSICE.IDOLAKSICE = DBO.RADNIKOLAKSICA.ZADOLAKSICEIDOLAKSICE
WHERE OBRACUNOLAKSICE.IDOBRACUN = @IDOBRACUN
GROUP BY OBRACUNOLAKSICE.POOLAKSICA, dbo.RADNIK.IDRADNIK, dbo.RADNIK.PREZIME, dbo.RADNIK.IME, dbo.RADNIK.JMBG, dbo.OBRACUNOLAKSICE.IDOLAKSICE, 
                      dbo.OBRACUNOLAKSICE.OBRACUNATAOLAKSICA, dbo.OBRACUNOLAKSICE.NAZIVOLAKSICE, dbo.OBRACUNOLAKSICE.NAZIVGRUPEOLAKSICA, dbo.OBRACUNOLAKSICE.IZNOSOLAKSICE, 
                      dbo.OBRACUNOLAKSICE.IDTIPOLAKSICE, dbo.OBRACUNOLAKSICE.NAZIVTIPOLAKSICE, dbo.OBRACUNOLAKSICE.PRIMATELJOLAKSICA1, dbo.OBRACUNOLAKSICE.PRIMATELJOLAKSICA2, VW_PLACA_OLAKSICE_PRIZNATE.IZNOSPOREZNOPRIZNATEOLAKSICE,
					OBRACUNOLAKSICE.MOOLAKSICA, RADNIKOLAKSICA.ZADPOJEDINACNIPOZIV
					
	SET NOCOUNT OFF
END
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_OO_MJESECNO]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_OO_MJESECNO]
GO






CREATE PROCEDURE dbo.S_PLACA_OO_MJESECNO
(
	@IDOBRACUN VARCHAR(11)
	)
AS
BEGIN
SET NOCOUNT ON
SELECT IDRADNIK, SUM(OBRACUNRADNICI.ISKORISTENOOO) AS UKUPNOOBRACUNATOOO 
FROM OBRACUN INNER JOIN OBRACUN OBRACUN_1 ON OBRACUN.MJESECISPLATE = OBRACUN_1.MJESECISPLATE AND OBRACUN.GODINAISPLATE = OBRACUN_1.GODINAISPLATE INNER JOIN OBRACUNRADNICI ON OBRACUN.IDOBRACUN = OBRACUNRADNICI.IDOBRACUN 
WHERE (OBRACUN_1.IDOBRACUN = @IDOBRACUN) AND (OBRACUN.IDOBRACUN &lt;&gt; @IDOBRACUN) 
GROUP BY OBRACUN.MJESECISPLATE, OBRACUN.GODINAISPLATE, OBRACUNRADNICI.IDRADNIK 
ORDER BY IDRADNIK
END








GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_POCISTI_PODATKE_ZAPOSLENIKA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_POCISTI_PODATKE_ZAPOSLENIKA]
GO






CREATE PROCEDURE dbo.S_PLACA_POCISTI_PODATKE_ZAPOSLENIKA
(

	@IDOBRACUN VARCHAR(11),	
	@IDRADNIK INT
	
)
AS
BEGIN

	SET NOCOUNT ON
	
	DELETE FROM OBRACUNDOPRINOSI WHERE IDOBRACUN = @IDOBRACUN AND IDRADNIK = @IDRADNIK
	DELETE FROM OBRACUNPOREZI WHERE IDOBRACUN = @IDOBRACUN AND IDRADNIK = @IDRADNIK
	DELETE FROM OBRACUNOBUSTAVE WHERE IDOBRACUN = @IDOBRACUN AND IDRADNIK = @IDRADNIK
	DELETE FROM OBRACUNOLAKSICE WHERE IDOBRACUN = @IDOBRACUN AND IDRADNIK = @IDRADNIK
	DELETE FROM OBRACUNKREDITI WHERE IDOBRACUN = @IDOBRACUN AND IDRADNIK = @IDRADNIK
	DELETE FROM OBRACUNOBRACUNLevel1ObracunKrizni WHERE IDOBRACUN = @IDOBRACUN AND IDRADNIK = @IDRADNIK
	DELETE FROM OBRACUNOBRACUNLevel1ObracunIzuzece WHERE IDOBRACUN = @IDOBRACUN AND IDRADNIK = @IDRADNIK

	
	
END








GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_POREZ]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_POREZ]
GO


CREATE PROCEDURE [dbo].[S_PLACA_POREZ] ( @IDOBRACUN VARCHAR(11) )
AS 
    BEGIN

        SET NOCOUNT ON

        SELECT  OBRACUNPOREZI.IDPOREZ AS Sifra,
                OBRACUNRADNICI.SIFRAOPCINESTANOVANJA,
                OPCINA.NAZIVOPCINE,
                SUM(OBRACUNPOREZI.OBRACUNATIPOREZ) AS Obracunato,
                OBRACUNPOREZI.NAZIVPOREZ AS POREZOPIS,
                OBRACUNPOREZI.STOPAPOREZA AS Stopa,
                SUM(OBRACUNPOREZI.OSNOVICAPOREZ) AS Osnovica
        FROM    dbo.OBRACUNRADNICI
                INNER JOIN dbo.OBRACUNPOREZI ON OBRACUNRADNICI.IDOBRACUN = OBRACUNPOREZI.IDOBRACUN
                                            AND OBRACUNRADNICI.IDRADNIK = OBRACUNPOREZI.IDRADNIK
                LEFT JOIN dbo.OPCINA ON OBRACUNRADNICI.SIFRAOPCINESTANOVANJA = OPCINA.IDOPCINE
        WHERE   OBRACUNRADNICI.IDOBRACUN = @IDOBRACUN
        GROUP BY OBRACUNRADNICI.SIFRAOPCINESTANOVANJA,
                OPCINA.NAZIVOPCINE,
                OBRACUNPOREZI.IDPOREZ,
                OBRACUNPOREZI.NAZIVPOREZ,
                OBRACUNPOREZI.STOPAPOREZA
        UNION ALL
        SELECT  1001 AS Sifra,
                OBRACUNRADNICI.SIFRAOPCINESTANOVANJA,
                OPCINA.NAZIVOPCINE,
                SUM(OBRACUNRADNICI.OBRACUNATIPRIREZ)  AS Obracunato,
                'Prirez' AS PorezOPIS,
                OPCINA.PRIREZ AS Stopa,
                ( SELECT    SUM(OBRACUNPOREZI.OSNOVICAPOREZ)
                  FROM      dbo.OBRACUNRADNICI po1
                            INNER JOIN dbo.OBRACUNPOREZI ON po1.IDOBRACUN = OBRACUNPOREZI.IDOBRACUN
                                                        AND po1.IDRADNIK = OBRACUNPOREZI.IDRADNIK
                            LEFT JOIN dbo.OPCINA ON po1.SIFRAOPCINESTANOVANJA = OPCINA.IDOPCINE
                  WHERE     po1.IDOBRACUN = @IDOBRACUN
                            AND po1.SIFRAOPCINESTANOVANJA = OBRACUNRADNICI.SIFRAOPCINESTANOVANJA
                ) AS Osnovica
        FROM    dbo.OBRACUNRADNICI
                LEFT JOIN dbo.OPCINA ON OBRACUNRADNICI.SIFRAOPCINESTANOVANJA = OPCINA.IDOPCINE
        WHERE   OBRACUNRADNICI.IDOBRACUN = @IDOBRACUN
                AND OBRACUNRADNICI.OBRACUNATIPRIREZ &lt;&gt; 0
        GROUP BY OBRACUNRADNICI.SIFRAOPCINESTANOVANJA,
                OPCINA.NAZIVOPCINE,
                OPCINA.PRIREZ
                UNION ALL
        SELECT  9999 AS Sifra,
                OBRACUNRADNICI.SIFRAOPCINESTANOVANJA,
                OPCINA.NAZIVOPCINE,
                SUM(OBRACUNRADNICI.KOREKCIJAPRIREZA)  AS Obracunato,
                'Prirez korekcija' AS Porez,
                OPCINA.PRIREZ AS Stopa,
                ( SELECT    SUM(OBRACUNPOREZI.OSNOVICAPOREZ)
                  FROM      dbo.OBRACUNRADNICI po1
                            INNER JOIN dbo.OBRACUNPOREZI ON po1.IDOBRACUN = OBRACUNPOREZI.IDOBRACUN
                                                        AND po1.IDRADNIK = OBRACUNPOREZI.IDRADNIK
                            LEFT JOIN dbo.OPCINA ON po1.SIFRAOPCINESTANOVANJA = OPCINA.IDOPCINE
                  WHERE     po1.IDOBRACUN = @IDOBRACUN
                            AND po1.SIFRAOPCINESTANOVANJA = OBRACUNRADNICI.SIFRAOPCINESTANOVANJA
                ) AS Osnovica
        FROM    dbo.OBRACUNRADNICI
                LEFT JOIN dbo.OPCINA ON OBRACUNRADNICI.SIFRAOPCINESTANOVANJA = OPCINA.IDOPCINE
        WHERE   OBRACUNRADNICI.IDOBRACUN = @IDOBRACUN
        GROUP BY OBRACUNRADNICI.SIFRAOPCINESTANOVANJA,
                OPCINA.NAZIVOPCINE,
                OPCINA.PRIREZ
        ORDER BY Sifra


        SET NOCOUNT OFF

    END
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_POREZ_MJESECNO]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_POREZ_MJESECNO]
GO






CREATE PROCEDURE dbo.S_PLACA_POREZ_MJESECNO
(
	@IDOBRACUN VARCHAR(11)
	)
AS
BEGIN
	SET NOCOUNT ON
SELECT idradnik,idporez,Sum(OBRACUNporezi.OSNOVICAPOREZ) as osnovica, Sum(OBRACUNporezi.OBRACUNATIPOREZ) as obracunatiporez
FROM OBRACUN OBRACUN_1 INNER JOIN OBRACUN OBRACUN ON OBRACUN_1.MJESECISPLATE = OBRACUN.MJESECISPLATE AND OBRACUN_1.GODINAISPLATE = OBRACUN.GODINAISPLATE INNER JOIN obracunporezi ON OBRACUN.IDOBRACUN = obracunporezi.IDOBRACUN 
 
wHERE (OBRACUN_1.IDOBRACUN = @IDobracun) AND (OBRACUN.IDOBRACUN &lt;&gt; @IDobracun) 

group by idradnik,idporez
order by Idradnik,idporez
END


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_PRIPREMA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_PRIPREMA]
GO


CREATE PROCEDURE [dbo].[S_PLACA_PRIPREMA]
(
@GODINA int,
@ID int,
@MJESEC INT,
@vrsta varchar(500)
)
AS
BEGIN

SELECT     dbo.RADNIKLevel7.DODATNIKOEFICIJENT as DODATNIKOEFICIJENT,dbo.RADNIK.IME + ' ' + dbo.RADNIK.PREZIME AS IMEPREZIME, dbo.RADNOMJESTO.NAZIVRADNOMJESTO, 
                      ROUND(dbo.PRPLACE.PRPLACEOSNOVICA * dbo.RADNIKLevel7.DODATNIKOEFICIJENT, 2) AS OSNOVNAPLACA
                      , 
                     

sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'smjenski' THEN ROUND(dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATNICA  * dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI * dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACEPOSTOTAK/100,2) ELSE 0 END) AS SMJENSKIIZNOS,
sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'smjenski' THEN dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATNICA  ELSE 0 END) AS SMJENSKISATNICA,
sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'smjenski' THEN dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI ELSE 0 END) AS SMJENSKISATI,


sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'posebni1' THEN ROUND(dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATNICA  * dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI * dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACEPOSTOTAK/100,2) ELSE 0 END) AS POSEBNI1IZNOS,
sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'posebni1' THEN dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATNICA ELSE 0 END) AS POSEBNI1SATNICA,
sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'posebni1' THEN dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI ELSE 0 END) AS POSEBNI1SATI,

sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'posebni2' THEN ROUND(dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATNICA  * dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI * dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACEPOSTOTAK/100,2) ELSE 0 END) AS POSEBNI2IZNOS,
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'posebni2' THEN dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATNICA ELSE 0 END) AS POSEBNI2SATNICA,
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'posebni2' THEN dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI ELSE 0 END) AS POSEBNI2SATI,


Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'posebni3' THEN ROUND(dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATNICA  * dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI * dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACEPOSTOTAK/100,2) ELSE 0 END) AS POSEBNI3IZNOS,
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'posebni3' THEN dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATNICA ELSE 0 END) AS POSEBNI3SATNICA,
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'posebni3' THEN dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI ELSE 0 END) AS POSEBNI3SATI,

Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'kombinacija' THEN ROUND(dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATNICA  * dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI * dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACEPOSTOTAK/100,2) ELSE 0 END) AS KOMBINACIJAIZNOS,
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'kombinacija' THEN Dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACEPOSTOTAK ELSE 0 END) AS KOMBINACIJAPOSTOTAK,

Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'kombinacija2' THEN ROUND(dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATNICA  * dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI * dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACEPOSTOTAK/100,2) ELSE 0 END) AS KOMBINACIJAIZNOS2,
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'kombinacija2' THEN Dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACEPOSTOTAK ELSE 0 END) AS KOMBINACIJAPOSTOTAK2,


Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'nocni' THEN dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATNICA  ELSE 0 END) AS nocniSATNICA,
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'nocni' THEN ROUND(dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI * dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACEPOSTOTAK/100,2) ELSE 0 END) AS nocniuvecani,
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'nocni' THEN PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI  ELSE 0 END) AS nocni,


Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'prekovremeni' THEN dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATNICA  ELSE 0 END) AS prekovremenisatnica,
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'prekovremeni' THEN ROUND(dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI * dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACEPOSTOTAK/100,2) ELSE 0 END) AS prekovremeniuvecani,
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'prekovremeni' THEN PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI  ELSE 0 END) AS prekovremeni,

Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'subotom' THEN dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATNICA ELSE 0 END) AS subotomsatnica,
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'subotom' THEN ROUND(dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI * dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACEPOSTOTAK/100,2) ELSE 0 END) AS subotomuvecani,
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'subotom' THEN PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI  ELSE 0 END) AS subotom,

Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'nedjeljom' THEN dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATNICA ELSE 0 END) AS nedjeljomsatnica,
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'nedjeljom' THEN ROUND(dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI * dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACEPOSTOTAK/100,2) ELSE 0 END) AS nedjeljomuvecani,
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'nedjeljom' THEN PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI  ELSE 0 END) AS nedjeljom,


Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'blagdan' THEN dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATNICA  ELSE 0 END) AS blagdansatnica,
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'blagdan' THEN ROUND(dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI * dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACEPOSTOTAK/100,2) ELSE 0 END) AS blagdanuvecani,
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'blagdan' THEN PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI  ELSE 0 END) AS blagdan,

Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'dvokratni' THEN dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATNICA  ELSE 0 END) AS dvokratnisatnica,
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'dvokratni' THEN ROUND(dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI * dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACEPOSTOTAK/100,2) ELSE 0 END) AS dvokratniuvecani,
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'dvokratni' THEN PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI  ELSE 0 END) AS dvokratni,


--- POSEBNI SREDNJE SKOLE 1

Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'sposebni1' THEN dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATNICA  ELSE 0 END) AS sposebni1satnica,
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'sposebni1' THEN ROUND(dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI * dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACEPOSTOTAK/100,2) ELSE 0 END) AS sposebni1sati,
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'sposebni1' THEN ROUND(dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATNICA  * dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI,2) ELSE 0 END) AS sposebni1iznos,

--- POSEBNI SREDNJE SKOLE 2
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'sposebni2' THEN dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATNICA  ELSE 0 END) AS sposebni2satnica,
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'sposebni2' THEN ROUND(dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI,2) else 0 END) AS sposebni2sati,
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'sposebni2' THEN ROUND(dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATNICA  * dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI,2) ELSE 0 END) AS sposebni2iznos,


Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'sposebni3' THEN dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATNICA  ELSE 0 END) AS sposebni3satnica,
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'sposebni3' THEN ROUND(dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI,2) ELSE 0 END) AS sposebni3sati,
Sum(CASE WHEN dbo.MZOSTABLICE.OPISMZOSTABLICE = 'sposebni3' THEN ROUND(dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATNICA  * ROUND(dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACESATI * dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACEPOSTOTAK/100,2) ,2) ELSE 0 END) AS sposebni3iznos






FROM         dbo.PRPLACEPRPLACEELEMENTI INNER JOIN
                      dbo.PRPLACEPRPLACEELEMENTIRADNIK ON 
                      dbo.PRPLACEPRPLACEELEMENTI.PRPLACEID = dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACEID AND 
                      dbo.PRPLACEPRPLACEELEMENTI.PRPLACEZAMJESEC = dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACEZAMJESEC AND 
                      dbo.PRPLACEPRPLACEELEMENTI.PRPLACEZAGODINU = dbo.PRPLACEPRPLACEELEMENTIRADNIK.PRPLACEZAGODINU AND 
                      dbo.PRPLACEPRPLACEELEMENTI.IDELEMENT = dbo.PRPLACEPRPLACEELEMENTIRADNIK.IDELEMENT INNER JOIN
                      dbo.RADNIK ON dbo.PRPLACEPRPLACEELEMENTIRADNIK.IDRADNIK = dbo.RADNIK.IDRADNIK left outer  JOIN
                      dbo.RADNOMJESTO ON dbo.RADNIK.IDRADNOMJESTO = dbo.RADNOMJESTO.IDRADNOMJESTO inner  JOIN
                      dbo.RADNIKLevel7 ON dbo.RADNIK.IDRADNIK = dbo.RADNIKLevel7.IDRADNIK INNER JOIN
                      dbo.PRPLACE ON dbo.PRPLACEPRPLACEELEMENTI.PRPLACEID = dbo.PRPLACE.PRPLACEID AND 
                      dbo.PRPLACEPRPLACEELEMENTI.PRPLACEZAMJESEC = dbo.PRPLACE.PRPLACEZAMJESEC AND 
                      dbo.PRPLACEPRPLACEELEMENTI.PRPLACEZAGODINU = dbo.PRPLACE.PRPLACEZAGODINU
				      inner  JOIN GRUPEKOEFLevel1 ON dbo.PRPLACEPRPLACEELEMENTI.IDELEMENT = GRUPEKOEFLevel1.IDELEMENT
						INNER JOIN dbo.MZOSTABLICE ON dbo.GRUPEKOEFLevel1.IDMZOSTABLICE = dbo.MZOSTABLICE.IDMZOSTABLICE
		INNER JOIN  dbo.fnSplitter(@vrsta) fnSplitter_2 ON dbo.MZOSTABLICE.OPISMZOSTABLICE = fnSplitter_2.ID 
where PRPLACE.prplaceid = @id and PRPLACE.prplacezamjesec = @mjesec and prplace.prplacezagodinu = @godina 
group by radnik.ime,radnik.prezime,	RADNOMJESTO.NAZIVRADNOMJESTO,PRPLACE.PRPLACEOSNOVICA,RADNIKLevel7.DODATNIKOEFICIJENT,Dbo.RADNIK.IDRADNIK
order by    dbo.RADNIK.PREZIME + dbo.RADNIK.IME 
END
go



IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_PROSJEK_PLACE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_PROSJEK_PLACE]
GO







CREATE PROCEDURE dbo.S_PLACA_PROSJEK_PLACE
(
@odd varchar(7),
@dooo varchar(7),
@idradnik int
     
 )
 
AS
BEGIN
SELECT     SUM(netoplacamanjekrizni) AS NETOPLACA ,RADNIK.IME,RADNIK.PREZIME,VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK,RADNIK.ULICA,RADNIK.KUCNIBROJ,RADNIK.MJESTO,
dbo.VW_PLACA_ZAPOSLENIK_UKUPNO.GODINAOBRACUNA + '-' + dbo.VW_PLACA_ZAPOSLENIK_UKUPNO.MJESECOBRACUNA AS GODINAMJESEC
FROM         dbo.VW_PLACA_ZAPOSLENIK_UKUPNO
 INNER JOIN
                      dbo.RADNIK ON dbo.VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK = dbo.RADNIK.IDRADNIK
WHERE     (VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK = @IDRADNIK) AND (dbo.VW_PLACA_ZAPOSLENIK_UKUPNO.godinaobracuna + '-' + VW_PLACA_ZAPOSLENIK_UKUPNO.MJESECOBRACUNA &gt;= @ODD and dbo.VW_PLACA_ZAPOSLENIK_UKUPNO.godinaobracuna +'-' + dbo.VW_PLACA_ZAPOSLENIK_UKUPNO.MJESECOBRACUNA &lt;= @DOOO)
GROUP BY GODINAOBRACUNA + '-' + MJESECOBRACUNA,RADNIK.IME,RADNIK.PREZIME,VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK,RADNIK.ULICA,RADNIK.KUCNIBROJ,RADNIK.MJESTO
END



GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_RSM_OBRAZAC]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_RSM_OBRAZAC]
GO


CREATE PROCEDURE [dbo].[S_PLACA_RSM_OBRAZAC]
(
    @DO AS INT OUTPUT,
    @DO1 AS INT OUTPUT,
    @IDOBRACUN AS VARCHAR (11),
    @IDRADNIK AS INT OUTPUT,
    @MAX_REDNIBROJ AS INT OUTPUT,
    @OD AS INT OUTPUT,
    @OD1 AS INT OUTPUT,
    @OO AS VARCHAR (2) OUTPUT,
    @TRENUTNI_IDRADNIK AS INT OUTPUT,
    @TRENUTNI_OO AS VARCHAR (2) OUTPUT,
    @TRENUTNI_REDNIBROJ AS INT OUTPUT,
    @USPOREDBA AS INT OUTPUT
) AS
BEGIN
INSERT INTO	#TEMP_RSMB
		(
		IDRADNIK,
		PREZIMEIIME,
		MBGOSIGURANIKA,
		SIFRAGRADARADA,
		OO,
		B,
		OD,
		DOO,
		IZNOSOBRACUNANEPLACERSMB,
		IZNOSOSNOVICEZADOPRINOSERSMB,
		IDDOPRINOSMIO1,
		STOPAMIO1,
		MIO1RSMB,
		IDDOPRINOSMIO2,
		STOPAMIO2,
		MIO2RSMB,
		POREZIPRIREZ,
		IZNOSISPLACENEPLACERSMB,
		OIB,
		VOLONTER
		)
	SELECT 	RS_OSNOVA.IDRADNIK,
			LEFT(RADNIK.PREZIME + ' ' + RADNIK.IME, 50),
			RADNIK.JMBG,
			RADNIK.OPCINARADAIDOPCINE,
			RS_OSNOVA.IDOSNOVAOSIGURANJA,
			CASE WHEN RS_OSNOVA.IDOSNOVAOSIGURANJA = 42  THEN 2 ELSE ISNULL(RADNIK.IDBENEFICIRANI, '0') END,
			CASE WHEN RS_OSNOVA.IDOSNOVAOSIGURANJA = 42 or RS_OSNOVA.IDOSNOVAOSIGURANJA = 43 THEN '00' ELSE DAY(RS_OSNOVA.ELEMENTRAZDOBLJEOD) END,
			CASE WHEN RS_OSNOVA.IDOSNOVAOSIGURANJA = 42 or RS_OSNOVA.IDOSNOVAOSIGURANJA = 43 THEN '00' ELSE DAY(RS_OSNOVA.ELEMENTRAZDOBLJEDO) END,
			RS_OSNOVA.IZNOSBRUTO,
			RS_OSNOVA.IZNOSBRUTO,
			(SELECT TOP 1 OBRACUNDOPRINOSI.IDDOPRINOS FROM dbo.OBRACUNDOPRINOSI INNER JOIN dbo.TIPIZNOSA ON OBRACUNDOPRINOSI.VBDIDOPRINOS = TIPIZNOSA.VBDITIPAIZNOSA AND OBRACUNDOPRINOSI.ZRNDOPRINOS = TIPIZNOSA.ZIROTIPAIZNOSA AND OBRACUNDOPRINOSI.MODOPRINOS = TIPIZNOSA.MOTIPAIZNOSA AND OBRACUNDOPRINOSI.PODOPRINOS = TIPIZNOSA.POTIPAIZNOSA INNER JOIN dbo.OBRACUN ON OBRACUNDOPRINOSI.IDOBRACUN = OBRACUN.IDOBRACUN AND OBRACUNDOPRINOSI.IDRADNIK = RS_OSNOVA.IDRADNIK WHERE TIPIZNOSA.OZNAKATIPAIZNOSA IN ('MIOI', 'MIOI-P') AND OBRACUNDOPRINOSI.IDOBRACUN = @IDOBRACUN),
			ISNULL((SELECT SUM(OBRACUNDOPRINOSI.STOPA) FROM dbo.OBRACUNDOPRINOSI INNER JOIN dbo.TIPIZNOSA ON OBRACUNDOPRINOSI.VBDIDOPRINOS = TIPIZNOSA.VBDITIPAIZNOSA AND OBRACUNDOPRINOSI.ZRNDOPRINOS = TIPIZNOSA.ZIROTIPAIZNOSA AND OBRACUNDOPRINOSI.MODOPRINOS = TIPIZNOSA.MOTIPAIZNOSA AND OBRACUNDOPRINOSI.PODOPRINOS = TIPIZNOSA.POTIPAIZNOSA INNER JOIN dbo.OBRACUN ON OBRACUNDOPRINOSI.IDOBRACUN = OBRACUN.IDOBRACUN AND OBRACUNDOPRINOSI.IDRADNIK = RS_OSNOVA.IDRADNIK WHERE TIPIZNOSA.OZNAKATIPAIZNOSA IN ('MIOI', 'MIOI-P') AND OBRACUNDOPRINOSI.IDOBRACUN = @IDOBRACUN), 0),
			0,
			(SELECT TOP 1 OBRACUNDOPRINOSI.IDDOPRINOS FROM dbo.OBRACUNDOPRINOSI INNER JOIN dbo.TIPIZNOSA ON OBRACUNDOPRINOSI.VBDIDOPRINOS = TIPIZNOSA.VBDITIPAIZNOSA AND OBRACUNDOPRINOSI.ZRNDOPRINOS = TIPIZNOSA.ZIROTIPAIZNOSA AND OBRACUNDOPRINOSI.MODOPRINOS = TIPIZNOSA.MOTIPAIZNOSA AND OBRACUNDOPRINOSI.PODOPRINOS = TIPIZNOSA.POTIPAIZNOSA INNER JOIN dbo.OBRACUN ON OBRACUNDOPRINOSI.IDOBRACUN = OBRACUN.IDOBRACUN AND OBRACUNDOPRINOSI.IDRADNIK = RS_OSNOVA.IDRADNIK WHERE TIPIZNOSA.OZNAKATIPAIZNOSA IN ('MIOII', 'MIOII-P') AND OBRACUNDOPRINOSI.IDOBRACUN = @IDOBRACUN),
			ISNULL((SELECT SUM(OBRACUNDOPRINOSI.STOPA) FROM dbo.OBRACUNDOPRINOSI INNER JOIN dbo.TIPIZNOSA ON OBRACUNDOPRINOSI.VBDIDOPRINOS = TIPIZNOSA.VBDITIPAIZNOSA AND OBRACUNDOPRINOSI.ZRNDOPRINOS = TIPIZNOSA.ZIROTIPAIZNOSA AND OBRACUNDOPRINOSI.MODOPRINOS = TIPIZNOSA.MOTIPAIZNOSA AND OBRACUNDOPRINOSI.PODOPRINOS = TIPIZNOSA.POTIPAIZNOSA INNER JOIN dbo.OBRACUN ON OBRACUNDOPRINOSI.IDOBRACUN = OBRACUN.IDOBRACUN AND OBRACUNDOPRINOSI.IDRADNIK = RS_OSNOVA.IDRADNIK WHERE TIPIZNOSA.OZNAKATIPAIZNOSA IN ('MIOII', 'MIOII-P') AND OBRACUNDOPRINOSI.IDOBRACUN = @IDOBRACUN), 0),
			0,
			0,
			RS_OSNOVA.IZNOSNETO,
			ISNULL(RADNIK.OIB,'99999999999'),
			RADNIK.IDIPIDENT
	FROM
	(
	SELECT     	OBRACUNELEMENTI.IDRADNIK, 
			CASE WHEN RADNIK.TJEDNIFONDSATI &lt; OBRACUN.TJEDNIFONDSATIOBRACUN THEN (CASE WHEN OSNOVAOSIGURANJA.ZAMOOIDOSNOVAOSIGURANJA IS NOT NULL THEN OSNOVAOSIGURANJA.ZAMOOIDOSNOVAOSIGURANJA ELSE ELEMENT.IDOSNOVAOSIGURANJA END) ELSE ELEMENT.IDOSNOVAOSIGURANJA END AS IDOSNOVAOSIGURANJA, 
			OBRACUNELEMENTI.ELEMENTRAZDOBLJEOD, 
			OBRACUNELEMENTI.ELEMENTRAZDOBLJEDO, 
			SUM(OBRACUNELEMENTI.OBRIZNOS) AS IZNOSBRUTO, 
			0 AS IZNOSNETO
	FROM         	dbo.OBRACUNELEMENTI
	LEFT JOIN	dbo.ELEMENT
	ON		OBRACUNELEMENTI.IDELEMENT = ELEMENT.IDELEMENT
	LEFT JOIN	dbo.OSNOVAOSIGURANJA
	ON		ELEMENT.IDOSNOVAOSIGURANJA = OSNOVAOSIGURANJA.IDOSNOVAOSIGURANJA
	LEFT JOIN	dbo.RADNIK
	ON		OBRACUNELEMENTI.IDRADNIK = RADNIK.IDRADNIK
	INNER JOIN	dbo.OBRACUN
	ON		OBRACUNELEMENTI.IDOBRACUN = OBRACUN.IDOBRACUN
	WHERE     	OBRACUNELEMENTI.IDOBRACUN = @IDOBRACUN AND ELEMENT.IDVRSTAELEMENTA = 2 AND (ISNULL(ELEMENT.IDOSNOVAOSIGURANJA, '') &lt;&gt; '')
	GROUP BY	OBRACUNELEMENTI.IDRADNIK,
			CASE WHEN RADNIK.TJEDNIFONDSATI &lt; OBRACUN.TJEDNIFONDSATIOBRACUN THEN (CASE WHEN OSNOVAOSIGURANJA.ZAMOOIDOSNOVAOSIGURANJA IS NOT NULL THEN OSNOVAOSIGURANJA.ZAMOOIDOSNOVAOSIGURANJA ELSE ELEMENT.IDOSNOVAOSIGURANJA END) ELSE ELEMENT.IDOSNOVAOSIGURANJA END, 
			OBRACUNELEMENTI.ELEMENTRAZDOBLJEOD, 
			OBRACUNELEMENTI.ELEMENTRAZDOBLJEDO
	UNION ALL
	SELECT     	OBRACUNELEMENTI.IDRADNIK, 
			CASE WHEN RADNIK.TJEDNIFONDSATI &lt; OBRACUN.TJEDNIFONDSATIOBRACUN THEN (CASE WHEN OSNOVAOSIGURANJA.ZAMOOIDOSNOVAOSIGURANJA IS NOT NULL THEN OSNOVAOSIGURANJA.ZAMOOIDOSNOVAOSIGURANJA ELSE ELEMENT.IDOSNOVAOSIGURANJA END) ELSE ELEMENT.IDOSNOVAOSIGURANJA END AS IDOSNOVAOSIGURANJA, 
			OBRACUNELEMENTI.ELEMENTRAZDOBLJEOD, 
			OBRACUNELEMENTI.ELEMENTRAZDOBLJEDO, 
			0 AS IZNOSBRUTO, 
			SUM(OBRACUNELEMENTI.OBRIZNOS) AS IZNOSNETO
	FROM        	dbo.OBRACUNELEMENTI
	LEFT JOIN	dbo.ELEMENT
	ON		OBRACUNELEMENTI.IDELEMENT = ELEMENT.IDELEMENT
	LEFT JOIN	dbo.OSNOVAOSIGURANJA
	ON		ELEMENT.IDOSNOVAOSIGURANJA = OSNOVAOSIGURANJA.IDOSNOVAOSIGURANJA
	LEFT JOIN	dbo.RADNIK
	ON		OBRACUNELEMENTI.IDRADNIK = RADNIK.IDRADNIK
	INNER JOIN	dbo.OBRACUN
	ON		OBRACUNELEMENTI.IDOBRACUN = OBRACUN.IDOBRACUN
	WHERE     	OBRACUNELEMENTI.IDOBRACUN = @IDOBRACUN AND ELEMENT.IDVRSTAELEMENTA = 1 AND (ISNULL(ELEMENT.IDOSNOVAOSIGURANJA, '') &lt;&gt; '')
	GROUP BY	OBRACUNELEMENTI.IDRADNIK,
			CASE WHEN RADNIK.TJEDNIFONDSATI &lt; OBRACUN.TJEDNIFONDSATIOBRACUN THEN (CASE WHEN OSNOVAOSIGURANJA.ZAMOOIDOSNOVAOSIGURANJA IS NOT NULL THEN OSNOVAOSIGURANJA.ZAMOOIDOSNOVAOSIGURANJA ELSE ELEMENT.IDOSNOVAOSIGURANJA END) ELSE ELEMENT.IDOSNOVAOSIGURANJA END, 
			OBRACUNELEMENTI.ELEMENTRAZDOBLJEOD, 
			OBRACUNELEMENTI.ELEMENTRAZDOBLJEDO
	) AS RS_OSNOVA
	INNER JOIN	dbo.RADNIK
	ON		RS_OSNOVA.IDRADNIK = RADNIK.IDRADNIK
	ORDER BY 	RS_OSNOVA.IDRADNIK,
			RS_OSNOVA.ELEMENTRAZDOBLJEOD,
			RS_OSNOVA.ELEMENTRAZDOBLJEDO


	
	UPDATE	#TEMP_RSMB 
	SET		IZNOSOBRACUNANEPLACERSMB = (SELECT SUM(IZNOSOBRACUNANEPLACERSMB) FROM #TEMP_RSMB B WHERE B.IDRADNIK = #TEMP_RSMB.IDRADNIK AND B.OO = #TEMP_RSMB.OO),
			IZNOSOSNOVICEZADOPRINOSERSMB = 0
	
	UPDATE	#TEMP_RSMB 
	SET		IZNOSOBRACUNANEPLACERSMB = 0
	FROM		#TEMP_RSMB
	INNER JOIN	(SELECT IDRADNIK, OO, MIN(REDNIBROJ) AS MIN_REDNIBROJ FROM #TEMP_RSMB GROUP BY IDRADNIK, OO) AS B
	ON		#TEMP_RSMB.IDRADNIK = B.IDRADNIK
	AND 		#TEMP_RSMB.OO = B.OO
	WHERE	#TEMP_RSMB.REDNIBROJ &lt;&gt; B.MIN_REDNIBROJ
	
	SET		@MAX_REDNIBROJ = 0
	SET		@TRENUTNI_REDNIBROJ = 0
	SELECT 	@MAX_REDNIBROJ = ISNULL(MAX(REDNIBROJ), 0) FROM #TEMP_RSMB
	WHILE @TRENUTNI_REDNIBROJ &lt; @MAX_REDNIBROJ
	BEGIN
		SET @TRENUTNI_REDNIBROJ = @TRENUTNI_REDNIBROJ + 1

		UPDATE	#TEMP_RSMB 
		SET		IZNOSOSNOVICEZADOPRINOSERSMB = CASE WHEN ISNULL((SELECT SUM(VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNOOSNOVICAZADOPRINOS) FROM VW_PLACA_ZAPOSLENIK_UKUPNO WHERE VW_PLACA_ZAPOSLENIK_UKUPNO.IDOBRACUN = @IDOBRACUN AND VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK = #TEMP_RSMB.IDRADNIK), 0) - ISNULL((SELECT SUM(IZNOSOSNOVICEZADOPRINOSERSMB) FROM #TEMP_RSMB B WHERE B.IDRADNIK = #TEMP_RSMB.IDRADNIK AND B.REDNIBROJ &lt; #TEMP_RSMB.REDNIBROJ), 0) &gt; IZNOSOBRACUNANEPLACERSMB THEN IZNOSOBRACUNANEPLACERSMB ELSE ISNULL((SELECT SUM(VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNOOSNOVICAZADOPRINOS) FROM VW_PLACA_ZAPOSLENIK_UKUPNO WHERE VW_PLACA_ZAPOSLENIK_UKUPNO.IDOBRACUN = @IDOBRACUN AND VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK = #TEMP_RSMB.IDRADNIK), 0) - ISNULL((SELECT SUM(IZNOSOSNOVICEZADOPRINOSERSMB) FROM #TEMP_RSMB B WHERE B.IDRADNIK = #TEMP_RSMB.IDRADNIK AND B.REDNIBROJ &lt; #TEMP_RSMB.REDNIBROJ), 0) END
		WHERE	IZNOSOBRACUNANEPLACERSMB &lt;&gt; 0 AND REDNIBROJ = @TRENUTNI_REDNIBROJ
	END
	
	
	
	UPDATE	#TEMP_RSMB
	SET		MIO1RSMB = ROUND(IZNOSOSNOVICEZADOPRINOSERSMB * STOPAMIO1 / 100, 2),
			MIO2RSMB = ROUND(IZNOSOSNOVICEZADOPRINOSERSMB * STOPAMIO2 / 100, 2)
	WHERE	IZNOSOSNOVICEZADOPRINOSERSMB &lt;&gt; 0
	
	UPDATE	#TEMP_RSMB
	SET		MIO1RSMB = MIO1RSMB + ( ISNULL((SELECT SUM(OBRACUNDOPRINOSI.OBRACUNATIDOPRINOS) FROM dbo.OBRACUNDOPRINOSI WHERE OBRACUNDOPRINOSI.IDOBRACUN = @IDOBRACUN AND OBRACUNDOPRINOSI.IDRADNIK = #TEMP_RSMB.IDRADNIK AND OBRACUNDOPRINOSI.IDDOPRINOS = #TEMP_RSMB.IDDOPRINOSMIO1), 0) - ISNULL((SELECT SUM(MIO1RSMB) FROM #TEMP_RSMB B WHERE B.IDRADNIK = #TEMP_RSMB.IDRADNIK), 0) ) 
	FROM		#TEMP_RSMB
	INNER JOIN	(SELECT IDRADNIK, MAX(REDNIBROJ) AS MAX_REDNIBROJ FROM #TEMP_RSMB WHERE IZNOSOBRACUNANEPLACERSMB &lt;&gt; 0 GROUP BY IDRADNIK) AS ZADNJASTAVKA
	ON		#TEMP_RSMB.IDRADNIK = ZADNJASTAVKA.IDRADNIK
	WHERE	#TEMP_RSMB.REDNIBROJ = ZADNJASTAVKA.MAX_REDNIBROJ
	
	UPDATE	#TEMP_RSMB
	SET		MIO2RSMB = MIO2RSMB + ( ISNULL((SELECT SUM(OBRACUNDOPRINOSI.OBRACUNATIDOPRINOS) FROM dbo.OBRACUNDOPRINOSI WHERE OBRACUNDOPRINOSI.IDOBRACUN = @IDOBRACUN AND OBRACUNDOPRINOSI.IDRADNIK = #TEMP_RSMB.IDRADNIK AND OBRACUNDOPRINOSI.IDDOPRINOS = #TEMP_RSMB.IDDOPRINOSMIO2), 0) - ISNULL((SELECT SUM(MIO2RSMB) FROM #TEMP_RSMB B WHERE B.IDRADNIK = #TEMP_RSMB.IDRADNIK), 0) ) 
	FROM		#TEMP_RSMB
	INNER JOIN	(SELECT IDRADNIK, MAX(REDNIBROJ) AS MAX_REDNIBROJ FROM #TEMP_RSMB WHERE IZNOSOBRACUNANEPLACERSMB &lt;&gt; 0 GROUP BY IDRADNIK) AS ZADNJASTAVKA
	ON		#TEMP_RSMB.IDRADNIK = ZADNJASTAVKA.IDRADNIK
	WHERE	#TEMP_RSMB.REDNIBROJ = ZADNJASTAVKA.MAX_REDNIBROJ


	
	UPDATE	#TEMP_RSMB
	SET		POREZIPRIREZ = ROUND(IZNOSOSNOVICEZADOPRINOSERSMB * ISNULL((SELECT UKUPNOPOREZIPRIREZ / UKUPNOBRUTO FROM VW_PLACA_ZAPOSLENIK_UKUPNO WHERE VW_PLACA_ZAPOSLENIK_UKUPNO.IDOBRACUN = @IDOBRACUN AND VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK = #TEMP_RSMB.IDRADNIK AND VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNOBRUTO &lt;&gt; 0), 0), 2)
	WHERE	IZNOSOSNOVICEZADOPRINOSERSMB &lt;&gt; 0
	
	UPDATE	#TEMP_RSMB
	SET		POREZIPRIREZ = POREZIPRIREZ + ( ISNULL((SELECT SUM(VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNOPOREZIPRIREZ) FROM VW_PLACA_ZAPOSLENIK_UKUPNO WHERE VW_PLACA_ZAPOSLENIK_UKUPNO.IDOBRACUN = @IDOBRACUN AND VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK = #TEMP_RSMB.IDRADNIK), 0) - ISNULL((SELECT SUM(POREZIPRIREZ) FROM #TEMP_RSMB B WHERE B.IDRADNIK = #TEMP_RSMB.IDRADNIK), 0) ) 
	FROM		#TEMP_RSMB
	INNER JOIN	(SELECT IDRADNIK, MAX(REDNIBROJ) AS MAX_REDNIBROJ FROM #TEMP_RSMB WHERE IZNOSOBRACUNANEPLACERSMB &lt;&gt; 0 GROUP BY IDRADNIK) AS ZADNJASTAVKA
	ON		#TEMP_RSMB.IDRADNIK = ZADNJASTAVKA.IDRADNIK
	WHERE	#TEMP_RSMB.REDNIBROJ = ZADNJASTAVKA.MAX_REDNIBROJ
	

	
	UPDATE	#TEMP_RSMB
	SET 		IZNOSISPLACENEPLACERSMB = IZNOSOBRACUNANEPLACERSMB - MIO1RSMB - MIO2RSMB - POREZIPRIREZ
	WHERE	IZNOSOBRACUNANEPLACERSMB &lt;&gt; 0


	

	SET		@MAX_REDNIBROJ = 0
	SET		@TRENUTNI_REDNIBROJ = 0
	SET		@OO = ''
	SET     @IDRADNIK = 0
	SELECT 	@MAX_REDNIBROJ = ISNULL(MAX(REDNIBROJ), 0) FROM #TEMP_RSMB
	WHILE @TRENUTNI_REDNIBROJ &lt; @MAX_REDNIBROJ
	BEGIN
		SET @TRENUTNI_REDNIBROJ = @TRENUTNI_REDNIBROJ + 1

		SELECT @TRENUTNI_IDRADNIK = IDRADNIK, @TRENUTNI_OO = OO, @OD = OD, @DO = DOO  FROM #TEMP_RSMB WHERE REDNIBROJ = @TRENUTNI_REDNIBROJ
		IF @IDRADNIK &lt;&gt; @TRENUTNI_IDRADNIK
		BEGIN
			SET @IDRADNIK = @TRENUTNI_IDRADNIK
			SET @OO = ''
		END

		IF @OO &lt;&gt; @TRENUTNI_OO
		BEGIN
			SET @OO = @TRENUTNI_OO
			SET @USPOREDBA = @TRENUTNI_REDNIBROJ
			SET @OD1 = @OD
			SET @DO1 = @DO
		END

		IF @TRENUTNI_REDNIBROJ &gt; @USPOREDBA
		BEGIN
			IF (@OD &gt;= @OD1 AND @DO &lt;= @DO1)
			BEGIN
				DELETE FROM #TEMP_RSMB WHERE REDNIBROJ = @TRENUTNI_REDNIBROJ
			END 
			ELSE
			BEGIN
				IF (@OD &gt;= @OD1 AND @OD &lt;= @DO1 + 1) OR (@DO &gt;= @OD1 AND @DO &lt;= @DO1 + 1)
				BEGIN
					UPDATE #TEMP_RSMB SET OD = @OD1, DOO = @DO WHERE REDNIBROJ = @USPOREDBA
					DELETE FROM #TEMP_RSMB WHERE REDNIBROJ = @TRENUTNI_REDNIBROJ
					SET @DO1 = @DO
				END
				ELSE
				BEGIN
					SET @USPOREDBA = @TRENUTNI_REDNIBROJ
				END
			END
		END
	END


	INSERT INTO #RSMB
		(
		IDRADNIK,
		PREZIMEIIME,
		MBGOSIGURANIKA,
		SIFRAGRADARADA,
		OO,
		B,
		OD,
		DOO,
		IZNOSOBRACUNANEPLACERSMB,
		IZNOSOSNOVICEZADOPRINOSERSMB,
		IDDOPRINOSMIO1,
		STOPAMIO1,
		MIO1RSMB,
		IDDOPRINOSMIO2,
		STOPAMIO2,
		MIO2RSMB,
		POREZIPRIREZ,
		IZNOSISPLACENEPLACERSMB,
		OIB,
		VOLONTER
		)
	SELECT
		IDRADNIK,
		PREZIMEIIME,
		MBGOSIGURANIKA,
		SIFRAGRADARADA,
		OO,
		B,
		OD,
		DOO,
		IZNOSOBRACUNANEPLACERSMB,
		IZNOSOSNOVICEZADOPRINOSERSMB,
		IDDOPRINOSMIO1,
		STOPAMIO1,
		MIO1RSMB,
		IDDOPRINOSMIO2,
		STOPAMIO2,
		MIO2RSMB,
		POREZIPRIREZ,
		IZNOSISPLACENEPLACERSMB,
		OIB,
		VOLONTER
	FROM 	#TEMP_RSMB
	ORDER BY REDNIBROJ

	UPDATE #RSMB SET IZNOSISPLACENEPLACERSMB = 0,IZNOSOBRACUNANEPLACERSMB=0
	WHERE VOLONTER = 11
				
	
	SELECT * FROM #RSMB
END
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_ODBICI_GODINA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_ODBICI_GODINA]
GO
CREATE PROCEDURE [dbo].[S_PLACA_ODBICI_GODINA]
(

@GODINAISPLATE VARCHAR(4)
)
AS
BEGIN
SELECT SUM(OLAKSICE) AS OLAKSICE,SUM(ODBITAK) AS ODBITAK,IDRADNIK
FROM
(
SELECT     0 as olaksice,SUM(dbo.OSOBNIODBITAK.FAKTOROSOBNOGODBITKA) * 1800 * 12 AS odbitak, dbo.RADNIKOdbitak.IDRADNIK
FROM         dbo.RADNIKOdbitak INNER JOIN
                      dbo.OSOBNIODBITAK ON dbo.RADNIKOdbitak.OSOBNIODBITAKZADUZENJEIDOSOBNIODBITAK = dbo.OSOBNIODBITAK.IDOSOBNIODBITAK
GROUP BY dbo.RADNIKOdbitak.IDRADNIK

UNION ALL

SELECT     SUM(dbo.ObracunOlaksice.OBRACUNATAOLAKSICA) AS olaksice,0 as odbitak, dbo.ObracunOlaksice.IDRADNIK
FROM         dbo.ObracunOlaksice inner JOIN
                      dbo.OBRACUN ON dbo.ObracunOlaksice.IDOBRACUN = dbo.OBRACUN.IDOBRACUN
where      (dbo.OBRACUN.GODINAISPLATE = @GODINAISPLATE) AND (dbo.OBRACUN.MJESECISPLATE &gt; '00' AND dbo.OBRACUN.MJESECISPLATE &lt; '07')
GROUP BY dbo.OBRACUN.GODINAOBRACUNA, dbo.ObracunOlaksice.IDRADNIK
) AS P
GROUP BY P.IDRADNIK
END
GO





IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_STANJE_KREDITA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_STANJE_KREDITA]
GO






CREATE PROCEDURE dbo.S_PLACA_STANJE_KREDITA
(
	@IDOBRACUN VARCHAR(11)
	
	)
AS
BEGIN
	SET NOCOUNT ON
SELECT     datumugovora,idkreditor,idradnik,isnull(SUM(obracunatikunskiiznos),0) as otplaceno,count(idkreditor) as brojrata
FROM         dbo.obracunkrediti
WHERE IDOBRACUN &lt; @IDOBRACUN 
group by idkreditor,idradnik,datumugovora


END


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_STANJE_OBUSTAVA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_STANJE_OBUSTAVA]
GO






CREATE PROCEDURE dbo.S_PLACA_STANJE_OBUSTAVA
(
	@IDOBRACUN VARCHAR(11)
	
	)
AS
BEGIN
	SET NOCOUNT ON
SELECT     IDOBUSTAVA,idradnik,isnull(SUM(OBRACUNATAOBUSTAVAUKUNAMA),0) as otplaceno,count(idOBUSTAVA) as brojrata
FROM         dbo.obracunOBUSTAVE
WHERE IDOBRACUN &lt; @IDOBRACUN 
group by IDOBUSTAVA,idradnik


END






GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_STAT_KREDIT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_STAT_KREDIT]
GO






CREATE PROCEDURE dbo.S_PLACA_STAT_KREDIT
(
	@IDOBRACUN VARCHAR(11)
	
)
AS
BEGIN
	SET NOCOUNT ON
SELECT IDKREDITOR,DATUMUGOVORA,IDRADNIK,COUNT(OBRACUNATIKUNSKIIZNOS) AS BROJRATA,SUM(OBRACUNATIKUNSKIIZNOS) AS obracunato FROM OBRACUNKREDITI 
WHERE IDOBRACUN &lt; @IDOBRACUN
GROUP BY IDKREDITOR,DATUMUGOVORA,IDRADNIK
END








GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_TABLICA01]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_TABLICA01]
GO

CREATE PROCEDURE dbo.S_PLACA_TABLICA01
(

	@GODINA VARCHAR(4)

)
AS
BEGIN

	SET NOCOUNT ON


SELECT SUM(IZNOS) as iznos,MJESECOBRACUNA,GODINAOBRACUNA,SUM(NARADU) as naradu,SUM(BOLOVANJE) as naknada FROM 
(

SELECT     SUM(dbo.ObracunElementi.OBRIZNOS) AS IZNOS, dbo.OBRACUN.MJESECOBRACUNA, dbo.OBRACUN.GODINAOBRACUNA, 
                      COUNT(DISTINCT dbo.ObracunElementi.IDRADNIK) AS NARADU,0 AS BOLOVANJE
FROM         dbo.ObracunElementi INNER JOIN
                      dbo.OBRACUN ON dbo.ObracunElementi.IDOBRACUN = dbo.OBRACUN.IDOBRACUN INNER JOIN
                      dbo.ELEMENT ON dbo.ObracunElementi.IDELEMENT = dbo.ELEMENT.IDELEMENT
GROUP BY dbo.OBRACUN.MJESECOBRACUNA, dbo.OBRACUN.GODINAOBRACUNA, dbo.ObracunElementi.IDVRSTAELEMENTA
                    
HAVING      (dbo.ObracunElementi.IDVRSTAELEMENTA = 2) and (dbo.OBRACUN.GODINAOBRACUNA = @godina)

UNION ALL

SELECT     0 AS IZNOS, dbo.OBRACUN.MJESECOBRACUNA, dbo.OBRACUN.GODINAOBRACUNA, 
                      0 AS NARADU,COUNT(DISTINCT dbo.ObracunElementi.IDRADNIK) AS BOLOVANJE
FROM         dbo.ObracunElementi INNER JOIN
                      dbo.OBRACUN ON dbo.ObracunElementi.IDOBRACUN = dbo.OBRACUN.IDOBRACUN INNER JOIN
                      dbo.ELEMENT ON dbo.ObracunElementi.IDELEMENT = dbo.ELEMENT.IDELEMENT
GROUP BY dbo.OBRACUN.MJESECOBRACUNA, dbo.OBRACUN.GODINAOBRACUNA, dbo.ObracunElementi.IDVRSTAELEMENTA, 
                      dbo.ELEMENT.IDOSNOVAOSIGURANJA
HAVING      (dbo.ObracunElementi.IDVRSTAELEMENTA = 1) AND( dbo.ELEMENT.IDOSNOVAOSIGURANJA &gt;= 30 and dbo.ELEMENT.IDOSNOVAOSIGURANJA &lt;= 80) and (dbo.OBRACUN.GODINAOBRACUNA = @godina)
) AS P
GROUP BY P.MJESECOBRACUNA,P.GODINAOBRACUNA
ORDER BY 3,2
end


GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_VIRMANI]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_VIRMANI]
GO



CREATE PROCEDURE [dbo].[S_PLACA_VIRMANI]
(
    @IDRS VARCHAR(5),
    @IDOBRACUN varchar(11),
    @PLA1 VARCHAR(20),
    @PLA2 VARCHAR(20),
    @PLA3 VARCHAR(20),
    @BROJRACUNAPLA VARCHAR(18),
    @ZADUZENJE char(1),
    @MATICNIBROJ VARCHAR(14),
    @MZPOREZ varchar(2),
    @PZPOREZ varchar(22),
    @MOPOREZ varchar(2),
    @POPOREZ varchar(22),
    @SIFRAOPISAPLACANJAPOREZ varchar(2),
    @OPISPLACANJAPOREZ varchar(36),
    @POREZIPRIREZODVOJENO char(1),
    @PRI1 VARCHAR(20),
    @PRI2 VARCHAR(20)
)
AS
BEGIN
    
 
    SELECT @IDRS = RTRIM(ISNULL(IDENTIFIKATOROBRASCA, ''))
    FROM   RSMA
    WHERE  IDOBRACUN = @IDOBRACUN
    
    IF @IDRS &lt;&gt; ''
        SET @IDRS = '-' + @IDRS
    
    
    
    INSERT INTO #temp_virmani
      (
        SIFRAOBRACUNAVIRMAN,
        NAMJENA,
        PLA1,
        PLA2,
        PLA3,
        BROJRACUNAPLA,
        MODELZADUZENJA,
        POZIVZADUZENJA,
        PRI1,
        PRI2,
        PRI3,
        BROJRACUNAPRI,
        MODELODOBRENJA,
        POZIVODOBRENJA,
        SIFRAOPISAPLACANJAVIRMAN,
        OPISPLACANJAVIRMAN,
        IZNOS,
        IDDOPRINOS
      )
    SELECT @IDOBRACUN,
           'Doprinosi',
           @PLA1,
           @PLA2,
           @PLA3,
           @BROJRACUNAPLA,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(MZDOPRINOS, '')
                ELSE '99'
           END,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(PZDOPRINOS, '')
                ELSE ''
           END,
           ISNULL(PRIMATELJDOPRINOS1, ''),
           ISNULL(PRIMATELJDOPRINOS2, ''),
           '',
           ISNULL(VBDIDOPRINOS, '') + '-' + ISNULL(ZRNDOPRINOS, ''),
           ISNULL(MODOPRINOS, ''),
           LEFT(ISNULL(PODOPRINOS, '') + @MATICNIBROJ + @IDRS, 22),
           ISNULL(SIFRAOPISAPLACANJADOPRINOS, ''),
           LEFT(ISNULL(OPISPLACANJADOPRINOS, ''), 36),
           SUM(OBRACUNATIDOPRINOS) AS UKUPNOIZNOS,
           IDDOPRINOS
    FROM   OBRACUNDOPRINOSI
    WHERE  IDOBRACUN = @IDOBRACUN
    GROUP BY
           VBDIDOPRINOS,
           ZRNDOPRINOS,
           MODOPRINOS,
           PODOPRINOS,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(MZDOPRINOS, '')
                ELSE '99'
           END,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(PZDOPRINOS, '')
                ELSE ''
           END,
           PRIMATELJDOPRINOS1,
           PRIMATELJDOPRINOS2,
           SIFRAOPISAPLACANJADOPRINOS,
           OPISPLACANJADOPRINOS,
           IDDOPRINOS
    
    
    
    INSERT INTO #temp_virmani
      (
        SIFRAOBRACUNAVIRMAN,
        NAMJENA,
        PLA1,
        PLA2,
        PLA3,
        BROJRACUNAPLA,
        MODELZADUZENJA,
        POZIVZADUZENJA,
        PRI1,
        PRI2,
        PRI3,
        BROJRACUNAPRI,
        MODELODOBRENJA,
        POZIVODOBRENJA,
        SIFRAOPISAPLACANJAVIRMAN,
        OPISPLACANJAVIRMAN,
        IZNOS
      )
    SELECT @IDOBRACUN,
           'Doprinosi',
           @PLA1,
           @PLA2,
           @PLA3,
           @BROJRACUNAPLA,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(MZDOPRINOS, '')
                ELSE '99'
           END,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(PZDOPRINOS, '')
                ELSE ''
           END,
           ISNULL(PRIMATELJDOPRINOS1, ''),
           ISNULL(PRIMATELJDOPRINOS2, ''),
           '',
           ISNULL(VBDIDOPRINOS, '') + '-' + ISNULL(ZRNDOPRINOS, ''),
           ISNULL(MODOPRINOS, ''),
           LEFT(ISNULL(PODOPRINOS, '') + @MATICNIBROJ + @IDRS, 22),
           ISNULL(SIFRAOPISAPLACANJADOPRINOS, ''),
           LEFT(ISNULL(OPISPLACANJADOPRINOS, ''), 36),
           SUM(OBRACUNATIDOPRINOS) AS UKUPNOIZNOS
    FROM   OBRACUNDOPRINOSI
    WHERE  IDOBRACUN = @IDOBRACUN
    GROUP BY
           VBDIDOPRINOS,
           ZRNDOPRINOS,
           MODOPRINOS,
           PODOPRINOS,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(MZDOPRINOS, '')
                ELSE '99'
           END,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(PZDOPRINOS, '')
                ELSE ''
           END,
           PRIMATELJDOPRINOS1,
           PRIMATELJDOPRINOS2,
           SIFRAOPISAPLACANJADOPRINOS,
           OPISPLACANJADOPRINOS
    	
    	
    DELETE 
    FROM   #temp_virmani
    WHERE  IDDOPRINOS &gt; 0
    
    
    
    SET @MZPOREZ = ''
    SET @PZPOREZ = ''	
    SET @MOPOREZ = ''	
    SET @POPOREZ = ''
    SET @SIFRAOPISAPLACANJAPOREZ = ''
    SET @OPISPLACANJAPOREZ = ''
    SELECT TOP 1
           @MZPOREZ = ISNULL(MZPOREZ, ''),
           @PZPOREZ = ISNULL(PZPOREZ, ''),
           @MOPOREZ = ISNULL(MOPOREZ, ''),
           @POPOREZ = ISNULL(POPOREZ, ''),
           @SIFRAOPISAPLACANJAPOREZ = ISNULL(SIFRAOPISAPLACANJAPOREZ, ''),
           @OPISPLACANJAPOREZ = ISNULL(OPISPLACANJAPOREZ, '')
    FROM   POREZ
    ORDER BY
           IDPOREZ
    
    
    
    IF @POREZIPRIREZODVOJENO = '1'
    BEGIN
        INSERT INTO #temp_virmani
          (
            SIFRAOBRACUNAVIRMAN,
            NAMJENA,
            PLA1,
            PLA2,
            PLA3,
            BROJRACUNAPLA,
            MODELZADUZENJA,
            POZIVZADUZENJA,
            PRI1,
            PRI2,
            PRI3,
            BROJRACUNAPRI,
            MODELODOBRENJA,
            POZIVODOBRENJA,
            SIFRAOPISAPLACANJAVIRMAN,
            OPISPLACANJAVIRMAN,
            IZNOS
          )
        SELECT @IDOBRACUN,
               'Porez',
               @PLA1,
               @PLA2,
               @PLA3,
               @BROJRACUNAPLA,
               CASE @ZADUZENJE
                    WHEN '1' THEN @MZPOREZ
                    ELSE '99'
               END,
               CASE @ZADUZENJE
                    WHEN '1' THEN @PZPOREZ
                    ELSE ''
               END,
               'POREZ NA DOHODAK',
               LEFT(ISNULL(OPCINA.NAZIVOPCINE, ''), 20),
               '',
               ISNULL(OPCINA.VBDIOPCINA, '') + '-' + ISNULL(OPCINA.ZRNOPCINA, ''),
               @MOPOREZ,
               LEFT(@POPOREZ + @MATICNIBROJ + @IDRS, 22),
               @SIFRAOPISAPLACANJAPOREZ,
               LEFT(@OPISPLACANJAPOREZ, 36),
               SUM(OBRACUN_POREZ.IZNOSPOREZA)
        FROM   OBRACUNRADNICI
               INNER JOIN (
                        SELECT IDOBRACUN,
                               IDRADNIK,
                               MOPOREZ,
                               POPOREZ,
                               MZPOREZ,
                               PZPOREZ,
                               PRIMATELJPOREZ1,
                               PRIMATELJPOREZ2,
                               SIFRAOPISAPLACANJAPOREZ,
                               OPISPLACANJAPOREZ,
                               SUM(OBRACUNATIPOREZ) AS IZNOSPOREZA
                        FROM   OBRACUNPOREZI
                        GROUP BY
                               IDOBRACUN,
                               IDRADNIK,
                               MOPOREZ,
                               POPOREZ,
                               MZPOREZ,
                               PZPOREZ,
                               PRIMATELJPOREZ1,
                               PRIMATELJPOREZ2,
                               SIFRAOPISAPLACANJAPOREZ,
                               OPISPLACANJAPOREZ
                    ) OBRACUN_POREZ
                    ON  OBRACUN_POREZ.IDOBRACUN = OBRACUNRADNICI.IDOBRACUN
                    AND OBRACUN_POREZ.IDRADNIK = OBRACUNRADNICI.IDRADNIK
               INNER JOIN RADNIK
                    ON  OBRACUNRADNICI.IDRADNIK = RADNIK.IDRADNIK
               INNER JOIN OPCINA
                    ON  RADNIK.OPCINASTANOVANJAIDOPCINE = OPCINA.IDOPCINE
        WHERE  OBRACUNRADNICI.IDOBRACUN = @IDOBRACUN
        GROUP BY
               RADNIK.OPCINASTANOVANJAIDOPCINE,
               OPCINA.VBDIOPCINA,
               OPCINA.ZRNOPCINA,
               OPCINA.NAZIVOPCINE
        
        
        INSERT INTO #temp_virmani
          (
            SIFRAOBRACUNAVIRMAN,
            NAMJENA,
            PLA1,
            PLA2,
            PLA3,
            BROJRACUNAPLA,
            MODELZADUZENJA,
            POZIVZADUZENJA,
            PRI1,
            PRI2,
            PRI3,
            BROJRACUNAPRI,
            MODELODOBRENJA,
            POZIVODOBRENJA,
            SIFRAOPISAPLACANJAVIRMAN,
            OPISPLACANJAVIRMAN,
            IZNOS
          )
        SELECT @IDOBRACUN,
               'Prirez',
               @PLA1,
               @PLA2,
               @PLA3,
               @BROJRACUNAPLA,
               CASE @ZADUZENJE
                    WHEN '1' THEN @MZPOREZ
                    ELSE '99'
               END,
               CASE @ZADUZENJE
                    WHEN '1' THEN @PZPOREZ
                    ELSE ''
               END,
               'PRIREZ NA DOHODAK',
               LEFT(ISNULL(OPCINA.NAZIVOPCINE, ''), 20),
               '',
               ISNULL(OPCINA.VBDIOPCINA, '') + '-' + ISNULL(OPCINA.ZRNOPCINA, ''),
               @MOPOREZ,
               LEFT(@POPOREZ + @MATICNIBROJ + @IDRS, 22),
               @SIFRAOPISAPLACANJAPOREZ,
               LEFT(@OPISPLACANJAPOREZ, 36),
               SUM(OBRACUNRADNICI.OBRACUNATIPRIREZ) + SUM(KOREKCIJAPRIREZA)
        FROM   OBRACUNRADNICI
               INNER JOIN RADNIK
                    ON  OBRACUNRADNICI.IDRADNIK = RADNIK.IDRADNIK
               INNER JOIN OPCINA
                    ON  RADNIK.OPCINASTANOVANJAIDOPCINE = OPCINA.IDOPCINE
        WHERE  OBRACUNRADNICI.IDOBRACUN = @IDOBRACUN
        GROUP BY
               RADNIK.OPCINASTANOVANJAIDOPCINE,
               OPCINA.VBDIOPCINA,
               OPCINA.ZRNOPCINA,
               OPCINA.NAZIVOPCINE
    END
    ELSE
    BEGIN
        SET @PRI1 = ''
        SET @PRI2 = ''
        
        SELECT TOP 1
               @PRI1 = ISNULL(PRIMATELJPOREZ1, ''),
               @PRI2 = ISNULL(PRIMATELJPOREZ2, '')
        FROM   OBRACUNPOREZI
        WHERE  IDOBRACUN = @IDOBRACUN
        
        
        
        INSERT INTO #temp_virmani
          (
            SIFRAOBRACUNAVIRMAN,
            NAMJENA,
            PLA1,
            PLA2,
            PLA3,
            BROJRACUNAPLA,
            MODELZADUZENJA,
            POZIVZADUZENJA,
            PRI1,
            PRI2,
            PRI3,
            BROJRACUNAPRI,
            MODELODOBRENJA,
            POZIVODOBRENJA,
            SIFRAOPISAPLACANJAVIRMAN,
            OPISPLACANJAVIRMAN,
            IZNOS
          )
        SELECT @IDOBRACUN,
               'Porez i prirez',
               @PLA1,
               @PLA2,
               @PLA3,
               @BROJRACUNAPLA,
               CASE @ZADUZENJE
                    WHEN '1' THEN @MZPOREZ
                    ELSE '99'
               END,
               CASE @ZADUZENJE
                    WHEN '1' THEN @PZPOREZ
                    ELSE ''
               END,
               LEFT(@PRI1, 20),
               LEFT(@PRI2, 20),
               LEFT(ISNULL(OPCINA.NAZIVOPCINE, ''), 20),
               ISNULL(OPCINA.VBDIOPCINA, '') + '-' + ISNULL(OPCINA.ZRNOPCINA, ''),
               @MOPOREZ,
               LEFT(@POPOREZ + @MATICNIBROJ + @IDRS, 22),
               @SIFRAOPISAPLACANJAPOREZ,
               LEFT(@OPISPLACANJAPOREZ, 36),
               SUM(OBRACUN_POREZ.IZNOSPOREZA+OBRACUNRADNICI.OBRACUNATIPRIREZ+OBRACUNRADNICI.KOREKCIJAPRIREZA)
        FROM   OBRACUNRADNICI
               INNER JOIN (
                        SELECT IDOBRACUN,
                               IDRADNIK,
                               MOPOREZ,
                               POPOREZ,
                               MZPOREZ,
                               PZPOREZ,
                               PRIMATELJPOREZ1,
                               PRIMATELJPOREZ2,
                               SIFRAOPISAPLACANJAPOREZ,
                               OPISPLACANJAPOREZ,
                               SUM(OBRACUNATIPOREZ) AS IZNOSPOREZA
                        FROM   OBRACUNPOREZI
                        GROUP BY
                               IDOBRACUN,
                               IDRADNIK,
                               MOPOREZ,
                               POPOREZ,
                               MZPOREZ,
                               PZPOREZ,
                               PRIMATELJPOREZ1,
                               PRIMATELJPOREZ2,
                               SIFRAOPISAPLACANJAPOREZ,
                               OPISPLACANJAPOREZ
                    ) OBRACUN_POREZ
                    ON  OBRACUN_POREZ.IDOBRACUN = OBRACUNRADNICI.IDOBRACUN
                    AND OBRACUN_POREZ.IDRADNIK = OBRACUNRADNICI.IDRADNIK
               INNER JOIN RADNIK
                    ON  OBRACUNRADNICI.IDRADNIK = RADNIK.IDRADNIK
               INNER JOIN OPCINA
                    ON  OBRACUNRADNICI.SIFRAOPCINESTANOVANJA = OPCINA.IDOPCINE
        WHERE  OBRACUNRADNICI.IDOBRACUN = @IDOBRACUN
        GROUP BY
               OBRACUNRADNICI.SIFRAOPCINESTANOVANJA,
               OPCINA.VBDIOPCINA,
               OPCINA.ZRNOPCINA,
               OPCINA.NAZIVOPCINE
    END
    
    
    	
    INSERT INTO #temp_virmani
      (
        SIFRAOBRACUNAVIRMAN,
        NAMJENA,
        PLA1,
        PLA2,
        PLA3,
        BROJRACUNAPLA,
        MODELZADUZENJA,
        POZIVZADUZENJA,
        PRI1,
        PRI2,
        PRI3,
        BROJRACUNAPRI,
        MODELODOBRENJA,
        POZIVODOBRENJA,
        SIFRAOPISAPLACANJAVIRMAN,
        OPISPLACANJAVIRMAN,
        IZNOS
      )
    SELECT @IDOBRACUN,
           'Osiguranja-Olaksice',
           @PLA1,
           @PLA2,
           @PLA3,
           @BROJRACUNAPLA,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(MZOLAKSICA, '')
                ELSE '99'
           END,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(PZOLAKSICA, '')
                ELSE ''
           END,
           LEFT(ISNULL(PRIMATELJOLAKSICA1, ''), 20),
           LEFT(ISNULL(PRIMATELJOLAKSICA2, ''), 20),
           LEFT(ISNULL(PRIMATELJOLAKSICA3, ''), 20),
           ISNULL(VBDIOLAKSICA, '') + '-' + ISNULL(ZRNOLAKSICA, ''),
           ISNULL(MOOLAKSICA, ''),
           LEFT(ISNULL(POOLAKSICA, ''), 22),
           ISNULL(SIFRAOPISAPLACANJAOLAKSICA, ''),
           LEFT(ISNULL(OPISPLACANJAOLAKSICA, ''), 36),
           SUM(OBRACUNATAOLAKSICA)
    FROM   OBRACUNOLAKSICE
    WHERE  IDOBRACUN = @IDOBRACUN
    GROUP BY
           MOOLAKSICA,
           POOLAKSICA,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(MZOLAKSICA, '')
                ELSE '99'
           END,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(PZOLAKSICA, '')
                ELSE ''
           END,
           VBDIOLAKSICA,
           ZRNOLAKSICA,
           PRIMATELJOLAKSICA1,
           PRIMATELJOLAKSICA2,
           PRIMATELJOLAKSICA3,
           SIFRAOPISAPLACANJAOLAKSICA,
           OPISPLACANJAOLAKSICA
    
    
    	
    INSERT INTO #temp_virmani
      (
        SIFRAOBRACUNAVIRMAN,
        NAMJENA,
        PLA1,
        PLA2,
        PLA3,
        BROJRACUNAPLA,
        MODELZADUZENJA,
        POZIVZADUZENJA,
        PRI1,
        PRI2,
        PRI3,
        BROJRACUNAPRI,
        MODELODOBRENJA,
        POZIVODOBRENJA,
        SIFRAOPISAPLACANJAVIRMAN,
        OPISPLACANJAVIRMAN,
        IZNOS
      )
    SELECT @IDOBRACUN,
           'Obustave',
           @PLA1,
           @PLA2,
           @PLA3,
           @BROJRACUNAPLA,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(MZOBUSTAVA, '')
                ELSE '99'
           END,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(PZOBUSTAVA, '')
                ELSE ''
           END,
           LEFT(ISNULL(PRIMATELJOBUSTAVA1, ''), 20),
           LEFT(ISNULL(PRIMATELJOBUSTAVA2, ''), 20),
           LEFT(ISNULL(PRIMATELJOBUSTAVA3, ''), 20),
           ISNULL(VBDIOBUSTAVA, '') + '-' + ISNULL(ZRNOBUSTAVA, ''),
           ISNULL(MOOBUSTAVA, ''),
           LEFT(ISNULL(POOBUSTAVA, ''), 22),
           ISNULL(SIFRAOPISAPLACANJAOBUSTAVA, ''),
           LEFT(ISNULL(OPISPLACANJAOBUSTAVA, ''), 36),
           SUM(OBRACUNATAOBUSTAVAUKUNAMA)
    FROM   OBRACUNOBUSTAVE
    WHERE  IDOBRACUN = @IDOBRACUN
    GROUP BY
           MOOBUSTAVA,
           POOBUSTAVA,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(MZOBUSTAVA, '')
                ELSE '99'
           END,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(PZOBUSTAVA, '')
                ELSE ''
           END,
           VBDIOBUSTAVA,
           ZRNOBUSTAVA,
           PRIMATELJOBUSTAVA1,
           PRIMATELJOBUSTAVA2,
           PRIMATELJOBUSTAVA3,
           SIFRAOPISAPLACANJAOBUSTAVA,
           OPISPLACANJAOBUSTAVA
    
    	
    INSERT INTO #temp_virmani
      (
        SIFRAOBRACUNAVIRMAN,
        NAMJENA,
        PLA1,
        PLA2,
        PLA3,
        BROJRACUNAPLA,
        MODELZADUZENJA,
        POZIVZADUZENJA,
        PRI1,
        PRI2,
        PRI3,
        BROJRACUNAPRI,
        MODELODOBRENJA,
        POZIVODOBRENJA,
        SIFRAOPISAPLACANJAVIRMAN,
        OPISPLACANJAVIRMAN,
        IZNOS
      )
    SELECT @IDOBRACUN,
           'Obustave',
           @PLA1,
           @PLA2,
           @PLA3,
           @BROJRACUNAPLA,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(OBRMZKREDITOR, '')
                ELSE '99'
           END,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(OBRPZKREDITOR, '')
                ELSE ''
           END,
           LEFT(ISNULL(PRIMATELJKREDITOR1, ''), 20),
           LEFT(ISNULL(PRIMATELJKREDITOR2, ''), 20),
           LEFT(ISNULL(PRIMATELJKREDITOR3, ''), 20),
           ISNULL(VBDIKREDITOR, '') + '-' + ISNULL(ZRNKREDITOR, ''),
           ISNULL(OBRMOKREDITOR, ''),
           LEFT(ISNULL(OBRPOKREDITOR, ''), 22),
           ISNULL(OBRSIFRAOPISAPLACANJAKREDITOR, ''),
           LEFT(ISNULL(OBROPISPLACANJAKREDITOR, ''), 36),
           SUM(OBRACUNATIKUNSKIIZNOS)
    FROM   OBRACUNKREDITI
    WHERE  IDOBRACUN = @IDOBRACUN
    GROUP BY
           OBRMOKREDITOR,
           OBRPOKREDITOR,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(OBRMZKREDITOR, '')
                ELSE '99'
           END,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(OBRPZKREDITOR, '')
                ELSE ''
           END,
           VBDIKREDITOR,
           ZRNKREDITOR,
           PRIMATELJKREDITOR1,
           PRIMATELJKREDITOR2,
           PRIMATELJKREDITOR3,
           OBRSIFRAOPISAPLACANJAKREDITOR,
           OBROPISPLACANJAKREDITOR
    
    	
    INSERT INTO #temp_virmani
      (
        SIFRAOBRACUNAVIRMAN,
        NAMJENA,
        PLA1,
        PLA2,
        PLA3,
        BROJRACUNAPLA,
        MODELZADUZENJA,
        POZIVZADUZENJA,
        PRI1,
        PRI2,
        PRI3,
        BROJRACUNAPRI,
        MODELODOBRENJA,
        POZIVODOBRENJA,
        SIFRAOPISAPLACANJAVIRMAN,
        OPISPLACANJAVIRMAN,
        IZNOS
      )
    SELECT @IDOBRACUN,
           'Posebni porez',
           @PLA1,
           @PLA2,
           @PLA3,
           @BROJRACUNAPLA,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(MZKRIZNI, '')
                ELSE '99'
           END,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(PZKRIZNI, '')
                ELSE ''
           END,
           LEFT(ISNULL(PRIMATELJKRIZNI1, ''), 20),
           LEFT(ISNULL(PRIMATELJKRIZNI2, ''), 20),
           LEFT(ISNULL(PRIMATELJKRIZNI3, ''), 20),
           ISNULL(VBDIKRIZNI, '') + '-' + ISNULL(ZRNKRIZNI, ''),
           ISNULL(MOKRIZNI, ''),
           LEFT(ISNULL(POKRIZNI, '') + + @MATICNIBROJ, 22),
           ISNULL(SIFRAOPISAPLACANJAKRIZNI, ''),
           LEFT(ISNULL(OPISPLACANJAKRIZNI, ''), 36),
           SUM(POREZKRIZNI)
    FROM   OBRACUNOBRACUNLevel1ObracunKrizni
    WHERE  IDOBRACUN = @IDOBRACUN
    GROUP BY
           MOKRIZNI,
           POKRIZNI,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(MZKRIZNI, '')
                ELSE '99'
           END,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(PZKRIZNI, '')
                ELSE ''
           END,
           VBDIKRIZNI,
           ZRNKRIZNI,
           PRIMATELJKRIZNI1,
           PRIMATELJKRIZNI2,
           PRIMATELJKRIZNI3,
           SIFRAOPISAPLACANJAKRIZNI,
           OPISPLACANJAKRIZNI
    
    
    	
    INSERT INTO #temp_virmani_isp
      (
        SIFRAOBRACUNAVIRMAN,
        SIFRAZAGRUPIRANJE,
        NAMJENA,
        PLA1,
        PLA2,
        PLA3,
        BROJRACUNAPLA,
        MODELZADUZENJA,
        POZIVZADUZENJA,
        PRI1,
        PRI2,
        PRI3,
        BROJRACUNAPRI,
        MODELODOBRENJA,
        POZIVODOBRENJA,
        SIFRAOPISAPLACANJAVIRMAN,
        OPISPLACANJAVIRMAN,
        IZNOS,
        IDRADNIK,
        SIFRANAMJENA
      )
    SELECT @idobracun,
           'R' + CONVERT(VARCHAR, OBRACUNRADNICI.IDRADNIK),
           'Neto naknada',
           @PLA1,
           @PLA2,
           @PLA3,
           @BROJRACUNAPLA,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(ELEMENT.MZELEMENT, '')
                ELSE '99'
           END,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(ELEMENT.PZELEMENT, '')
                ELSE ''
           END,
           LEFT(ISNULL(BANKE.NAZIVBANKE1, ''), 20),
           LEFT(ISNULL(BANKE.NAZIVBANKE2, ''), 20),
           LEFT(ISNULL(BANKE.NAZIVBANKE3, ''), 20),
           ISNULL(BANKE.VBDIBANKE, '') + '-' + ISNULL(BANKE.ZRNBANKE, ''),
           ISNULL(BANKE.MOBANKA, ''),
           ISNULL(BANKE.POBANKA, ''),
           ISNULL(BANKE.SIFRAOPISPLACANJABANKE, ''),
           LEFT(ISNULL(OBRACUNELEMENTI.NAZIVELEMENT, ''), 36),
           SUM(OBRACUNELEMENTI.OBRIZNOS),
           OBRACUNRADNICI.IDRADNIK,
           9
    FROM   OBRACUNRADNICI
           INNER JOIN OBRACUNELEMENTI
                ON  OBRACUNRADNICI.IDOBRACUN = OBRACUNELEMENTI.IDOBRACUN
                AND OBRACUNRADNICI.IDRADNIK = OBRACUNELEMENTI.IDRADNIK
           LEFT JOIN ELEMENT
                ON  OBRACUNELEMENTI.IDELEMENT = ELEMENT.IDELEMENT
           INNER JOIN RADNIK
                ON  OBRACUNRADNICI.IDRADNIK = RADNIK.IDRADNIK
           INNER JOIN BANKE
                ON  RADNIK.IDBANKE = BANKE.IDBANKE
    WHERE  OBRACUNRADNICI.IDOBRACUN = @IDOBRACUN
           AND OBRACUNELEMENTI.IDVRSTAELEMENTA = 1
    GROUP BY
           OBRACUNRADNICI.IDRADNIK,
           OBRACUNELEMENTI.IDELEMENT,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(ELEMENT.MZELEMENT, '')
                ELSE '99'
           END,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(ELEMENT.PZELEMENT, '')
                ELSE ''
           END,
           BANKE.NAZIVBANKE1,
           BANKE.NAZIVBANKE2,
           BANKE.NAZIVBANKE3,
           BANKE.VBDIBANKE,
           BANKE.ZRNBANKE,
           BANKE.MOBANKA,
           BANKE.POBANKA,
           BANKE.SIFRAOPISPLACANJABANKE,
           OBRACUNELEMENTI.NAZIVELEMENT
    
    
    	
    INSERT INTO #temp_virmani_isp
      (
        SIFRAOBRACUNAVIRMAN,
        SIFRAZAGRUPIRANJE,
        NAMJENA,
        PLA1,
        PLA2,
        PLA3,
        BROJRACUNAPLA,
        MODELZADUZENJA,
        POZIVZADUZENJA,
        PRI1,
        PRI2,
        PRI3,
        BROJRACUNAPRI,
        MODELODOBRENJA,
        POZIVODOBRENJA,
        SIFRAOPISAPLACANJAVIRMAN,
        OPISPLACANJAVIRMAN,
        IZNOS,
        IDRADNIK,
        SIFRANAMJENA,
        idipident
      )
SELECT @idobracun,
           'R' + CONVERT(VARCHAR, OBRACUNRADNICI.IDRADNIK),
           'Neto isplata',
           @PLA1,
           @PLA2,
           @PLA3,
           @BROJRACUNAPLA,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(BANKE.MZBANKA, '')
                ELSE '99'
           END,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(BANKE.PZBANKA, '')
                ELSE ''
           END,
           LEFT(ISNULL(BANKE.NAZIVBANKE1, ''), 20),
           LEFT(ISNULL(BANKE.NAZIVBANKE2, ''), 20),
           LEFT(ISNULL(BANKE.NAZIVBANKE3, ''), 20),
           ISNULL(BANKE.VBDIBANKE, '') + '-' + ISNULL(BANKE.ZRNBANKE, ''),
           ISNULL(BANKE.MOBANKA, ''),
           ISNULL(BANKE.POBANKA, ''),
           ISNULL(BANKE.SIFRAOPISPLACANJABANKE, ''),
           ISNULL(BANKE.OPISPLACANJABANKE, ''),
           CASE OBRACUNRADNICI.IDIPIDENT
                WHEN 11 THEN 0
                ELSE  SUM(
                         VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNOZAISPLATU - 
                         VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNONETONAKNADE +ISNULL(KONACNIPOMOCNA.PRI,0)+ ISNULL(KONACNIPOMOCNA.POR,0)) - ISNULL((SELECT SUM(iznosizuzeca) FROM OBRACUNOBRACUNLevel1ObracunIzuzece
                         WHERE OBRACUNOBRACUNLevel1ObracunIzuzece.idobracun = @idobracun AND OBRACUNOBRACUNLevel1ObracunIzuzece.idradnik = obracunradnici.idradnik),0)
                     
           END,
           OBRACUNRADNICI.IDRADNIK,
           10,
           OBRACUNRADNICI.IDIPIDENT
    FROM   OBRACUNRADNICI
           INNER JOIN VW_PLACA_ZAPOSLENIK_UKUPNO
                ON  OBRACUNRADNICI.IDOBRACUN = VW_PLACA_ZAPOSLENIK_UKUPNO.IDOBRACUN
                AND OBRACUNRADNICI.IDRADNIK = VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK
           INNER JOIN RADNIK
                ON  OBRACUNRADNICI.IDRADNIK = RADNIK.IDRADNIK
           INNER JOIN BANKE
                ON  RADNIK.IDBANKE = BANKE.IDBANKE
			LEFT OUTER JOIN KONACNIPOMOCNA ON VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK = KONACNIPOMOCNA.IDRADNIK AND VW_PLACA_ZAPOSLENIK_UKUPNO.IDOBRACUN = KONACNIPOMOCNA.SIFRAOBRACUNA
			
    WHERE  OBRACUNRADNICI.IDOBRACUN = @IDOBRACUN
    GROUP BY
           OBRACUNRADNICI.IDRADNIK,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(BANKE.MZBANKA, '')
                ELSE '99'
           END,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(BANKE.PZBANKA, '')
                ELSE ''
           END,
           BANKE.IDBANKE,
           BANKE.NAZIVBANKE1,
           BANKE.NAZIVBANKE2,
           BANKE.NAZIVBANKE3,
           BANKE.VBDIBANKE,
           BANKE.ZRNBANKE,
           BANKE.MOBANKA,
           BANKE.POBANKA,
           BANKE.SIFRAOPISPLACANJABANKE,
           BANKE.OPISPLACANJABANKE,
           OBRACUNRADNICI.IDIPIDENT
        
    
    
    
    DECLARE @SIFRAZAGRUPIRANJE  VARCHAR(15)
    DECLARE @IZNOS              DECIMAL(18, 2)
    
    DECLARE @RBR                INT
    DECLARE @NAKNADAIZNOS       DECIMAL(18, 2)
    DECLARE @sifra              VARCHAR  (10)
    DECLARE @NOVIIZNOS                   DECIMAL(18, 2)
    
    DECLARE Neg_Cursor                   CURSOR  
    FOR
        SELECT SIFRAZAGRUPIRANJE,
               IZNOS                     
        FROM   #temp_virmani_isp
        WHERE  SIFRANAMJENA = 10
               AND IZNOS &lt; 0
        ORDER BY
               IZNOS 
    		
    		OPEN Neg_Cursor
    		
    		FETCH NEXT FROM 	Neg_Cursor
    		INTO			@SIFRAZAGRUPIRANJE, @IZNOS                                     
    WHILE @@FETCH_STATUS = 0
          OR @IZNOS &lt; 0
    BEGIN
        DECLARE Naknade_Cursor  CURSOR  
        FOR
            SELECT RBR,
                   IZNOS        
            FROM   #temp_virmani_isp
            WHERE  SIFRANAMJENA = 9
                   AND IZNOS &gt; 0
                   AND sifrazagrupiranje = @sifrazagrupiranje
            ORDER BY
                   IZNOS 
        
        OPEN Naknade_Cursor
        
        FETCH NEXT FROM Naknade_Cursor
        INTO @RBR, @NAKNADAIZNOS                            
        WHILE @@FETCH_STATUS = 0
              OR @IZNOS &lt; 0
        BEGIN
            IF @IZNOS &lt; 0
            BEGIN
                SET @NOVIIZNOS = @NAKNADAIZNOS + @IZNOS
                
                IF @NOVIIZNOS &lt; 0
                BEGIN
                    SET @IZNOS = @NOVIIZNOS
                    PRINT @rbr
                    
                    DELETE 
                    FROM   #temp_virmani_isp
                    WHERE  RBR = @RBR
                END
                ELSE
                BEGIN
                    SET @IZNOS = 0
                    
                    
                    UPDATE #temp_virmani_isp
                    SET    IZNOS = @NOVIIZNOS
                    WHERE  RBR = @RBR
                END
                
                
                IF @IZNOS &lt; 0
                    FETCH NEXT FROM Naknade_Cursor
                    INTO @RBR, @NAKNADAIZNOS
                ELSE
                    BREAK
            END
        END
        
        CLOSE Naknade_Cursor
        DEALLOCATE Naknade_Cursor
        
        
        FETCH NEXT FROM Neg_Cursor
        INTO @SIFRAZAGRUPIRANJE, @IZNOS
    END
    		
    		CLOSE Neg_Cursor
    		DEALLOCATE Neg_Cursor
    		
    	
    
    DELETE 
    FROM   #temp_virmani_isp
    WHERE  iznos &lt; 0
    
    
    INSERT INTO #TEMP_VIRMANI
      (
        SIFRAOBRACUNAVIRMAN,
        SIFRAZAGRUPIRANJE,
        NAMJENA,
        PLA1,
        PLA2,
        PLA3,
        BROJRACUNAPLA,
        MODELZADUZENJA,
        POZIVZADUZENJA,
        PRI1,
        PRI2,
        PRI3,
        BROJRACUNAPRI,
        MODELODOBRENJA,
        POZIVODOBRENJA,
        SIFRAOPISAPLACANJAVIRMAN,
        OPISPLACANJAVIRMAN,
        IZNOS,
        IDRADNIK,
        SIFRANAMJENA
      )
    SELECT @IDOBRACUN,
           CASE RADNIK.ZBIRNINETO
                WHEN 1 THEN 'B' + CONVERT(VARCHAR, BANKE.IDBANKE)
                ELSE 'R' + CONVERT(VARCHAR, RADNIK.IDRADNIK)
           END,
           CASE RADNIK.ZBIRNINETO
                WHEN 1 THEN 'Neto naknade-zbirni'
                ELSE 'Neto naknada'
           END,
           @PLA1,
           @PLA2,
           @PLA3,
           @BROJRACUNAPLA,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(MODELZADUZENJA, '')
                ELSE '99'
           END,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(POZIVZADUZENJA, '')
                ELSE ''
           END,
           LEFT(ISNULL(BANKE.NAZIVBANKE1, ''), 20),
           LEFT(ISNULL(BANKE.NAZIVBANKE2, ''), 20),
           LEFT(ISNULL(BANKE.NAZIVBANKE3, ''), 20),
           CASE (
                    CASE RADNIK.ZBIRNINETO
                         WHEN 1 THEN 0
                         ELSE #temp_virmani_isp.IDRADNIK
                    END
                )
                WHEN 0 THEN ISNULL(BANKE.VBDIBANKE, '') + '-' + ISNULL(BANKE.ZRNBANKE, '')
                ELSE ISNULL(BANKE.VBDIBANKE, '') + '-'
           END,
           CASE (
                    CASE RADNIK.ZBIRNINETO
                         WHEN 1 THEN 0
                         ELSE #temp_virmani_isp.IDRADNIK
                    END
                )
                WHEN 0 THEN ISNULL(BANKE.MOBANKA, '')
                ELSE ISNULL(BANKE.MOBANKA, '')
           END,
           CASE (
                    CASE RADNIK.ZBIRNINETO
                         WHEN 1 THEN 0
                         ELSE #temp_virmani_isp.IDRADNIK
                    END
                )
                WHEN 0 THEN ISNULL(BANKE.POBANKA, '')
                ELSE ISNULL(BANKE.POBANKA, '')
           END,
           ISNULL(BANKE.SIFRAOPISPLACANJABANKE, ''),
           LEFT(ISNULL(OPISPLACANJAVIRMAN, ''), 36),
           SUM(#temp_virmani_isp.iznos),
           CASE RADNIK.ZBIRNINETO
                WHEN 1 THEN 0
                ELSE #temp_virmani_isp.IDRADNIK
           END,
           9
    FROM   #temp_virmani_isp
           INNER JOIN RADNIK
                ON  #temp_virmani_isp.IDRADNIK = RADNIK.IDRADNIK
           INNER JOIN BANKE
                ON  RADNIK.IDBANKE = BANKE.IDBANKE
    WHERE  #temp_virmani_isp.sifraobracunavirman = @IDOBRACUN
           AND #temp_virmani_isp.sifranamjena = 9
    GROUP BY
           CASE RADNIK.ZBIRNINETO
                WHEN 1 THEN 'B' + CONVERT(VARCHAR, BANKE.IDBANKE)
                ELSE 'R' + CONVERT(VARCHAR, RADNIK.IDRADNIK)
           END,
           CASE RADNIK.ZBIRNINETO
                WHEN 1 THEN 'Neto naknade-zbirni'
                ELSE 'Neto naknada'
           END,
           CASE RADNIK.ZBIRNINETO
                WHEN 1 THEN 0
                ELSE #temp_virmani_isp.IDRADNIK
           END,
           MODELZADUZENJA,
           POZIVZADUZENJA,
           BANKE.NAZIVBANKE1,
           BANKE.NAZIVBANKE2,
           BANKE.NAZIVBANKE3,
           BANKE.VBDIBANKE,
           BANKE.ZRNBANKE,
           BANKE.MOBANKA,
           BANKE.POBANKA,
           BANKE.SIFRAOPISPLACANJABANKE,
           OPISPLACANJAVIRMAN
    
    
    
    INSERT INTO #TEMP_VIRMANI
      (
        SIFRAOBRACUNAVIRMAN,
        SIFRAZAGRUPIRANJE,
        NAMJENA,
        PLA1,
        PLA2,
        PLA3,
        BROJRACUNAPLA,
        MODELZADUZENJA,
        POZIVZADUZENJA,
        PRI1,
        PRI2,
        PRI3,
        BROJRACUNAPRI,
        MODELODOBRENJA,
        POZIVODOBRENJA,
        SIFRAOPISAPLACANJAVIRMAN,
        OPISPLACANJAVIRMAN,
        IZNOS,
        IDRADNIK,
        SIFRANAMJENA
      )
    SELECT @IDOBRACUN,
           CASE RADNIK.ZBIRNINETO
                WHEN 1 THEN 'B' + CONVERT(VARCHAR, BANKE.IDBANKE)
                ELSE 'R' + CONVERT(VARCHAR, RADNIK.IDRADNIK)
           END,
           CASE RADNIK.ZBIRNINETO
                WHEN 1 THEN 'Neto isplate-zbirni'
                ELSE 'Neto isplata'
           END,
           @PLA1,
           @PLA2,
           @PLA3,
           @BROJRACUNAPLA,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(BANKE.MZBANKA, '')
                ELSE '99'
           END,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(BANKE.PZBANKA, '')
                ELSE ''
           END,
           LEFT(ISNULL(BANKE.NAZIVBANKE1, ''), 20),
           LEFT(ISNULL(BANKE.NAZIVBANKE2, ''), 20),
           LEFT(ISNULL(BANKE.NAZIVBANKE3, ''), 20),
           CASE (
                    CASE RADNIK.ZBIRNINETO
                         WHEN 1 THEN 0
                         ELSE #temp_virmani_isp.IDRADNIK
                    END
                )
                WHEN 0 THEN ISNULL(BANKE.VBDIBANKE, '') + '-' + ISNULL(BANKE.ZRNBANKE, '')
                ELSE ISNULL(BANKE.VBDIBANKE, '') + '-'
           END,
           CASE (
                    CASE RADNIK.ZBIRNINETO
                         WHEN 1 THEN 0
                         ELSE #temp_virmani_isp.IDRADNIK
                    END
                )
                WHEN 0 THEN ISNULL(BANKE.MOBANKA, '')
                ELSE ISNULL(BANKE.MOBANKA, '')
           END,
           CASE (
                    CASE RADNIK.ZBIRNINETO
                         WHEN 1 THEN 0
                         ELSE #temp_virmani_isp.IDRADNIK
                    END
                )
                WHEN 0 THEN ISNULL(BANKE.POBANKA, '')
                ELSE ISNULL(BANKE.POBANKA, '')
           END,
           LEFT(ISNULL(BANKE.SIFRAOPISPLACANJABANKE, ''), 2),
           LEFT(ISNULL(BANKE.OPISPLACANJABANKE, '') + ' ' + @IDOBRACUN, 36),
           SUM(#temp_virmani_isp.iznos),
           CASE RADNIK.ZBIRNINETO
                WHEN 1 THEN 0
                ELSE #temp_virmani_isp.IDRADNIK
           END,
           10
    FROM   #temp_virmani_isp
           INNER JOIN RADNIK
                ON  #temp_virmani_isp.IDRADNIK = RADNIK.IDRADNIK
           INNER JOIN BANKE
                ON  RADNIK.IDBANKE = BANKE.IDBANKE
    WHERE  #temp_virmani_isp.sifraobracunavirman = @IDOBRACUN
           AND #temp_virmani_isp.sifranamjena = 10
    GROUP BY
           CASE RADNIK.ZBIRNINETO
                WHEN 1 THEN 'B' + CONVERT(VARCHAR, BANKE.IDBANKE)
                ELSE 'R' + CONVERT(VARCHAR, RADNIK.IDRADNIK)
           END,
           CASE RADNIK.ZBIRNINETO
                WHEN 1 THEN 'Neto isplate-zbirni'
                ELSE 'Neto isplata'
           END,
           CASE RADNIK.ZBIRNINETO
                WHEN 1 THEN 0
                ELSE #temp_virmani_isp.IDRADNIK
           END,
           CASE RADNIK.ZBIRNINETO
                WHEN 1 THEN ''
                ELSE RADNIK.TEKUCI
           END,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(BANKE.MZBANKA, '')
                ELSE '99'
           END,
           CASE @ZADUZENJE
                WHEN '1' THEN ISNULL(BANKE.PZBANKA, '')
                ELSE ''
           END,
           BANKE.IDBANKE,
           BANKE.NAZIVBANKE1,
           BANKE.NAZIVBANKE2,
           BANKE.NAZIVBANKE3,
           BANKE.VBDIBANKE,
           BANKE.ZRNBANKE,
           BANKE.MOBANKA,
           BANKE.POBANKA,
           BANKE.SIFRAOPISPLACANJABANKE,
           BANKE.OPISPLACANJABANKE
    
    ---- izuzeca od ovrha
    INSERT INTO #TEMP_VIRMANI
      (
        SIFRAOBRACUNAVIRMAN,
        SIFRAZAGRUPIRANJE,
        NAMJENA,
        PLA1,
        PLA2,
        PLA3,
        BROJRACUNAPLA,
        MODELZADUZENJA,
        POZIVZADUZENJA,
        PRI1,
        PRI2,
        PRI3,
        BROJRACUNAPRI,
        MODELODOBRENJA,
        POZIVODOBRENJA,
        SIFRAOPISAPLACANJAVIRMAN,
        OPISPLACANJAVIRMAN,
        IZNOS,
        IDRADNIK,
        SIFRANAMJENA
      )
      SELECT	@idobracun,
						'R' + CONVERT(varchar, OBRACUNOBRACUNLevel1ObracunIzuzece.IDRADNIK),
						'Izuzeto iz ovrhe',
						@PLA1,
						@PLA2,
						@PLA3,
						@BROJRACUNAPLA,
						CASE @ZADUZENJE WHEN '1' THEN ISNULL(OBRACUNOBRACUNLevel1ObracunIzuzece.mzizuzece, '') ELSE '' END, 
						CASE @ZADUZENJE WHEN '1' THEN ISNULL(OBRACUNOBRACUNLevel1ObracunIzuzece.pzizuzece, '') ELSE '' END, 
						LEFT(ISNULL(OBRACUNOBRACUNLevel1ObracunIzuzece.primateljizuzece1, ''), 20), 
						LEFT(ISNULL(OBRACUNOBRACUNLevel1ObracunIzuzece.primateljizuzece2, ''), 20), 
						LEFT(ISNULL(OBRACUNOBRACUNLevel1ObracunIzuzece.primateljizuzece3, ''), 20), 
						ISNULL(OBRACUNOBRACUNLevel1ObracunIzuzece.vbdiizuzece, '') + '-' + ISNULL(OBRACUNOBRACUNLevel1ObracunIzuzece.tekuciizuzece, ''),
						ISNULL(OBRACUNOBRACUNLevel1ObracunIzuzece.moizuzece, ''),
						ISNULL(OBRACUNOBRACUNLevel1ObracunIzuzece.poizuzece, ''),
						ISNULL(OBRACUNOBRACUNLevel1ObracunIzuzece.sifraopisaplacanjaizuzece, ''),
						ISNULL(OBRACUNOBRACUNLevel1ObracunIzuzece.opisplacanjaizuzece, ''),
						IsNull(OBRACUNOBRACUNLevel1ObracunIzuzece.IznosIzuzeca, 0),
						0,
						88
						
						
											
				FROM 		OBRACUNOBRACUNLevel1ObracunIzuzece 
				WHERE OBRACUNOBRACUNLevel1ObracunIzuzece.IDOBRACUN = @IDOBRACUN
				GROUP BY OBRACUNOBRACUNLevel1ObracunIzuzece.idradnik,OBRACUNOBRACUNLevel1ObracunIzuzece.MZIZUZECE,
				OBRACUNOBRACUNLevel1ObracunIzuzece.pzizuzece,OBRACUNOBRACUNLevel1ObracunIzuzece.primateljizuzece1,
				OBRACUNOBRACUNLevel1ObracunIzuzece.primateljizuzece2,OBRACUNOBRACUNLevel1ObracunIzuzece.primateljizuzece3,
				OBRACUNOBRACUNLevel1ObracunIzuzece.vbdiizuzece,OBRACUNOBRACUNLevel1ObracunIzuzece.tekuciizuzece,
				OBRACUNOBRACUNLevel1ObracunIzuzece.moizuzece,OBRACUNOBRACUNLevel1ObracunIzuzece.poizuzece,
				OBRACUNOBRACUNLevel1ObracunIzuzece.sifraopisaplacanjaizuzece,OBRACUNOBRACUNLevel1ObracunIzuzece.opisplacanjaizuzece,OBRACUNOBRACUNLevel1ObracunIzuzece.IznosIzuzeca
				    
    
    
    UPDATE #TEMP_VIRMANI
    SET    BROJRACUNAPRI = LEFT(BROJRACUNAPRI + RADNIK.TEKUCI, 18),
           MODELODOBRENJA = ISNULL(RADNIK.MO, '99'),
           POZIVODOBRENJA = ISNULL(RADNIK.PBO, '')
    FROM   #TEMP_VIRMANI
           INNER JOIN RADNIK
                ON  #TEMP_VIRMANI.IDRADNIK = RADNIK.IDRADNIK
                AND #TEMP_VIRMANI.IDRADNIK &gt; 0
    
    
    
    IF @ZADUZENJE = '1'
    BEGIN
        DECLARE @MZ_ZASVE  VARCHAR(2)
        DECLARE @PZ_ZASVE  VARCHAR(22)
        
        SELECT TOP 1
               @MZ_ZASVE = ISNULL(ELEMENT.MZELEMENT, ''),
               @PZ_ZASVE = ISNULL(ELEMENT.PZELEMENT, '')
        FROM   OBRACUNELEMENTI
               INNER JOIN ELEMENT
                    ON  OBRACUNELEMENTI.IDELEMENT = ELEMENT.IDELEMENT
        WHERE  OBRACUNELEMENTI.IDOBRACUN = @IDOBRACUN
               AND ELEMENT.POSTAVLJAMZPZSVIMVIRMANIMA = 1
        
        
        IF NOT (@MZ_ZASVE IS NULL AND @PZ_ZASVE IS NULL)
        BEGIN
            UPDATE #TEMP_VIRMANI
            SET    MODELZADUZENJA = @MZ_ZASVE,
                   POZIVZADUZENJA = @PZ_ZASVE
            WHERE  IDELEMENT = 0
        END
    END
    
    
    
    
    
    SELECT SIFRAOBRACUNAVIRMAN,
           NAMJENA,
           PLA1,
           PLA2,
           PLA3,
           BROJRACUNAPLA,
           MODELZADUZENJA,
           POZIVZADUZENJA,
           PRI1,
           PRI2,
           PRI3,
           BROJRACUNAPRI,
           MODELODOBRENJA,
           POZIVODOBRENJA,
           SIFRAOPISAPLACANJAVIRMAN,
           OPISPLACANJAVIRMAN,
           IZNOS,
           IDRADNIK,
           IDELEMENT,
           GETDATE() AS DATUMVALUTE,
           GETDATE() AS DATUMPODNOSENJA,
           '501' AS IZVORDOKUMENTA,
           1 AS oznacen
    FROM   #TEMP_VIRMANI
    WHERE  IZNOS &gt; 0
    ORDER BY
           RBR

    RETURN @@ERROR
END
go


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_ZAP1_OBRAZAC]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_ZAP1_OBRAZAC]
GO







CREATE PROCEDURE dbo.S_PLACA_ZAP1_OBRAZAC
(
@IDOBRACUN varchar(11) = NULL
)
AS
BEGIN
	
	SET NOCOUNT ON

	DECLARE @BROJRACUNAPLA VARCHAR(19)
	
	SET @BROJRACUNAPLA = ISNULL((SELECT TOP 1 BROJRACUNAPLA FROM VIRMANI WHERE SIFRAOBRACUNAVIRMAN = @IDOBRACUN),' ')

	IF @BROJRACUNAPLA = ' ' 
	BEGIN
		SET @BROJRACUNAPLA = (SELECT TOP 1 VBDIKORISNIK +'-' ZIROKORISNIK FROM KORISNIKLEVEL1 )

	END

	

	SELECT     	SUM(VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNOBRUTO) AS UKUPNOBRUTO, 
			SUM(VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNODOPRINOSI) AS UKUPNODOPRINOSIIZ,
			VW_PLACA_DOPRINOSI.STOPAMIOI,
			VW_PLACA_DOPRINOSI.OSNOVICAMIOI,
			VW_PLACA_DOPRINOSI.UKUPNOMIOI,
			VW_PLACA_DOPRINOSI.STOPAMIOII,
			VW_PLACA_DOPRINOSI.OSNOVICAMIOII,
			VW_PLACA_DOPRINOSI.UKUPNOMIOII,
			SUM(VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNOBRUTO) - SUM(VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNODOPRINOSI) AS UKUPNODOHODAK,
			SUM(VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNOOO) AS UKUPNOOO,
			SUM(VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNOPOREZNOPRIZNATEOLAKSICE) AS UKUPNOOLAKSICE,
			SUM(VW_PLACA_ZAPOSLENIK_UKUPNO.POREZNAOSNOVICA) AS OSNOVICAPOREZ,
			SUM(VW_PLACA_POREZI_PO_SKUPINAMA.UKUPNOPOREZDOFAKTOO2) AS UKUPNOPOREZDOFAKTOO2,
			SUM(VW_PLACA_POREZI_PO_SKUPINAMA.UKUPNOPOREZODFAKTOO2DO5) AS UKUPNOPOREZODFAKTOO2DO5,
			SUM(VW_PLACA_POREZI_PO_SKUPINAMA.UKUPNOPOREZODFAKTOO5) AS UKUPNOPOREZODFAKTOO5,
			SUM(VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNOPOREZ) AS UKUPNOPOREZ,  
			SUM(VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNOPRIREZ) AS UKUPNOPRIREZ,  
			SUM(VW_PLACA_ZAPOSLENIK_UKUPNO.NETOPLACA) AS IZNOSPLACEIZNALOGAZAISPLATU, 
			SUM(VW_PLACA_ZAPOSLENIK_UKUPNO.UKUPNODOPRINOSINA) AS UKUPNODOPRINOSINA,  
			VW_PLACA_DOPRINOSI.STOPAZDRO,
			VW_PLACA_DOPRINOSI.OSNOVICAZDRO,
			VW_PLACA_DOPRINOSI.UKUPNOZDRO,
			VW_PLACA_DOPRINOSI.STOPAZDRP,
			VW_PLACA_DOPRINOSI.OSNOVICAZDRP,
			VW_PLACA_DOPRINOSI.UKUPNOZDRP,
			VW_PLACA_DOPRINOSI.STOPAZAP,
			VW_PLACA_DOPRINOSI.OSNOVICAZAP,
			VW_PLACA_DOPRINOSI.UKUPNOZAP,
			VW_PLACA_DOPRINOSI.STOPAZAPI,
			VW_PLACA_DOPRINOSI.OSNOVICAZAPI,
			VW_PLACA_DOPRINOSI.UKUPNOZAPI,
			COUNT(VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK) AS BROJRADNIKA,
			@BROJRACUNAPLA AS BROJRACUNAZAP1
	FROM         	VW_PLACA_ZAPOSLENIK_UKUPNO 
	LEFT JOIN	VW_PLACA_DOPRINOSI
	ON		VW_PLACA_ZAPOSLENIK_UKUPNO.IDOBRACUN = VW_PLACA_DOPRINOSI.IDOBRACUN
	LEFT JOIN	VW_PLACA_POREZI_PO_SKUPINAMA
	ON		VW_PLACA_ZAPOSLENIK_UKUPNO.IDOBRACUN = VW_PLACA_POREZI_PO_SKUPINAMA.IDOBRACUN
	AND		VW_PLACA_ZAPOSLENIK_UKUPNO.IDRADNIK = VW_PLACA_POREZI_PO_SKUPINAMA.IDRADNIK
	WHERE	VW_PLACA_ZAPOSLENIK_UKUPNO.IDOBRACUN = @IDOBRACUN
	GROUP BY	VW_PLACA_ZAPOSLENIK_UKUPNO.IDOBRACUN,
			VW_PLACA_DOPRINOSI.STOPAMIOI,
			VW_PLACA_DOPRINOSI.OSNOVICAMIOI,
			VW_PLACA_DOPRINOSI.UKUPNOMIOI,
			VW_PLACA_DOPRINOSI.STOPAMIOII,
			VW_PLACA_DOPRINOSI.OSNOVICAMIOII,
			VW_PLACA_DOPRINOSI.UKUPNOMIOII,
			VW_PLACA_DOPRINOSI.STOPAZDRO,
			VW_PLACA_DOPRINOSI.OSNOVICAZDRO,
			VW_PLACA_DOPRINOSI.UKUPNOZDRO,
			VW_PLACA_DOPRINOSI.STOPAZDRP,
			VW_PLACA_DOPRINOSI.OSNOVICAZDRP,
			VW_PLACA_DOPRINOSI.UKUPNOZDRP,
			VW_PLACA_DOPRINOSI.STOPAZAP,
			VW_PLACA_DOPRINOSI.OSNOVICAZAP,
			VW_PLACA_DOPRINOSI.UKUPNOZAP,
			VW_PLACA_DOPRINOSI.STOPAZAPI,
			VW_PLACA_DOPRINOSI.OSNOVICAZAPI,
			VW_PLACA_DOPRINOSI.UKUPNOZAPI

	SET NOCOUNT OFF

END






GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_RSM_OBRAZAC]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_RSM_OBRAZAC]
GO






CREATE PROCEDURE [dbo].[S_RSM_OBRAZAC]
(
@IDOBRACUN VARCHAR(11),
@DD int = 0
)
AS
BEGIN
	
	CREATE TABLE #TEMP_RSMB 
	(
		REDNIBROJ INT IDENTITY(1, 1),
		IDRADNIK INT,
		PREZIMEIIME VARCHAR(50),
		MBGOSIGURANIKA VARCHAR(13),
		SIFRAGRADARADA VARCHAR(4),
		OO VARCHAR(2),
		B VARCHAR(1),
		OD INT,
		DOO INT,
		IZNOSOBRACUNANEPLACERSMB DECIMAL(18, 2),
		IZNOSOSNOVICEZADOPRINOSERSMB DECIMAL(18, 2),
		IDDOPRINOSMIO1 INT,
		STOPAMIO1 DECIMAL(18, 2),
		MIO1RSMB DECIMAL(18, 2),
		IDDOPRINOSMIO2 INT,
		STOPAMIO2 DECIMAL(18, 2),
		MIO2RSMB DECIMAL(18, 2),
		POREZIPRIREZ DECIMAL(18, 2),
		IZNOSISPLACENEPLACERSMB DECIMAL(18, 2),
		OIB VARCHAR(11),
		VOLONTER VARCHAR(2)
	)
	
	CREATE TABLE #RSMB 
	(
		REDNIBROJ INT IDENTITY(1, 1),
		IDRADNIK INT,
		PREZIMEIIME VARCHAR(50),
		MBGOSIGURANIKA VARCHAR(13),
		SIFRAGRADARADA VARCHAR(4),
		OO VARCHAR(2),
		B VARCHAR(1),
		OD INT,
		DOO INT,
		IZNOSOBRACUNANEPLACERSMB DECIMAL(18, 2),
		IZNOSOSNOVICEZADOPRINOSERSMB DECIMAL(18, 2),
		IDDOPRINOSMIO1 INT,
		STOPAMIO1 DECIMAL(18, 2),
		MIO1RSMB DECIMAL(18, 2),
		IDDOPRINOSMIO2 INT,
		STOPAMIO2 DECIMAL(18, 2),
		MIO2RSMB DECIMAL(18, 2),
		POREZIPRIREZ DECIMAL(18, 2),
		IZNOSISPLACENEPLACERSMB DECIMAL(18, 2),
		OIB VARCHAR(11),
		VOLONTER INT
	)
 SET NOCOUNT ON
 DECLARE @MAX_REDNIBROJ INT
 DECLARE @TRENUTNI_REDNIBROJ INT
 DECLARE @IDRADNIK INT
 DECLARE @TRENUTNI_IDRADNIK INT
 DECLARE @OO VARCHAR(2)
 DECLARE @TRENUTNI_OO VARCHAR(2)
 DECLARE @PODBROJ INT
 DECLARE @USPOREDBA INT
 DECLARE @OD1 INT
 DECLARE @DO1 INT
 DECLARE @OD INT
 DECLARE @DO INT

IF @DD = 0
BEGIN




	
	EXEC dbo.S_PLACA_RSM_OBRAZAC @DO OUTPUT, @DO1 OUTPUT, @IDOBRACUN, @IDRADNIK OUTPUT, @MAX_REDNIBROJ OUTPUT, @OD OUTPUT, @OD1 OUTPUT, @OO OUTPUT, @TRENUTNI_IDRADNIK OUTPUT, @TRENUTNI_OO OUTPUT, @TRENUTNI_REDNIBROJ OUTPUT, @USPOREDBA OUTPUT ;
END

IF @DD = 1
BEGIN


	EXEC dbo.S_DD_RSM_OBRAZAC @DO, @DO1, @IDOBRACUN, @IDRADNIK, @MAX_REDNIBROJ, @OD, @OD1, @OO, @TRENUTNI_IDRADNIK, @TRENUTNI_OO, @TRENUTNI_REDNIBROJ, @USPOREDBA ;
END

IF @DD = 2
BEGIN

	EXEC dbo.[S_UCENIK_RSM_OBRAZAC] @DO OUTPUT, @DO1 OUTPUT, @IDOBRACUN, @IDRADNIK OUTPUT, @MAX_REDNIBROJ OUTPUT, @OD OUTPUT, @OD1 OUTPUT, @OO OUTPUT, @TRENUTNI_IDRADNIK OUTPUT, @TRENUTNI_OO OUTPUT, @TRENUTNI_REDNIBROJ OUTPUT, @USPOREDBA OUTPUT ;
END
END
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_VIRMANI]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_VIRMANI]
GO





CREATE PROCEDURE   [dbo].[S_VIRMANI]
(
@IDOBRACUN varchar(11),
@ZADUZENJE char(1) = '0', 
@DRUGIKORISNIK char(1) = '0',
@POREZIPRIREZODVOJENO char(1) = '0', 
@pl1 varchar(20),
@pl2 varchar(20),
@pl3 varchar(20),
@vbd varchar(7),
@zrn varchar(10),
@mb varchar(14),
@dd char(1) = '0' 
)
AS
BEGIN

	
	DECLARE	@PLA1 VARCHAR(20)
	DECLARE	@PLA2 VARCHAR(20)
	DECLARE	@PLA3 VARCHAR(20)
	DECLARE 	@BROJRACUNAPLA VARCHAR(18)
	DECLARE 	@MATICNIBROJ VARCHAR(14)
	DECLARE 	@IDRS VARCHAR(5)

	SET		@PLA1 = @pl1
	SET		@PLA2 = @pl2
	SET		@PLA3 = @pl3
	SET		@BROJRACUNAPLA = @vbd + '-' + @zrn
	SET 		@MATICNIBROJ = @mb
	SET 		@IDRS = ''

	DECLARE	@MZPOREZ				varchar(2)
	DECLARE	@PZPOREZ				varchar(22)
	DECLARE	@MOPOREZ				varchar(2)
	DECLARE	@POPOREZ				varchar(22)
	DECLARE	@SIFRAOPISAPLACANJAPOREZ	varchar(2) 
	DECLARE	@OPISPLACANJAPOREZ		varchar(36)
	DECLARE @PRI1	VARCHAR(20)
		DECLARE @PRI2	VARCHAR(20)



	



	IF @MATICNIBROJ &lt;&gt; '' 
		SET @MATICNIBROJ = @MATICNIBROJ





	CREATE TABLE #temp_virmani
	(	
		SIFRAZAGRUPIRANJE varchar(15),
		RBR int identity(1, 1),
		SIFRAOBRACUNAVIRMAN varchar(11),
		NAMJENA varchar(20),
		PLA1 varchar(20),
		PLA2 varchar(20),
		PLA3 varchar(20),
		BROJRACUNAPLA varchar(18),
		MODELZADUZENJA varchar(2),
		POZIVZADUZENJA varchar(22),
		PRI1 varchar(20),
		PRI2 varchar(20),
		PRI3 varchar(20),
		BROJRACUNAPRI varchar(18),
		MODELODOBRENJA varchar(2),
		POZIVODOBRENJA varchar(22),
		SIFRAOPISAPLACANJAVIRMAN varchar(2),
		OPISPLACANJAVIRMAN varchar(36),
		IZNOS decimal(18, 2),
		IDRADNIK int DEFAULT 0,
		IDDOPRINOS int DEFAULT 0,
		IDELEMENT int DEFAULT 0,
		SIFRANAMJENA int DEFAULT 0,
		IDIPIDENT INT DEFAULT 0
	) 

CREATE TABLE #temp_virmani_isp
	(	
		SIFRAZAGRUPIRANJE varchar(15),
		RBR int identity(1, 1),
		SIFRAOBRACUNAVIRMAN varchar(11),
		NAMJENA varchar(20),
		PLA1 varchar(20),
		PLA2 varchar(20),
		PLA3 varchar(20),
		BROJRACUNAPLA varchar(18),
		MODELZADUZENJA varchar(2),
		POZIVZADUZENJA varchar(22),
		PRI1 varchar(20),
		PRI2 varchar(20),
		PRI3 varchar(20),
		BROJRACUNAPRI varchar(18),
		MODELODOBRENJA varchar(2),
		POZIVODOBRENJA varchar(22),
		SIFRAOPISAPLACANJAVIRMAN varchar(2),
		OPISPLACANJAVIRMAN varchar(36),
		IZNOS decimal(18, 2),
		IDRADNIK int DEFAULT 0,
		IDDOPRINOS int DEFAULT 0,
		IDELEMENT int DEFAULT 0,
		SIFRANAMJENA int DEFAULT 0,
		IDIPIDENT INT DEFAULT 0
	) 

if @dd = '0'
BEGIN

EXECUTE [dbo].[S_PLACA_VIRMANI] @IDRS = @IDRS, @IDOBRACUN = @IDOBRACUN, @PLA1 = @PLA1, @PLA2 = @PLA2, @PLA3 = @PLA3, @BROJRACUNAPLA = @BROJRACUNAPLA, @ZADUZENJE = @ZADUZENJE, @MATICNIBROJ = @MATICNIBROJ, @MZPOREZ = @MZPOREZ, @PZPOREZ = @PZPOREZ, @MOPOREZ = @MOPOREZ, @POPOREZ = @POPOREZ, @SIFRAOPISAPLACANJAPOREZ = @SIFRAOPISAPLACANJAPOREZ, @OPISPLACANJAPOREZ = @OPISPLACANJAPOREZ, @POREZIPRIREZODVOJENO = @POREZIPRIREZODVOJENO, @PRI1 = @PRI1, @PRI2 = @PRI2

	
END
IF @dd = '1'
BEGIN

	EXEC dbo.S_DD_VIRMANI @BROJRACUNAPLA, @IDOBRACUN, @IDRS, @MATICNIBROJ, @MOPOREZ, @MZPOREZ, @OPISPLACANJAPOREZ, @PLA1, @PLA2, @PLA3, @POPOREZ, @POREZIPRIREZODVOJENO, @PRI1, @PRI2, @PZPOREZ, @SIFRAOPISAPLACANJAPOREZ, @ZADUZENJE ;

END
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_KONACNI_REKAPOPCINE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_KONACNI_REKAPOPCINE]
GO


CREATE PROCEDURE [dbo].[S_PLACA_KONACNI_REKAPOPCINE]
(
@idobracun varchar(11)
)
AS
BEGIN


select P.SIFRAOPCINESTANOVANJA,SUM(P.OBRACUNATOPOREZ) AS OBRACUNATOPOREZ,SUM(P.OBRACUNATOPRIREZ) AS OBRACUNATIPRIREZ,
SUM(P.POREZUKUPNOKOREKCIJA) AS POREZUKUPNOKOREKCIJA,SUM(PRIREZUKUPNOKOREKCIJA) AS PRIREZUKUPNOKOREKCIJA,
P.IME,P.PREZIME,P.ULICA,P.MJESTO,P.KUCNIBROJ,P.OIB,P.NAZIVOPCINE,SUM(PRIREZPOREZNA) AS PRIREZPOREZNA,SUM(P.POREZPOREZNA) AS POREZPOREZNA
FROM
(

	SELECT     lEFT(ISNULL(OBRACUNRADNICI.SIFRAOPCINESTANOVANJA, '000'), 3) as sifraopcinestanovanja, SUM(OBRACUNPOREZI.OBRACUNATIPOREZ) AS ObracunatoPOREZ,SUM(OBRACUNRADNICI.OBRACUNATIPRIREZ) AS OBRACUNATOPRIREZ,0 AS POREZUKUPNOKOREKCIJA,0 AS PRIREZUKUPNOKOREKCIJA,
dbo.RADNIK.PREZIME, dbo.RADNIK.IME, dbo.RADNIK.ulica, dbo.RADNIK.mjesto, 
                      dbo.RADNIK.kucnibroj, dbo.RADNIK.OIB, dbo.OPCINA.NAZIVOPCINE,0 AS PRIREZPOREZNA,0 AS POREZPOREZNA
FROM         OBRACUNRADNICI
INNER JOIN OBRACUNPOREZI ON OBRACUNRADNICI.IDOBRACUN = OBRACUNPOREZI.IDOBRACUN AND OBRACUNRADNICI.IDRADNIK = OBRACUNPOREZI.IDRADNIK
inner JOIN OPCINA ON OBRACUNRADNICI.SIFRAOPCINESTANOVANJA = OPCINA.IDOPCINE
INNER JOIN dbo.RADNIK ON OBRACUNRADNICI.IDRADNIK = dbo.RADNIK.IDRADNIK
WHERE OBRACUNRADNICI.IDOBRACUN = @IDOBRACUN AND 
 OBRACUNPOREZI.IDPOREZ &lt;&gt; 999
GROUP BY OBRACUNRADNICI.SIFRAOPCINESTANOVANJA, OPCINA.NAZIVOPCINE,dbo.RADNIK.PREZIME, dbo.RADNIK.IME, 
                      dbo.RADNIK.ulica, dbo.RADNIK.mjesto, dbo.RADNIK.kucnibroj, dbo.RADNIK.OIB, dbo.OPCINA.NAZIVOPCINE

UNION ALL

	SELECT     lEFT(ISNULL(OBRACUNRADNICI.SIFRAOPCINESTANOVANJA, '000'), 3) as sifraopcinestanovanja, 0,0,SUM(OBRACUNPOREZI.OBRACUNATIPOREZ) AS POREZUKUPNOKOREKCIJA,SUM(OBRACUNRADNICI.KOREKCIJAPRIREZA) AS PRIREZUKUPNOKOREKCIJA,
dbo.RADNIK.PREZIME, dbo.RADNIK.IME, dbo.RADNIK.ulica, dbo.RADNIK.mjesto,
 dbo.RADNIK.kucnibroj, dbo.RADNIK.OIB, dbo.OPCINA.NAZIVOPCINE,0 AS PRIREZPOREZNA,0 AS POREZPOREZNA
FROM         OBRACUNRADNICI
INNER JOIN OBRACUNPOREZI ON OBRACUNRADNICI.IDOBRACUN = OBRACUNPOREZI.IDOBRACUN AND OBRACUNRADNICI.IDRADNIK = OBRACUNPOREZI.IDRADNIK
inner JOIN OPCINA ON OBRACUNRADNICI.SIFRAOPCINESTANOVANJA = OPCINA.IDOPCINE
INNER JOIN dbo.RADNIK ON OBRACUNRADNICI.IDRADNIK = dbo.RADNIK.IDRADNIK
WHERE OBRACUNRADNICI.IDOBRACUN = @IDOBRACUN AND 
OBRACUNPOREZI.IDPOREZ = 999
GROUP BY OBRACUNRADNICI.SIFRAOPCINESTANOVANJA, OPCINA.NAZIVOPCINE,dbo.RADNIK.PREZIME, dbo.RADNIK.IME, 
                      dbo.RADNIK.ulica, dbo.RADNIK.mjesto, dbo.RADNIK.kucnibroj, dbo.RADNIK.OIB, dbo.OPCINA.NAZIVOPCINE


union all

	SELECT     lEFT(ISNULL(OBRACUNRADNICI.SIFRAOPCINESTANOVANJA, '000'), 3) as sifraopcinestanovanja, 0 AS OBRACUNATOPOREZ,0 AS OBRACUNATOPRIREZ,0 AS POREZUKUPNOKOREKCIJA,0 AS PRIREZUKUPNOKOREKCIJA,
dbo.RADNIK.PREZIME, dbo.RADNIK.IME, dbo.RADNIK.ulica, dbo.RADNIK.mjesto,
 dbo.RADNIK.kucnibroj, dbo.RADNIK.OIB, dbo.OPCINA.NAZIVOPCINE,isnull(SUM(dbo.KONACNIPOMOCNA.PRI),0) AS PRIREZPOREZNA, isnull(SUM(dbo.KONACNIPOMOCNA.POR),0) 
FROM         OBRACUNRADNICI

inner JOIN OPCINA ON OBRACUNRADNICI.SIFRAOPCINESTANOVANJA = OPCINA.IDOPCINE
INNER JOIN dbo.RADNIK ON OBRACUNRADNICI.IDRADNIK = dbo.RADNIK.IDRADNIK
INNER JOIN dbo.KONACNIPOMOCNA ON dbo.obracunradnici.IDRADNIK = dbo.KONACNIPOMOCNA.IDRADNIK AND dbo.obracunradnici.IDOBRACUN = dbo.KONACNIPOMOCNA.SIFRAOBRACUNA
WHERE OBRACUNRADNICI.IDOBRACUN = @IDOBRACUN
GROUP BY OBRACUNRADNICI.SIFRAOPCINESTANOVANJA, OPCINA.NAZIVOPCINE,dbo.RADNIK.PREZIME, dbo.RADNIK.IME, 
                      dbo.RADNIK.ulica, dbo.RADNIK.mjesto, dbo.RADNIK.kucnibroj, dbo.RADNIK.OIB, dbo.OPCINA.NAZIVOPCINE

) AS P
GROUP BY P.SIFRAOPCINESTANOVANJA,P.IME,P.PREZIME,P.ULICA,P.MJESTO,P.KUCNIBROJ,P.OIB,P.NAZIVOPCINE
END
go

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_PODESI_POVRATE_POREZ]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_PODESI_POVRATE_POREZ]
GO

CREATE PROCEDURE [dbo].[S_PLACA_PODESI_POVRATE_POREZ]
(
@opcina varchar(3),
@IZNOS MONEY
)
AS
BEGIN
declare @pri money
declare @por money
DECLARE @IDRADNIK INT
DECLARE _cursor CURSOR FOR 
select PRI,POR,IDRADNIK from konacnipomocna where idradnik in (
SELECT     dbo.RADNIK.idradnik
FROM         dbo.KONACNIPOMOCNA INNER JOIN
                      dbo.RADNIK ON dbo.KONACNIPOMOCNA.IDRADNIK = dbo.RADNIK.IDRADNIK
where lEFT(ISNULL(  dbo.RADNIK.OPCINASTANOVANJAIDOPCINE, '000'), 3) = @opcina
)
OPEN _cursor;
FETCH NEXT FROM _cursor 
INTO @pri,@por,@IDRADNIK;
WHILE @@FETCH_STATUS = 0
BEGIN

UPDATE KONACNIPOMOCNA SET POR = CASE WHEN ABS(@IZNOS) &gt; ABS(@POR) THEN 0 ELSE @POR + @IZNOS END WHERE IDRADNIK = @IDRADNIK

SET @IZNOS = @IZNOS + (@POR)
if  @iznos &lt; 0  
set @iznos = 0

FETCH NEXT FROM _cursor 
INTO @pri,@por,@IDRADNIK;
END
CLOSE _cursor
DEALLOCATE _cursor;
END
go

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_PODESI_POVRATE_PRIREZ]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_PODESI_POVRATE_PRIREZ]
GO

CREATE PROCEDURE [dbo].[S_PLACA_PODESI_POVRATE_PRIREZ]
(
@opcina varchar(3),
@IZNOS MONEY
)
AS
BEGIN
declare @pri money
declare @por money
DECLARE @IDRADNIK INT
DECLARE _cursor CURSOR FOR 
select PRI,POR,IDRADNIK from konacnipomocna where idradnik in (
SELECT     dbo.RADNIK.idradnik
FROM         dbo.KONACNIPOMOCNA INNER JOIN
                      dbo.RADNIK ON dbo.KONACNIPOMOCNA.IDRADNIK = dbo.RADNIK.IDRADNIK
where lEFT(ISNULL(  dbo.RADNIK.OPCINASTANOVANJAIDOPCINE, '000'), 3) = @opcina
)
OPEN _cursor;
FETCH NEXT FROM _cursor 
INTO @pri,@por,@IDRADNIK;
WHILE @@FETCH_STATUS = 0
BEGIN

UPDATE KONACNIPOMOCNA SET PRI = CASE WHEN ABS(@IZNOS) &gt; ABS(@PRI) THEN 0 ELSE @PRI + @IZNOS END WHERE IDRADNIK = @IDRADNIK

SET @IZNOS = @IZNOS + (@PRI)
if  @iznos &lt; 0  
set @iznos = 0

FETCH NEXT FROM _cursor 
INTO @pri,@por,@IDRADNIK;
END
CLOSE _cursor
DEALLOCATE _cursor;
END
GO






IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp_helpindex3]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[sp_helpindex3]
GO


CREATE proc sp_helpindex3

as
	
	set nocount on

	declare @objname nvarchar(776), 
			@objid int,			
			@indid smallint,	
			@groupid smallint,  
			@indname sysname,
			@groupname sysname,
			@status int,
			@keys nvarchar(2126),	
			@dbname	sysname,
			@usrname sysname

	
	select @dbname = parsename(@objname,3)

	if @dbname is not null and @dbname &lt;&gt; db_name()
	begin
			raiserror(15250,-1,-1)
			return (1)
	end


	
	create table #spindtab
	(
		
		usr_name			sysname,
		table_name			sysname,		
		index_name			sysname	collate database_default,
		stats				int,
		groupname			sysname collate database_default,
		index_keys			nvarchar(2126)	collate database_default  
	)


	
	declare ms_crs_tab cursor local static for
	select sysobjects.id, sysobjects.name, sysusers.name from sysobjects inner join sysusers on sysobjects.uid = sysusers.uid where type = 'U'

	open ms_crs_tab
	fetch ms_crs_tab into @objid, @objname, @usrname

	while @@fetch_status &gt;= 0
	begin


	
	declare ms_crs_ind cursor local static for
		select indid, groupid, name, status from sysindexes
			where id = @objid and indid &gt; 0 and indid &lt; 255 and (status &amp; 64)=0 order by indid
	open ms_crs_ind
	fetch ms_crs_ind into @indid, @groupid, @indname, @status

	
	while @@fetch_status &gt;= 0
	begin
		
		declare @i int, @thiskey nvarchar(131) 

		select @keys = index_col(@usrname + '.' + @objname, @indid, 1), @i = 2
		if (indexkey_property(@objid, @indid, 1, 'isdescending') = 1)
			select @keys = @keys  + '(-)'

		select @thiskey = index_col(@usrname + '.' + @objname, @indid, @i)
		if ((@thiskey is not null) and (indexkey_property(@objid, @indid, @i, 'isdescending') = 1))
			select @thiskey = @thiskey + '(-)'

		while (@thiskey is not null )
		begin
			select @keys = @keys + ', ' + @thiskey, @i = @i + 1
			select @thiskey = index_col(@usrname + '.' + @objname, @indid, @i)
			if ((@thiskey is not null) and (indexkey_property(@objid, @indid, @i, 'isdescending') = 1))
				select @thiskey = @thiskey + '(-)'
		end

		select @groupname = groupname from sysfilegroups where groupid = @groupid

		
		insert into #spindtab values (@usrname, @objname, @indname, @status, @groupname, @keys)

		
		fetch ms_crs_ind into @indid, @groupid, @indname, @status
	end
	deallocate ms_crs_ind

	fetch ms_crs_tab into @objid, @objname, @usrname
	end
	deallocate ms_crs_tab

	
	declare @empty varchar(1) select @empty = ''
	declare @des1			varchar(35),	
			@des2			varchar(35),
			@des4			varchar(35),
			@des32			varchar(35),
			@des64			varchar(35),
			@des2048		varchar(35),
			@des4096		varchar(35),
			@des8388608		varchar(35),
			@des16777216	varchar(35)
	select @des1 = name from master.dbo.spt_values where type = 'I' and number = 1
	select @des2 = name from master.dbo.spt_values where type = 'I' and number = 2
	select @des4 = name from master.dbo.spt_values where type = 'I' and number = 4
	select @des32 = name from master.dbo.spt_values where type = 'I' and number = 32
	select @des64 = name from master.dbo.spt_values where type = 'I' and number = 64
	select @des2048 = name from master.dbo.spt_values where type = 'I' and number = 2048
	select @des4096 = name from master.dbo.spt_values where type = 'I' and number = 4096
	select @des8388608 = name from master.dbo.spt_values where type = 'I' and number = 8388608
	select @des16777216 = name from master.dbo.spt_values where type = 'I' and number = 16777216

	
	select
		'usr_name'=usr_name,
		'table_name'=table_name,		
		'index_name' = index_name,
		'index_description' = convert(varchar(210), 
				case when (stats &amp; 16)&lt;&gt;0 then 'clustered' else 'nonclustered' end
				+ case when (stats &amp; 1)&lt;&gt;0 then ', '+@des1 else @empty end
				+ case when (stats &amp; 2)&lt;&gt;0 then ', '+@des2 else @empty end
				+ case when (stats &amp; 4)&lt;&gt;0 then ', '+@des4 else @empty end
				+ case when (stats &amp; 64)&lt;&gt;0 then ', '+@des64 else case when (stats &amp; 32)&lt;&gt;0 then ', '+@des32 else @empty end end
				+ case when (stats &amp; 2048)&lt;&gt;0 then ', '+@des2048 else @empty end
				+ case when (stats &amp; 4096)&lt;&gt;0 then ', '+@des4096 else @empty end
				+ case when (stats &amp; 8388608)&lt;&gt;0 then ', '+@des8388608 else @empty end
				+ case when (stats &amp; 16777216)&lt;&gt;0 then ', '+@des16777216 else @empty end
				+ ' located on ' + groupname),
		'index_keys' = index_keys
	from #spindtab
	order by table_name, index_name


	return (0) 



GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SPGetForeignKeyInfo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SPGetForeignKeyInfo]
GO


CREATE PROCEDURE DBO.SPGetForeignKeyInfo
            AS
           
    SET NOCOUNT ON
DECLARE @FKName NVARCHAR(128)
DECLARE @FKColumnName NVARCHAR(128)
DECLARE @PKColumnName NVARCHAR(128)
DECLARE @fTableName NVARCHAR(128)
DECLARE @fUpdateRule INT
DECLARE @fDeleteRule INT
DECLARE @FieldNames NVARCHAR(500)
CREATE TABLE #Temp(
                PKTABLE_QUALIFIER NVARCHAR(128),
                PKTABLE_OWNER NVARCHAR(128),
                PKTABLE_NAME NVARCHAR(128),
                PKCOLUMN_NAME NVARCHAR(128),
                FKTABLE_QUALIFIER NVARCHAR(128),
                FKTABLE_OWNER NVARCHAR(128),
                FKTABLE_NAME NVARCHAR(128),
                FKCOLUMN_NAME NVARCHAR(128),
                KEY_SEQ INT,
                UPDATE_RULE INT,
                DELETE_RULE INT,
                FK_NAME NVARCHAR(128),
                PK_NAME NVARCHAR(128),
                DEFERRABILITY INT)
DECLARE TTableNames CURSOR FOR
SELECT name
    FROM sysobjects
    WHERE xtype = 'U'
OPEN TTableNames
            FETCH NEXT
    FROM TTableNames
            INTO @fTableName
WHILE @@FETCH_STATUS = 0
    BEGIN
    INSERT #Temp
        EXEC dbo.sp_fkeys @fTableName
                FETCH NEXT
        FROM TTableNames
                INTO @fTableName
    END
            CLOSE TTableNames
            DEALLOCATE TTableNames
SET @FieldNames = ''
SET @fTableName = ''
SELECT DISTINCT FK_NAME AS FKName,FKTABLE_NAME AS FTName,
    @FieldNames AS FTFields,PKTABLE_NAME AS STName,
    @FieldNames AS STFields,@FieldNames AS FKType
            INTO #Temp1
    FROM #Temp
    ORDER BY FK_NAME,FKTABLE_NAME,PKTABLE_NAME
DECLARE FK_CUSROR CURSOR FOR
SELECT FKName
    FROM #Temp1
OPEN FK_CUSROR
            FETCH
    FROM FK_CUSROR INTO @FKName
WHILE @@FETCH_STATUS = 0
    BEGIN
    DECLARE FK_FIELDS_CUSROR CURSOR FOR
    SELECT FKCOLUMN_NAME,PKCOLUMN_NAME,UPDATE_RULE,DELETE_RULE
        FROM #TEMP
        WHERE FK_NAME = @FKName
        ORDER BY KEY_SEQ
    OPEN FK_FIELDS_CUSROR
                FETCH
        FROM FK_FIELDS_CUSROR INTO @FKColumnName,@PKColumnName,
        @fUpdateRule,@fDeleteRule
    WHILE @@FETCH_STATUS = 0
        BEGIN
        UPDATE #Temp1 SET FTFields =  CASE WHEN  LEN(FTFields)
                = 0 THEN   '['+@FKColumnName+']'
            ELSE FTFields
                        +',['+@FKColumnName+']' END
            WHERE FKName = @FKName
        UPDATE #Temp1 SET STFields =  CASE WHEN  LEN(STFields)
                = 0 THEN   '['+@PKColumnName+']'
            ELSE STFields
                        +',['+@PKColumnName+']' END
            WHERE FKName = @FKName
                    FETCH NEXT
            FROM FK_FIELDS_CUSROR INTO @FKColumnName,@PKColumnName,
            @fUpdateRule,@fDeleteRule
        END
    UPDATE #Temp1 SET FKType = CASE WHEN  @fUpdateRule = 0
                    THEN   FKType + ' ON UPDATE CASCADE'
        ELSE FKType END
        WHERE FKName = @FKName
    UPDATE #Temp1 SET FKType = CASE WHEN  @fDeleteRule = 0
                    THEN   FKType + ' ON DELETE CASCADE'
        ELSE FKType END
        WHERE FKName = @FKName
                CLOSE FK_FIELDS_CUSROR
                DEALLOCATE FK_FIELDS_CUSROR
                FETCH next
        FROM FK_CUSROR INTO @FKName
    END
            CLOSE FK_CUSROR
            DEALLOCATE FK_CUSROR
SELECT 'ALTER TABLE [dbo].['+FTName+'] ADD
CONSTRAINT ['+FKName+'] FOREIGN KEY ('+FTFields+')
REFERENCES ['+STName+'] ('+STFields+') '+FKType
    FROM #Temp1
SET NOCOUNT OFF
RETURN


GO
















IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BRISI]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[BRISI]
GO

CREATE PROCEDURE [dbo].[BRISI]
AS
BEGIN
DECLARE @dbname sysname 
DECLARE @SQL nvarchar(1000) 
DECLARE cur CURSOR FORWARD_ONLY KEYSET FOR 
SELECT name FROM MASTER.DBO.sysdatabases WHERE sid &lt;&gt; 0x01 
OPEN cur 
FETCH NEXT FROM cur INTO @dbname 
WHILE @@FETCH_STATUS = 0 
BEGIN 
SET @SQL = N'DROP DATABASE ' + @dbname 
exec sp_executesql @SQL
FETCH NEXT FROM cur INTO @dbname 
END 
CLOSE cur 
DEALLOCATE cur
END
go
update RADNIK SET IDBENEFICIRANI = '0' WHERE IDBENEFICIRANI IS NULL
GO
ALTER TABLE [dbo].[radnik]
ALTER COLUMN [IDBENEFICIRANI] [nvarchar](1) COLLATE Croatian_CI_AS NOT NULL
GO

ALTER TABLE [dbo].[radnik]
ALTER COLUMN [OIB] [nvarchar](11) NULL
GO


ALTER TABLE [dbo].DDOBRACUNRadniciDDKrizniPorez ALTER COLUMN [MZKRIZNI] [nvarchar] (2) COLLATE Croatian_CI_AS  NULL
ALTER TABLE [dbo].DDOBRACUNRadniciDDKrizniPorez ALTER COLUMN [PZKRIZNI] [nvarchar] (22) COLLATE Croatian_CI_AS NULL
GO


ALTER TABLE [dbo].[ObracunDoprinosi] ALTER COLUMN [MZDOPRINOS] [nvarchar] (2) COLLATE Croatian_CI_AS  NULL
ALTER TABLE [dbo].[ObracunDoprinosi] ALTER COLUMN [PZDOPRINOS] [nvarchar] (22) COLLATE Croatian_CI_AS NULL
GO

ALTER TABLE [dbo].[ObracunPorezi] ALTER COLUMN [MZPOREZ] [nvarchar] (2) COLLATE Croatian_CI_AS  NULL
ALTER TABLE [dbo].[ObracunPorezi] ALTER COLUMN [PZPOREZ] [nvarchar] (22) COLLATE Croatian_CI_AS  NULL
GO


ALTER TABLE [dbo].[ObracunOlaksice] ALTER COLUMN [MOOLAKSICA] [nvarchar] (2) COLLATE Croatian_CI_AS NULL
ALTER TABLE [dbo].[ObracunOlaksice] ALTER COLUMN [POOLAKSICA] [nvarchar] (22) COLLATE Croatian_CI_AS NULL
GO

ALTER TABLE [dbo].[OBUSTAVA] ALTER COLUMN [MZOBUSTAVA] [nvarchar] (2) COLLATE Croatian_CI_AS NULL
ALTER TABLE [dbo].[OBUSTAVA] ALTER COLUMN [PZOBUSTAVA] [nvarchar] (22) COLLATE Croatian_CI_AS NULL
GO

ALTER TABLE [dbo].[RADNIKKrediti] ALTER COLUMN [MOKREDITOR] [nvarchar] (2) COLLATE Croatian_CI_AS NULL
ALTER TABLE [dbo].[RADNIKKrediti] ALTER COLUMN [POKREDITOR] [nvarchar] (22) COLLATE Croatian_CI_AS NULL
GO


ALTER TABLE [dbo].[RADNIKOlaksica] ALTER COLUMN [ZADMOOLAKSICE] [nvarchar] (2) COLLATE Croatian_CI_AS NULL
ALTER TABLE [dbo].[RADNIKOlaksica] ALTER COLUMN [ZADPOOLAKSICE] [nvarchar] (22) COLLATE Croatian_CI_AS NULL
GO

ALTER TABLE [dbo].[RADNIKOlaksica] ALTER COLUMN [ZADOPISPLACANJAOLAKSICE] [nvarchar] (36) COLLATE Croatian_CI_AS NOT NULL

GO
ALTER TABLE [dbo].[ELEMENT] ALTER COLUMN [IDELEMENT] [int] NOT NULL

GO
ALTER TABLE [dbo].[ObracunElementi] ALTER COLUMN [IDELEMENT] [int] NOT NULL

GO
ALTER TABLE [dbo].[RADNIKBruto] ALTER COLUMN [BRUTOELEMENTIDELEMENT] [int] NOT NULL

GO
ALTER TABLE [dbo].[RADNIKNeto] ALTER COLUMN [NETOELEMENTIDELEMENT] [int] NOT NULL
GO

ALTER TABLE [dbo].[RSMA] ALTER COLUMN [MBOBVEZNIKA] [nvarchar] (13) COLLATE Croatian_CI_AS  NOT NULL
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_IZVRSENJE_PLANA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_IZVRSENJE_PLANA]
GO

CREATE  PROCEDURE [dbo].[S_FIN_IZVRSENJE_PLANA]
(
  
    
    @ORGANIZAC VARCHAR(1000),
	@godina INT
	
     
     
 )
AS
BEGIN
declare @brojac int


  CREATE TABLE #ukupna (
 DUGUJE decimal(18,2),
 potrazuje decimal(18,2),
 konto char(15)
)

  CREATE TABLE #PLANIRANOTEMP (
 IZNOS decimal(18,2),
 konto char(15)
)


SELECT @BROJAC =  4

WHILE   @brojac &gt; 0
BEGIN
insert #ukupna
select sum(duguje) as duguje, sum(potrazuje) as potrazuje,substring(GKSTAVKA.IDKONTO,1,@brojac) AS KONTO
from GKSTAVKA 
INNER JOIN  dbo.fnSplitter(@ORGANIZAC) fnSplitter_2 ON dbo.GKSTAVKA.IDORGJED = fnSplitter_2.ID 
WHERE LEN(substring(GKSTAVKA.IDKONTO,1,@BROJAC))  = @BROJAC 
group by substring(GKSTAVKA.IDKONTO,1,@brojac)

set @brojac = @brojac - 1
END

SELECT @BROJAC =  4

WHILE   @brojac &gt; 0
BEGIN
insert #PLANIRANOTEMP

select sum(PLANIRANIIZNOS) , substring(PLANORGKON.PLANKONTOIDKONTO,1,@brojac) AS KONTO
from PLANORGKON 
INNER JOIN  dbo.fnSplitter(@ORGANIZAC) fnSplitter_2 ON DBO.PLANORGKON.PLANOJIDORGJED = fnSplitter_2.ID 
WHERE LEN(substring(PLANORGKON.PLANKONTOIDKONTO,1,@BROJAC))  = @BROJAC AND planorgkon.PLANGODINAIDGODINE = @godina
group by substring(PLANORGKON.PLANKONTOIDKONTO,1,@brojac)
set @brojac = @brojac - 1
END
SELECT * FROM 
(
SELECT p.konto,SUM(P.PLANIRANO) as PLANIRANO,SUM(P.IZVRSENO) as IZVRSENO,
case when sum(p.planirano) = 0 then 0 else round(sum(p.izvrseno) / sum(p.planirano) * 100,2) end  as INDEKS
FROM
(
SELECT #UKUPNA.DUGUJE AS IZVRSENO,#UKUPNA.KONTO, 0 AS PLANIRANO 
FROM #UKUPNA 
WHERE #UKUPNA.KONTO LIKE '6%'
UNION ALL
SELECT 0,#PLANIRANOTEMP.KONTO,#PLANIRANOTEMP.IZNOS AS PLANIRANO FROM #PLANIRANOTEMP
WHERE #PLANIRANOTEMP.KONTO LIKE '6%'
) AS P
GROUP BY P.KONTO
UNION ALL
SELECT p.konto,SUM(P.PLANIRANO) as PLANIRANO,SUM(P.IZVRSENO) as IZVRSENO,
case when sum(p.planirano) = 0 then 0 else round(sum(p.izvrseno) / sum(p.planirano) * 100,2) end  as INDEKS
FROM
(
SELECT #UKUPNA.DUGUJE AS IZVRSENO,#UKUPNA.KONTO, 0 AS PLANIRANO 
FROM #UKUPNA 
WHERE #UKUPNA.KONTO LIKE '7%'
UNION ALL
SELECT 0,#PLANIRANOTEMP.KONTO,#PLANIRANOTEMP.IZNOS AS PLANIRANO FROM #PLANIRANOTEMP
WHERE #PLANIRANOTEMP.KONTO LIKE '7%'
) AS P
GROUP BY P.KONTO

UNION ALL
SELECT p.konto,SUM(P.PLANIRANO) as PLANIRANO,SUM(P.IZVRSENO) as IZVRSENO,
case when sum(p.planirano) = 0 then 0 else round(sum(p.izvrseno) / sum(p.planirano) * 100,2) end  as INDEKS
FROM
(
SELECT #UKUPNA.DUGUJE AS IZVRSENO,#UKUPNA.KONTO, 0 AS PLANIRANO 
FROM #UKUPNA 
WHERE #UKUPNA.KONTO LIKE '3%'
UNION ALL
SELECT 0,#PLANIRANOTEMP.KONTO,#PLANIRANOTEMP.IZNOS AS PLANIRANO FROM #PLANIRANOTEMP
WHERE #PLANIRANOTEMP.KONTO LIKE '3%'
) AS P
GROUP BY P.KONTO
UNION ALL
SELECT p.konto,SUM(P.PLANIRANO) as PLANIRANO,SUM(P.IZVRSENO) as IZVRSENO,
case when sum(p.planirano) = 0 then 0 else round(sum(p.izvrseno) / sum(p.planirano) * 100,2) end  as INDEKS
FROM
(
SELECT #UKUPNA.DUGUJE AS IZVRSENO,#UKUPNA.KONTO, 0 AS PLANIRANO 
FROM #UKUPNA 
WHERE #UKUPNA.KONTO LIKE '4%'
UNION ALL
SELECT 0,#PLANIRANOTEMP.KONTO,#PLANIRANOTEMP.IZNOS AS PLANIRANO FROM #PLANIRANOTEMP
WHERE #PLANIRANOTEMP.KONTO LIKE '4%'
) AS P
GROUP BY P.KONTO
) AS TEST
END
go

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_REZULTAT_PRORACUN]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_REZULTAT_PRORACUN]
GO

CREATE PROCEDURE [dbo].[S_FIN_REZULTAT_PRORACUN]
(
    @GODINA AS INT,
    @DAT AS DATETIME,
	@IDDOKUMENT INT
) 
AS
BEGIN

DECLARE @BROJDOK INT
SELECT @BROJDOK = MAX(BROJDOKUMENTA)+1 FROM GKSTAVKA WHERE IDDOKUMENT = @IDDOKUMENT AND dbo.GKSTAVKA.GKGODIDGODINE = @GODINA
 



INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          IDMJESTOTROSKA , -- IDMJESTOTROSKA - int
          idorgjed , -- IDORGJED - int
          IDKONTO , -- IDKONTO - nvarchar(14)
          'Zključak ' + IDKONTO , -- OPIS - nvarchar(150)
          0 , -- duguje - money
          SUM(duguje) , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          'OBR-KLASA3' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
FROM gkstavka 
WHERE idkonto LIKE '3%' AND IDKONTO &lt;&gt; '39111' AND dbo.GKSTAVKA.GKGODIDGODINE = @GODINA
GROUP BY idorgjed,idkonto,IDMJESTOTROSKA

INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          IDMJESTOTROSKA , -- IDMJESTOTROSKA - int
          idorgjed , -- IDORGJED - int
          39111 , -- IDKONTO - nvarchar(14)
          'Donos sa ' + IDKONTO , -- OPIS - nvarchar(150)
          SUM(DUGUJE), -- duguje - money
          0 , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          'OBR-KLASA3' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
FROM gkstavka WHERE idkonto LIKE '3%'  AND dbo.GKSTAVKA.GKGODIDGODINE = @GODINA
GROUP BY idorgjed,idkonto,IDMJESTOTROSKA



-- klasa 4
INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          IDMJESTOTROSKA , -- IDMJESTOTROSKA - int
          idorgjed , -- IDORGJED - int
          IDKONTO , -- IDKONTO - nvarchar(14)
          'Zaključak ' + IDKONTO , -- OPIS - nvarchar(150)
          0 , -- duguje - money
          SUM(duguje) , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          'OBR-KLASA4' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
FROM gkstavka WHERE idkonto LIKE '4%' AND IDKONTO &lt;&gt; '49111' AND dbo.GKSTAVKA.GKGODIDGODINE = @GODINA
GROUP BY idorgjed,idkonto,IDMJESTOTROSKA

INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          IDMJESTOTROSKA , -- IDMJESTOTROSKA - int
          idorgjed , -- IDORGJED - int
          49111 , -- IDKONTO - nvarchar(14)
          'Donos sa ' + IDKONTO , -- OPIS - nvarchar(150)
          SUM(DUGUJE) , -- duguje - money
          0 , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          'OBR-KLASA4' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
FROM gkstavka WHERE idkonto LIKE '4%' AND dbo.GKSTAVKA.GKGODIDGODINE = @GODINA
GROUP BY idorgjed,idkonto,IDMJESTOTROSKA


-- klasa 5

INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          IDMJESTOTROSKA , -- IDMJESTOTROSKA - int
          idorgjed , -- IDORGJED - int
          idkonto , -- IDKONTO - nvarchar(14)
          'Zaključak  ' + IDKONTO , -- OPIS - nvarchar(150)
          0 , -- duguje - money
          SUM(duguje) , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          'OBR-KLASA5' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
FROM gkstavka WHERE idkonto LIKE '5%' AND dbo.GKSTAVKA.GKGODIDGODINE = @GODINA
GROUP BY idorgjed,idkonto,IDMJESTOTROSKA

INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          IDMJESTOTROSKA , -- IDMJESTOTROSKA - int
          idorgjed , -- IDORGJED - int
          59111 , -- IDKONTO - nvarchar(14)
          'Donos sa ' + IDKONTO , -- OPIS - nvarchar(150)
          SUM(duguje) , -- duguje - money
          0 , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          'OBR-KLASA5' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
FROM gkstavka WHERE idkonto LIKE '5%' AND dbo.GKSTAVKA.GKGODIDGODINE = @GODINA
GROUP BY idorgjed,idkonto,IDMJESTOTROSKA



-- klasa 6

INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          IDMJESTOTROSKA , -- IDMJESTOTROSKA - int
          idorgjed , -- IDORGJED - int
          idkonto , -- IDKONTO - nvarchar(14)
          'Zaključak ' + IDKONTO , -- OPIS - nvarchar(150)
          SUM(potrazuje) , -- duguje - money
          0 , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          'OBR-KLASA6' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
FROM gkstavka WHERE idkonto LIKE '6%' AND dbo.GKSTAVKA.GKGODIDGODINE = @GODINA
GROUP BY idorgjed,idkonto,IDMJESTOTROSKA


INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          IDMJESTOTROSKA , -- IDMJESTOTROSKA - int
          idorgjed , -- IDORGJED - int
          69111 , -- IDKONTO - nvarchar(14)
          'Donos sa' + IDKONTO , -- OPIS - nvarchar(150)
          0 , -- duguje - money
          SUM(potrazuje) , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          'OBR-KLASA6' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
FROM gkstavka WHERE idkonto LIKE '6%' AND dbo.GKSTAVKA.GKGODIDGODINE = @GODINA
GROUP BY idorgjed,idkonto,IDMJESTOTROSKA








-- klasa 7
INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          IDMJESTOTROSKA , -- IDMJESTOTROSKA - int
          idorgjed , -- IDORGJED - int
          IDKONTO , -- IDKONTO - nvarchar(14)
          'Zaključak ' + IDKONTO , -- OPIS - nvarchar(150)
          SUM(potrazuje) , -- duguje - money
          0 , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          'OBR-KLASA7' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
FROM gkstavka WHERE idkonto LIKE '7%' AND dbo.GKSTAVKA.GKGODIDGODINE = @GODINA
GROUP BY idorgjed,idkonto,IDMJESTOTROSKA

INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          IDMJESTOTROSKA , -- IDMJESTOTROSKA - int
          idorgjed , -- IDORGJED - int
          79111 , -- IDKONTO - nvarchar(14)
          'Donos sa ' + IDKONTO , -- OPIS - nvarchar(150)
          0 , -- duguje - money
          SUM(potrazuje) , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          'OBR-KLASA7' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
FROM gkstavka WHERE idkonto LIKE '7%' AND dbo.GKSTAVKA.GKGODIDGODINE = @GODINA
GROUP BY idorgjed,idkonto,IDMJESTOTROSKA





-- klasa 8
INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          IDMJESTOTROSKA , -- IDMJESTOTROSKA - int
          idorgjed , -- IDORGJED - int
          idkonto , -- IDKONTO - nvarchar(14)
          'Zaključak ' + IDKONTO , -- OPIS - nvarchar(150)
          SUM(potrazuje) , -- duguje - money
          0 , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          'OBR-KLASA8' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
FROM gkstavka WHERE idkonto LIKE '8%' AND dbo.GKSTAVKA.GKGODIDGODINE = @GODINA
GROUP BY idorgjed,idkonto,IDMJESTOTROSKA


INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          IDMJESTOTROSKA , -- IDMJESTOTROSKA - int
          idorgjed , -- IDORGJED - int
          89111 , -- IDKONTO - nvarchar(14)
          'Donos sa' + IDKONTO , -- OPIS - nvarchar(150)
          0 , -- duguje - money
          SUM(potrazuje) , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          'OBR-KLASA8' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
FROM gkstavka WHERE idkonto LIKE '8%' AND dbo.GKSTAVKA.GKGODIDGODINE = @GODINA
GROUP BY idorgjed,idkonto,IDMJESTOTROSKA





--39111 na 92111

DECLARE @oj INT
DECLARE @mt INT
DECLARE @iznos money
DECLARE @konto VARCHAR(15)

declare cur cursor fast_forward for 
SELECT idkonto,idorgjed,idmjestotroska,SUM(duguje) 
FROM gkstavka WHERE  IDKONTO = '39111' AND dbo.GKSTAVKA.GKGODIDGODINE = @GODINA
GROUP BY idorgjed,idkonto,IDMJESTOTROSKA

open cur 
fetch next from cur into @konto, @oj, @mt,@iznos 
while @@fetch_status &lt;&gt; -1 
begin 
INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          @MT , -- IDMJESTOTROSKA - int
          @OJ , -- IDORGJED - int
          39111 , -- IDKONTO - nvarchar(14)
          'Zaključak 39' , -- OPIS - nvarchar(150)
          0 , -- duguje - money
		  @iznos , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          'ZAKLJ-39' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
          
          
          INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          @MT , -- IDMJESTOTROSKA - int
          @OJ , -- IDORGJED - int
          92111 , -- IDKONTO - nvarchar(14)
          'Rezultat 92111' , -- OPIS - nvarchar(150)
          @iznos , -- duguje - money
		  0 , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          'REZ-92' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime

fetch next from cur into @konto, @oj, @mt,@iznos 
end 
close cur 
deallocate cur 




--49111 na 92111

--
--DECLARE @oj INT
--DECLARE @mt INT
--DECLARE @iznos money
--DECLARE @konto VARCHAR(15)

declare cur cursor fast_forward for 
SELECT idkonto,idorgjed,idmjestotroska,SUM(duguje) 
FROM gkstavka WHERE  IDKONTO = '49111' AND dbo.GKSTAVKA.GKGODIDGODINE = @GODINA
GROUP BY idorgjed,idkonto,IDMJESTOTROSKA

open cur 
fetch next from cur into @konto, @oj, @mt,@iznos 
while @@fetch_status &lt;&gt; -1 
begin 
INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          @MT , -- IDMJESTOTROSKA - int
          @OJ , -- IDORGJED - int
          49111 , -- IDKONTO - nvarchar(14)
          'Zaključak 49' , -- OPIS - nvarchar(150)
          0 , -- duguje - money
			@iznos , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          'ZAKLJ-49' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
          
          
          INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          @MT , -- IDMJESTOTROSKA - int
          @OJ , -- IDORGJED - int
          92121 , -- IDKONTO - nvarchar(14)
          'Rezultat 92121' , -- OPIS - nvarchar(150)
          @iznos , -- duguje - money
		  0 , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          'REZ-92' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime

fetch next from cur into @konto, @oj, @mt,@iznos 
end 
close cur 
deallocate cur 


--59111 na 92131


--DECLARE @oj INT
--DECLARE @mt INT
--DECLARE @iznos money
--DECLARE @konto VARCHAR(15)

declare cur cursor fast_forward for 
SELECT idkonto,idorgjed,idmjestotroska,SUM(duguje) 
FROM gkstavka WHERE  IDKONTO = '59111'  AND dbo.GKSTAVKA.GKGODIDGODINE = @GODINA
GROUP BY idorgjed,idkonto,IDMJESTOTROSKA

open cur 
fetch next from cur into @konto, @oj, @mt,@iznos 
while @@fetch_status &lt;&gt; -1 
begin 
INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          @MT , -- IDMJESTOTROSKA - int
          @OJ , -- IDORGJED - int
          39111 , -- IDKONTO - nvarchar(14)
          'Zaključak 59' , -- OPIS - nvarchar(150)
          0 , -- duguje - money
			@iznos , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          'ZAKLJ-59' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
          
          
          INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          @MT , -- IDMJESTOTROSKA - int
          @OJ , -- IDORGJED - int
          92131 , -- IDKONTO - nvarchar(14)
          'Rezultat 92131' , -- OPIS - nvarchar(150)
          @iznos , -- duguje - money
		  0 , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          'REZ-92131' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime

fetch next from cur into @konto, @oj, @mt,@iznos 
end 
close cur 
deallocate cur 


--69111 na 92111



--DECLARE @oj INT
--DECLARE @mt INT
--DECLARE @iznos money
--DECLARE @konto VARCHAR(15)

declare cur cursor fast_forward for 
SELECT idkonto,idorgjed,idmjestotroska,SUM(potrazuje) 
FROM gkstavka WHERE  IDKONTO = '69111' AND dbo.GKSTAVKA.GKGODIDGODINE = @GODINA
GROUP BY idorgjed,idkonto,IDMJESTOTROSKA

open cur 
fetch next from cur into @konto, @oj, @mt,@iznos 
while @@fetch_status &lt;&gt; -1 
begin 
INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          @MT , -- IDMJESTOTROSKA - int
          @OJ , -- IDORGJED - int
          69111 , -- IDKONTO - nvarchar(14)
          'Zaključak 69' , -- OPIS - nvarchar(150)
          @iznos , -- duguje - money
			0 , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          'ZAKLJ-69' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
          
          
          INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          @MT , -- IDMJESTOTROSKA - int
          @OJ , -- IDORGJED - int
          92111 , -- IDKONTO - nvarchar(14)
          'Rezultat 92111' , -- OPIS - nvarchar(150)
          0 , -- duguje - money
		  @iznos , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          'REZ-92111' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime

fetch next from cur into @konto, @oj, @mt,@iznos 
end 
close cur 
deallocate cur 



--79111 na 92121



--DECLARE @oj INT
--DECLARE @mt INT
--DECLARE @iznos money
--DECLARE @konto VARCHAR(15)

declare cur cursor fast_forward for 
SELECT idkonto,idorgjed,idmjestotroska,SUM(potrazuje) 
FROM gkstavka WHERE  IDKONTO = '79111' AND dbo.GKSTAVKA.GKGODIDGODINE = @GODINA
GROUP BY idorgjed,idkonto,IDMJESTOTROSKA

open cur 
fetch next from cur into @konto, @oj, @mt,@iznos 
while @@fetch_status &lt;&gt; -1 
begin 
INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          @MT , -- IDMJESTOTROSKA - int
          @OJ , -- IDORGJED - int
          79111 , -- IDKONTO - nvarchar(14)
          'Zaključak 79' , -- OPIS - nvarchar(150)
          @iznos , -- duguje - money
			0 , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          'ZAKLJ-79' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
          
          
          INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          @MT , -- IDMJESTOTROSKA - int
          @OJ , -- IDORGJED - int
          92121 , -- IDKONTO - nvarchar(14)
          'Rezultat 92121' , -- OPIS - nvarchar(150)
          0 , -- duguje - money
		  @iznos , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          'REZ-92121' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime

fetch next from cur into @konto, @oj, @mt,@iznos 
end 
close cur 
deallocate cur 


--89111 na 92131


--DECLARE @oj INT
--DECLARE @mt INT
--DECLARE @iznos money
--DECLARE @konto VARCHAR(15)

declare cur cursor fast_forward for 
SELECT idkonto,idorgjed,idmjestotroska,SUM(potrazuje) 
FROM gkstavka WHERE  IDKONTO = '89111'  AND dbo.GKSTAVKA.GKGODIDGODINE = @GODINA
GROUP BY idorgjed,idkonto,IDMJESTOTROSKA

open cur 
fetch next from cur into @konto, @oj, @mt,@iznos 
while @@fetch_status &lt;&gt; -1 
begin 
INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          @MT , -- IDMJESTOTROSKA - int
          @OJ , -- IDORGJED - int
          89111 , -- IDKONTO - nvarchar(14)
          'Zaključak 89' , -- OPIS - nvarchar(150)
          @iznos , -- duguje - money
			0 , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          'ZAKLJ-89' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
          
          
          INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          @MT , -- IDMJESTOTROSKA - int
          @OJ , -- IDORGJED - int
          92131 , -- IDKONTO - nvarchar(14)
          'Rezultat 92131' , -- OPIS - nvarchar(150)
          0 , -- duguje - money
		  @iznos , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          'REZ-92131' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime

fetch next from cur into @konto, @oj, @mt,@iznos 
end 
close cur 
deallocate cur 


-- UTVRĐIVANJE REZULTATA


--DECLARE @oj INT
--DECLARE @mt INT
--DECLARE @iznos money
--DECLARE @konto VARCHAR(15)
SELECT TOP 1 @MT =  IDMJESTOTROSKA FROM MJESTOTROSKA 


declare cur cursor fast_forward for 
SELECT idkonto,idorgjed ,SUM(duguje) - SUM(potrazuje) 
FROM gkstavka WHERE  (IDKONTO = '92111' OR idkonto = '92121' OR idkonto = '92131') AND (dbo.GKSTAVKA.GKGODIDGODINE = @GODINA)
GROUP BY idorgjed,idkonto
HAVING SUM(duguje) - SUM(potrazuje) &lt;&gt; 0
open cur 
fetch next from cur into @konto, @oj, @iznos 
while @@fetch_status &lt;&gt; -1 
begin 


 ----  Potrazna veca od dugovne strane
 if @konto = '92111' AND @iznos &lt; 0  
 BEGIN
 INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          @mt , -- IDMJESTOTROSKA - int
          @oj , -- IDORGJED - int
          92111 , -- IDKONTO - nvarchar(14)
          'Utvrđivanje viškova i manjkova' , -- OPIS - nvarchar(150)
          ABS(@iznos) , -- duguje - money
          0 , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          '' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
          
INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          @mt , -- IDMJESTOTROSKA - int
          @oj , -- IDORGJED - int
          92211 , -- IDKONTO - nvarchar(14)
          'Utvrđivanje viškova i manjkova' , -- OPIS - nvarchar(150)
          0 , -- duguje - money
          ABS(@iznos) , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          '' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
END
 ----  Dugovna  veca od potrazne
 if @konto = '92111' AND @iznos &gt; 0  
 BEGIN
 INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          @mt , -- IDMJESTOTROSKA - int
          @oj , -- IDORGJED - int
          92111 , -- IDKONTO - nvarchar(14)
          'Utvrđivanje viškova i manjkova' , -- OPIS - nvarchar(150)
          0 , -- duguje - money
          ABS(@iznos) , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          '' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
          
INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          @mt , -- IDMJESTOTROSKA - int
          @oj , -- IDORGJED - int
          92221 , -- IDKONTO - nvarchar(14)
          'Utvrđivanje viškova i manjkova' , -- OPIS - nvarchar(150)
          ABS(@iznos) , -- duguje - money
          0 , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          '' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
END



if @konto = '92121' AND @iznos &lt; 0  
 BEGIN
 INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          @mt , -- IDMJESTOTROSKA - int
          @oj , -- IDORGJED - int
          92121 , -- IDKONTO - nvarchar(14)
          'Utvrđivanje viškova i manjkova' , -- OPIS - nvarchar(150)
          ABS(@iznos) , -- duguje - money
          0 , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          '' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
          
INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          @mt , -- IDMJESTOTROSKA - int
          @oj , -- IDORGJED - int
          92212 , -- IDKONTO - nvarchar(14)
          'Utvrđivanje viškova i manjkova' , -- OPIS - nvarchar(150)
          0 , -- duguje - money
          ABS(@iznos) , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          '' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
END
 ----  Dugovna  veca od potrazne
 if @konto = '92121' AND @iznos &gt; 0  
 BEGIN
 INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          @mt , -- IDMJESTOTROSKA - int
          @oj , -- IDORGJED - int
          92121 , -- IDKONTO - nvarchar(14)
          'Utvrđivanje viškova i manjkova' , -- OPIS - nvarchar(150)
          0 , -- duguje - money
          ABS(@iznos) , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          '' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
          
INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          @mt , -- IDMJESTOTROSKA - int
          @oj , -- IDORGJED - int
          92222 , -- IDKONTO - nvarchar(14)
          'Utvrđivanje viškova i manjkova' , -- OPIS - nvarchar(150)
          ABS(@iznos) , -- duguje - money
          0 , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          '' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
END





if @konto = '92131' AND @iznos &lt; 0  
 BEGIN
 INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          @mt , -- IDMJESTOTROSKA - int
          @oj , -- IDORGJED - int
          92131 , -- IDKONTO - nvarchar(14)
          'Utvrđivanje viškova i manjkova' , -- OPIS - nvarchar(150)
          ABS(@iznos) , -- duguje - money
          0 , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          '' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
          
INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          @mt , -- IDMJESTOTROSKA - int
          @oj , -- IDORGJED - int
          92213 , -- IDKONTO - nvarchar(14)
          'Utvrđivanje viškova i manjkova' , -- OPIS - nvarchar(150)
          0 , -- duguje - money
          ABS(@iznos) , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          '' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
END
 ----  Dugovna  veca od potrazne
 if @konto = '92131' AND @iznos &gt; 0  
 BEGIN
 INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          @mt , -- IDMJESTOTROSKA - int
          @oj , -- IDORGJED - int
          92131 , -- IDKONTO - nvarchar(14)
          'Utvrđivanje viškova i manjkova' , -- OPIS - nvarchar(150)
          0 , -- duguje - money
          ABS(@iznos) , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          '' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
          
INSERT INTO dbo.GKSTAVKA
        ( DATUMDOKUMENTA ,
          BROJDOKUMENTA ,
          BROJSTAVKE ,
          IDDOKUMENT ,
          IDMJESTOTROSKA ,
          IDORGJED ,
          IDKONTO ,
          OPIS ,
          duguje ,
          POTRAZUJE ,
          DATUMPRIJAVE ,
          IDPARTNER ,
          ZATVORENIIZNOS ,
          statusgk ,
          ORIGINALNIDOKUMENT ,
          GKGODIDGODINE ,
          GKDATUMVALUTE
        )
        
SELECT         
 @DAT , -- DATUMDOKUMENTA - datetime
          @BROJDOK , -- BROJDOKUMENTA - int
          1 , -- BROJSTAVKE - int
          @IDDOKUMENT , -- IDDOKUMENT - int
          @mt , -- IDMJESTOTROSKA - int
          @oj , -- IDORGJED - int
          92223 , -- IDKONTO - nvarchar(14)
          'Utvrđivanje viškova i manjkova' , -- OPIS - nvarchar(150)
          ABS(@iznos) , -- duguje - money
          0 , -- POTRAZUJE - money
          @DAT, -- DATUMPRIJAVE - datetime
          NULL , -- IDPARTNER - int
          0 , -- ZATVORENIIZNOS - money
          0 , -- statusgk - bit
          '' , -- ORIGINALNIDOKUMENT - nvarchar(50)
          @GODINA , -- GKGODIDGODINE - smallint
          NULL  -- GKDATUMVALUTE - datetime
END

fetch next from cur into @konto, @oj, @iznos 
end 
close cur 
deallocate cur
CREATE TABLE #genbrojac (
		IDGKSTAVKA int NOT NULL,
		BROJAC int IDENTITY (1, 1) NOT NULL 
		)
			
		INSERT INTO #genbrojac (IDGKSTAVKA)
		SELECT IDGKSTAVKA FROM GKSTAVKA WHERE BROJDOKUMENTA = @brojdok AND IDDOKUMENT = @iddokument AND dbo.GKSTAVKA.GKGODIDGODINE = @GODINA
			
		UPDATE GKSTAVKA SET BROJSTAVKE = #genbrojac.BROJAC FROM GKSTAVKA INNER JOIN #genbrojac ON GKSTAVKA.IDGKSTAVKA = #genbrojac.IDGKSTAVKA
	

END
go

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_SALDIRANJE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_SALDIRANJE]
GO

CREATE PROCEDURE [dbo].[S_FIN_SALDIRANJE]
(
    @GODINA AS INT,
    @DAT AS DATETIME,
    @IDDOKUMENT INT
) 
AS
BEGIN

DECLARE @BROJDOK INT
SELECT @BROJDOK = MAX(BROJDOKUMENTA)+1 FROM GKSTAVKA WHERE IDDOKUMENT = @IDDOKUMENT AND dbo.GKSTAVKA.GKGODIDGODINE = @GODINA

			INSERT INTO GKSTAVKA
						(DATUMDOKUMENTA, BROJDOKUMENTA, BROJSTAVKE, IDDOKUMENT, IDMJESTOTROSKA, IDORGJED, IDKONTO, OPIS, duguje, POTRAZUJE, IDPARTNER, ZATVORENIIZNOS, statusgk,GKGODIDGODINE)

			SELECT  
						@DAT, 
						@BROJDOK,
						1,
						@IDDOKUMENT,
						IDMJESTOTROSKA, 
						IDORGJED, 
						IDKONTO, 
						'Saldiranje kartica' + '-' + cast(gkstavka.GKGODIDGODINE AS VARCHAR(4)) ,
						CASE WHEN SUM(duguje) - SUM(POTRAZUJE) &lt; 0 THEN - SUM(duguje) + SUM(POTRAZUJE) ELSE 0 END,  			
						CASE WHEN SUM(duguje) - SUM(POTRAZUJE) &gt; 0 THEN SUM(duguje) - SUM(POTRAZUJE) ELSE 0 END,  			
						NULL,
						0,
						0,
						gkstavka.GKGODIDGODINE
			FROM		dbo.GKSTAVKA
			WHERE		gkstavka.GKGODIDGODINE = @GODINA AND STATUSGK = 1 AND (IDPARTNER IS NULL)
			GROUP BY	IDKONTO, IDMJESTOTROSKA, IDORGJED,dbo.GKSTAVKA.GKGODIDGODINE
			
			HAVING		(SUM(duguje) - SUM(POTRAZUJE) &lt;&gt; 0) --AND (SUM(duguje) &gt;= 0) AND (SUM(POTRAZUJE) &gt;= 0)
			ORDER BY	IDKONTO
			
			
			
			--- SALDIRANJE SALDA KONTI
			INSERT INTO GKSTAVKA
						(DATUMDOKUMENTA, BROJDOKUMENTA, BROJSTAVKE, IDDOKUMENT, IDMJESTOTROSKA, IDORGJED, IDKONTO, OPIS, duguje, POTRAZUJE, IDPARTNER, ZATVORENIIZNOS, statusgk,ORIGINALNIDOKUMENT,GKDATUMVALUTE,GKGODIDGODINE)
			sELECT     
				@DAT, 
				@BROJDOK,
				1,
				@IDDOKUMENT,
				gkstavka.IDMJESTOTROSKA,
				gkstavka.IDORGJED,
				gkstavka.IDKONTO, 
				'Saldiranje kartica' + '-' + cast(gkstavka.GKGODIDGODINE AS VARCHAR(4)) ,
				CASE WHEN GKSTAVKA.POTRAZUJE &gt; 0 THEN ABS(DBO.GKSTAVKA.DUGUJE-DBO.GKSTAVKA.POTRAZUJE) - DBO.GKSTAVKA.ZATVORENIIZNOS WHEN GKSTAVKA.POTRAZUJE &lt; 0 THEN -ABS(DBO.GKSTAVKA.DUGUJE-DBO.GKSTAVKA.POTRAZUJE) - DBO.GKSTAVKA.ZATVORENIIZNOS ELSE 0 END,
				CASE WHEN GKSTAVKA.duguje &gt; 0 THEN ABS(DBO.GKSTAVKA.DUGUJE-DBO.GKSTAVKA.POTRAZUJE) - DBO.GKSTAVKA.ZATVORENIIZNOS WHEN GKSTAVKA.duguje &lt; 0 THEN -ABS(DBO.GKSTAVKA.DUGUJE-DBO.GKSTAVKA.POTRAZUJE) - DBO.GKSTAVKA.ZATVORENIIZNOS ELSE 0 END,
				gkstavka.IDPARTNER,
				0,
				0,
				LEFT(dokument.NAZIVDOKUMENT,44) + '-' + cast(gkstavka.GKGODIDGODINE AS VARCHAR(4)),		   
				CASE WHEN gkstavka.gkdatumvalute IS NULL THEN @DAT ELSE gkstavka.gkdatumvalute end,
				gkstavka.GKGODIDGODINE 
		FROM	dbo.GKSTAVKA INNER JOIN
				dbo.DOKUMENT ON dbo.GKSTAVKA.IDDOKUMENT = dbo.DOKUMENT.IDDOKUMENT INNER JOIN
				dbo.ORGJED ON dbo.GKSTAVKA.IDORGJED = dbo.ORGJED.IDORGJED INNER JOIN
				dbo.MJESTOTROSKA ON dbo.GKSTAVKA.IDMJESTOTROSKA = dbo.MJESTOTROSKA.IDMJESTOTROSKA INNER JOIN
				dbo.KONTO ON dbo.GKSTAVKA.IDKONTO = dbo.KONTO.IDKONTO INNER JOIN
				dbo.PARTNER ON dbo.GKSTAVKA.IDPARTNER = dbo.PARTNER.IDPARTNER
		
		WHERE	(gkstavka.GKGODIDGODINE = @GODINA) AND ABS(DBO.GKSTAVKA.DUGUJE-DBO.GKSTAVKA.POTRAZUJE) - DBO.GKSTAVKA.ZATVORENIIZNOS &gt; 0 AND NOT dbo.GKSTAVKA.IDPARTNER IS NULL AND STATUSGK = 1
		ORDER BY gkstavka.idkonto


		  		                       
CREATE TABLE #genbrojac (
		IDGKSTAVKA int NOT NULL,
		BROJAC int IDENTITY (1, 1) NOT NULL 
		)
			
		INSERT INTO #genbrojac (IDGKSTAVKA)
		SELECT IDGKSTAVKA FROM GKSTAVKA WHERE BROJDOKUMENTA = @brojdok AND IDDOKUMENT = @iddokument AND dbo.GKSTAVKA.GKGODIDGODINE = @GODINA
			
		UPDATE GKSTAVKA SET BROJSTAVKE = #genbrojac.BROJAC FROM GKSTAVKA INNER JOIN #genbrojac ON GKSTAVKA.IDGKSTAVKA = #genbrojac.IDGKSTAVKA
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_OS_STANJE_LOKACIJA_SVI_BROJEVI]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_OS_STANJE_LOKACIJA_SVI_BROJEVI]
GO

CREATE PROCEDURE [dbo].[S_OS_STANJE_LOKACIJA_SVI_BROJEVI]
AS
BEGIN
	SET NOCOUNT ON


SELECT osrazmjestaj.idlokacije AS idlokacije,dbo.OSRAZMJESTAJ.INVBROJ,SUM(kolicinaulaza) AS ulaz,SUM(kolicinarashoda) AS izlaz, SUM(kolicinaulaza) + SUM(kolicinarashoda) AS stanje,
lokacije.opislokacije AS opislokacije,OS.NAZIVOS
FROM osrazmjestaj INNER JOIN lokacije ON osrazmjestaj.idlokacije = lokacije.IDLOKACIJE INNER JOIN OS ON dbo.OS.INVBROJ = dbo.OSRAZMJESTAJ.INVBROJ
GROUP BY osrazmjestaj.idlokacije,dbo.OSRAZMJESTAJ.INVBROJ,lokacije.opislokacije,OS.NAZIVOS
--WHERE DBO.OSRAZMJESTAJ.IDLOKACIJE = COALESCE(@IDLOKACIJE,DBO.LOKACIJE.IDLOKACIJE)
HAVING SUM(kolicinaulaza) + SUM(kolicinarashoda) &gt; 0
ORDER BY IDLOKACIJE,INVBROJ
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_OS_STANJE_LOKACIJA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_OS_STANJE_LOKACIJA]
GO


CREATE PROCEDURE [dbo].[S_OS_STANJE_LOKACIJA]
(
	@IDLOKACIJE INT = NULL,
	@INVBROJ BIGINT = NULL
	
	)
AS
BEGIN
	SET NOCOUNT ON
	
	
SELECT osrazmjestaj.idlokacije AS idlokacije,invbroj,SUM(kolicinaulaza) AS ulaz,SUM(kolicinarashoda) AS izlaz, SUM(kolicinaulaza) + SUM(kolicinarashoda) AS stanje,
lokacije.opislokacije AS opislokacije
FROM osrazmjestaj INNER JOIN lokacije ON osrazmjestaj.idlokacije = lokacije.IDLOKACIJE
GROUP BY osrazmjestaj.idlokacije,invbroj,lokacije.opislokacije
--WHERE DBO.OSRAZMJESTAJ.IDLOKACIJE = COALESCE(@IDLOKACIJE,DBO.LOKACIJE.IDLOKACIJE)
HAVING SUM(kolicinaulaza) + SUM(kolicinarashoda) &gt; 0 AND DBO.OSRAZMJESTAJ.IDLOKACIJE = COALESCE(@IDLOKACIJE,DBO.OSRAZMJESTAJ.IDLOKACIJE) AND
DBO.OSRAZMJESTAJ.INVBROJ = COALESCE(@INVBROJ,DBO.OSRAZMJESTAJ.INVBROJ)

END
go

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_OS_STANJE_FINANCIJSKO]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_OS_STANJE_FINANCIJSKO]
GO

CREATE PROCEDURE [dbo].[S_OS_STANJE_FINANCIJSKO]
(
	@INVBROJ BIGINT 
	
	)
AS
BEGIN

SELECT p.invbroj AS invbroj,
SUM(p.ulaz + p.izlaz) AS kolicina,
SUM(p.nabavnaduguje - p.nabavnapotrazuje) AS nabavna,SUM(p.ispravakpotrazuje -p.ispravakduguje) AS ispravak,
SUM(p.nabavnaduguje - p.nabavnapotrazuje) - SUM(p.ispravakpotrazuje -p.ispravakduguje) AS sadasnja

FROM
(

SELECT invbroj,SUM(osduguje) AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje ,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (1,4,6)
GROUP BY INVBROJ
UNION ALL
SELECT invbroj,0 AS nabavnaduguje,SUM(ospotrazuje) AS nabavnapotrazuje,SUM(osduguje) AS ispravakduguje,0 AS ispravakpotrazuje,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (3,5,7)
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK
UNION all
SELECT invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,SUM(ospotrazuje) AS ispravakpotrazuje,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (2)
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK
UNION all
SELECT invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje,SUM(oskolicina) as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (1,6)
GROUP BY INVBROJ
UNION all
SELECT invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje,0 as ulaz,SUM(oskolicina) AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (3,7)
GROUP BY INVBROJ
) AS p
WHERE p.invbroj = @invbroj
GROUP BY p.invbroj
END
go

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_OS_BROJ_I_DATUM]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_OS_BROJ_I_DATUM]
GO
CREATE PROCEDURE [dbo].[S_OS_BROJ_I_DATUM]
AS
BEGIN
SELECT MAX(OSBROJDOKUMENTA)+1 AS brojdok,MAX(osdatumdok) AS zadnjidatum  FROM dbo.OSTEMELJNICA
WHERE osbrojdokumenta &gt; 0
END
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_OS_IZRADI_AMORTIZACIJU]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_OS_IZRADI_AMORTIZACIJU]
GO

CREATE PROCEDURE [dbo].[S_OS_IZRADI_AMORTIZACIJU]
(
@datod datetime,
@datdo datetime,
@BROJDOK BIGINT
)

AS
BEGIN

	
	

cREATE TABLE #TEMP
	(	
		invbroj bigint,
		stopa decimal(18,4),
		kol int,
		ispravak decimal(18,4),
		upo datetime,
		mjeseci int,
		zaobracun decimal(18,4)
	) 



insert into #TEMP
	(	
		
		invbroj,
		stopa,
		kol,
		ispravak,
		upo,
		mjeseci,
		zaobracun
	) 
		
		
	
		
	
SELECT p.invbroj,max(AMSKUPINE.AMSKUPINASTOPA),SUM(p.ulaz + p.izlaz) AS kolicina,SUM(p.ispravakpotrazuje) -SUM(p.ispravakduguje) AS ispravak,
dateadd(mm, 1, convert(datetime, convert(varchar(6), os.datumuporabe, 112) + '01')) AS datupo,
case when dateadd(mm, 1, convert(datetime, convert(varchar(6), os.DATUMUPORABE, 112) + '01')) &lt; @datod then DateDiff(Month, @datod, DateAdd(Day, 1,@datdo)) else DateDiff(Month, dateadd(mm, 1, convert(datetime, convert(varchar(6), os.datumuporabe, 112) + '01')), DateAdd(Day, 1,@datdo)) end as brojmjeseci,
SUM(p.nabavnaduguje) - SUM(p.nabavnapotrazuje) AS zaobracun 


FROM 
(

SELECT invbroj,SUM(osduguje) AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje ,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (1,4,6)
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK
UNION ALL
SELECT invbroj,0 AS nabavnaduguje,SUM(ospotrazuje) AS nabavnapotrazuje,SUM(osduguje) AS ispravakduguje,0 AS ispravakpotrazuje,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (3,5,7)
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK
UNION all
SELECT invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,SUM(ospotrazuje) AS ispravakpotrazuje,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (2)
GROUP BY ostemeljnica.OSDATUMDOK,INVBROJ
UNION all
SELECT invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje,SUM(oskolicina) as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (1,6)
GROUP BY ostemeljnica.OSDATUMDOK,INVBROJ
UNION all
SELECT invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje,0 as ulaz,SUM(oskolicina) AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (3,7)
GROUP BY ostemeljnica.OSDATUMDOK,INVBROJ
) AS p
INNER JOIN os ON p.invbroj = os.INVBROJ INNER JOIN amskupine ON os.IDAMSKUPINE = amskupine.idamskupine
WHERE      dateadd(mm, 1, convert(datetime, convert(varchar(6), os.datumuporabe, 112) + '01'))  &lt;= @datdo 
GROUP BY p.invbroj,os.datumuporabe




INSERT INTO [dbo].[OSTEMELJNICA]
           (OSOPIS,[INVBROJ]
           ,[IDOSDOKUMENT]
           ,[OSBROJDOKUMENTA]
           ,[OSDATUMDOK]
           ,[OSKOLICINA]
           ,[OSSTOPA]
           ,[OSOSNOVICA]
           ,[OSDUGUJE]
           ,[OSPOTRAZUJE]
           ,[RASHODLOKACIJEIDLOKACIJE])
           
           
SELECT 'Amortizacija za ' + CONVERT(NVARCHAR(14),@datod,104) + '-' + CONVERT(NVARCHAR(14),@datdo,104),
ppp.invbroj,vrdok,brojdok,dat,SUM(kol) AS kolicina,MAX(stopa) AS stopa,SUM(zaobracun) AS zaobracun,0 AS duguje,SUM(amortizacija) AS amortizacija,NULL AS rashod
FROM 
(           
select  #temp.invbroj AS invbroj,2 AS vrdok,@BROJDOK AS brojdok,@datdo AS dat,kol AS kol,#temp.stopa AS stopa,#temp.zaobracun AS zaobracun,0 AS duguje,
case when zaobracun &gt; ispravak then case when ispravak + (zaobracun * stopa / 100 * mjeseci / 12) &gt; zaobracun  then round(zaobracun  - ispravak,2) else round(zaobracun  * stopa /100 * mjeseci / 12,2) end  else 0 end as amortizacija,
NULL AS rashod
from #temp
) AS ppp
GROUP BY ppp.invbroj,ppp.vrdok,ppp.brojdok,ppp.dat
HAVING SUM(kol) &gt; 0 AND SUM(amortizacija) &gt; 0
ORDER BY ppp.invbroj
drop table #temp
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_OS_PREGLED_AMORTIZACIJE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_OS_PREGLED_AMORTIZACIJE]
GO


CREATE PROCEDURE [dbo].[S_OS_PREGLED_AMORTIZACIJE]
(

@BROJDOK BIGINT
)

AS
BEGIN

---- Ispis amortizacijske temeljnice join na stanje po inv.broju
---- ispisuje nabavnu,ispravak,ispravakprethodnih i sadasnje stanje, te kolicinu
--- 

DECLARE @datumamort DATETIME
DECLARE @prethodnagodina datetime
SET @datumamort = (SELECT TOP 1 ostemeljnica.OSDATUMDOK FROM ostemeljnica WHERE ostemeljnica.OSBROJDOKUMENTA = @BROJDOK)

---- Ovo sluzi da se izracuna stanje ispravka u prethodnim godinama
----- znaci amortizacija je na 31.12.2011. i prethodne su na dan 31.12.2010.

SET @prethodnagodina =  '12/31/' + CONVERT(VARCHAR(4),YEAR(@datumamort)-1)


SELECT AMSKUPINE.KTONABAVKEIDKONTO,AMSKUPINE.KTOISPRAVKAIDKONTO,AMSKUPINE.KTOIZVORAIDKONTO,
os.nazivos,osopis,ostemeljnica.invbroj,idosdokument,osbrojdokumenta,osdatumdok,oskolicina,osstopa,ososnovica,ospotrazuje AS ispravak,ispravakprethodnih,os.datumuporabe
FROM ostemeljnica
INNER JOIN (
SELECT konacno.invbroj,SUM(AMSKUPINASTOPA) AS stopa,SUM(kolicina) AS kolicina,SUM(nabavna) AS nabavna,
SUM(ispravak) AS ispravak,SUM(ispravakprethodnih) AS ispravakprethodnih,
SUM(ispravak) - SUM(ispravakprethodnih) AS ispravaktekuce,
os.DATUMUPORABE
FROM
(
SELECT 
p.invbroj,dbo.AMSKUPINE.AMSKUPINASTOPA,SUM(p.ulaz + p.izlaz) AS kolicina,
SUM(p.nabavnaduguje - p.nabavnapotrazuje) AS nabavna,SUM(p.ispravakpotrazuje -p.ispravakduguje) AS ispravak,0 AS ispravakprethodnih
FROM 
(
SELECT ostemeljnica.OSDATUMDOK,invbroj,SUM(osduguje) AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje ,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (1,4,6) 
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK
UNION ALL
SELECT ostemeljnica.OSDATUMDOK,invbroj,0 AS nabavnaduguje,SUM(ospotrazuje) AS nabavnapotrazuje,SUM(osduguje) AS ispravakduguje,0 AS ispravakpotrazuje,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (3,5,7) 
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK
UNION all
SELECT ostemeljnica.OSDATUMDOK,invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,SUM(ospotrazuje) AS ispravakpotrazuje,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (2) 
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK
UNION all
SELECT ostemeljnica.OSDATUMDOK,invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje,SUM(oskolicina) as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (1,6) 
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK
UNION all
SELECT ostemeljnica.OSDATUMDOK,invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje,0 as ulaz,SUM(oskolicina) AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (3,7) 
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK
) AS p
INNER JOIN os ON p.invbroj = os.INVBROJ INNER JOIN amskupine ON os.IDAMSKUPINE = amskupine.idamskupine
WHERE p.OSDATUMDOK &lt;= @datumamort 
GROUP BY p.invbroj,dbo.AMSKUPINE.AMSKUPINASTOPA

UNION ALL

SELECT p.invbroj,0 AS AMSKUPINASTOPA,0 AS kolicina,
0 AS nabavna,0 AS ispravak,SUM(p.ispravakpotrazuje -p.ispravakduguje) AS ispravakprethodnih
FROM 
(
SELECT ostemeljnica.OSDATUMDOK,invbroj,SUM(osduguje) AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje ,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (1,4,6) 
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK
UNION ALL
SELECT ostemeljnica.OSDATUMDOK,invbroj,0 AS nabavnaduguje,SUM(ospotrazuje) AS nabavnapotrazuje,SUM(osduguje) AS ispravakduguje,0 AS ispravakpotrazuje,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (3,5,7) 
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK
UNION all
SELECT ostemeljnica.OSDATUMDOK,invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,SUM(ospotrazuje) AS ispravakpotrazuje,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (2) 
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK
UNION all
SELECT ostemeljnica.OSDATUMDOK,invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje,SUM(oskolicina) as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (1,6) 
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK
UNION all
SELECT ostemeljnica.OSDATUMDOK,invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje,0 as ulaz,SUM(oskolicina) AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (3,7) 
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK
) AS p
INNER JOIN os ON p.invbroj = os.INVBROJ INNER JOIN amskupine ON os.IDAMSKUPINE = amskupine.idamskupine
WHERE p.OSDATUMDOK &lt;= @prethodnagodina
GROUP BY p.invbroj,dbo.AMSKUPINE.AMSKUPINASTOPA,AMSKUPINE.KTONABAVKEIDKONTO,AMSKUPINE.KTOISPRAVKAIDKONTO,AMSKUPINE.KTOIZVORAIDKONTO
) AS konacno
INNER JOIN os ON os.INVBROJ = konacno.invbroj
GROUP BY konacno.invbroj,os.DATUMUPORABE
--ORDER BY konacno.invbroj
) AS test
ON test.invbroj = ostemeljnica.invbroj INNER JOIN os ON test.invbroj = os.invbroj INNER JOIN dbo.AMSKUPINE ON OS.IDAMSKUPINE = AMSKUPINE.IDAMSKUPINE
WHERE ostemeljnica.OSBROJDOKUMENTA =@BROJDOK
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_OS_BILANCA_STANJA_NA_DAN]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_OS_BILANCA_STANJA_NA_DAN]
GO

CREATE PROCEDURE [dbo].[S_OS_BILANCA_STANJA_NA_DAN]
(
	@DATUM DATETIME,  -- DATUM STANJA ZA KOJE SE TRAŽI ISPIS
	@SORT VARCHAR(1), -- 1 PO NAZIVU --- 0 PO INVENTARNOM BROJU
	@vrsta INT --- 1 osnovna ---- 2 sitni
)
AS
BEGIN

 IF @SORT = '0'
begin

SELECT OS.IDOSVRSTA,AMSKUPINE.KTOISPRAVKAIDKONTO,AMSKUPINE.KTOIZVORAIDKONTO,AMSKUPINE.KTONABAVKEIDKONTO,OS.NAZIVOS,p.invbroj AS invbroj,
SUM(p.ulaz + p.izlaz) AS kolicina,
SUM(p.nabavnaduguje - p.nabavnapotrazuje) AS nabavna,SUM(p.ispravakpotrazuje -p.ispravakduguje) AS ispravak,
SUM(p.nabavnaduguje - p.nabavnapotrazuje) - SUM(p.ispravakpotrazuje -p.ispravakduguje) AS sadasnja

FROM
(

SELECT invbroj,SUM(osduguje) AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje ,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (1,4,6) AND OSDATUMDOK &lt;= @datum

GROUP BY INVBROJ
UNION ALL
SELECT invbroj,0 AS nabavnaduguje,SUM(ospotrazuje) AS nabavnapotrazuje,SUM(osduguje) AS ispravakduguje,0 AS ispravakpotrazuje,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (3,5,7) AND OSDATUMDOK &lt;= @datum
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK 
UNION all
SELECT invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,SUM(ospotrazuje) AS ispravakpotrazuje,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (2) AND OSDATUMDOK &lt;= @datum
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK 
UNION all
SELECT invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje,SUM(oskolicina) as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (1,6) AND OSDATUMDOK &lt;= @datum
GROUP BY INVBROJ
UNION all
SELECT invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje,0 as ulaz,SUM(oskolicina) AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (3,7) AND OSDATUMDOK &lt;= @datum
GROUP BY INVBROJ
) AS p
INNER JOIN os ON p.invbroj = os.INVBROJ INNER JOIN AMSKUPINE ON OS.IDAMSKUPINE = AMSKUPINE.IDAMSKUPINE
WHERE os.IDOSVRSTA = @vrsta
GROUP BY OS.IDOSVRSTA,p.invbroj,OS.NAZIVOS,AMSKUPINE.KTOISPRAVKAIDKONTO,AMSKUPINE.KTOIZVORAIDKONTO,AMSKUPINE.KTONABAVKEIDKONTO
ORDER BY p.INVBROJ
END

IF @SORT = '1'
begin

SELECT OS.IDOSVRSTA,AMSKUPINE.KTOISPRAVKAIDKONTO,AMSKUPINE.KTOIZVORAIDKONTO,AMSKUPINE.KTONABAVKEIDKONTO,OS.NAZIVOS,p.invbroj AS invbroj,
SUM(p.ulaz + p.izlaz) AS kolicina,
SUM(p.nabavnaduguje - p.nabavnapotrazuje) AS nabavna,SUM(p.ispravakpotrazuje -p.ispravakduguje) AS ispravak,
SUM(p.nabavnaduguje - p.nabavnapotrazuje) - SUM(p.ispravakpotrazuje -p.ispravakduguje) AS sadasnja

FROM
(

SELECT invbroj,SUM(osduguje) AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje ,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (1,4,6) AND OSDATUMDOK &lt;= @datum

GROUP BY INVBROJ
UNION ALL
SELECT invbroj,0 AS nabavnaduguje,SUM(ospotrazuje) AS nabavnapotrazuje,SUM(osduguje) AS ispravakduguje,0 AS ispravakpotrazuje,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (3,5,7) AND OSDATUMDOK &lt;= @datum
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK 
UNION all
SELECT invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,SUM(ospotrazuje) AS ispravakpotrazuje,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (2) AND OSDATUMDOK &lt;= @datum
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK 
UNION all
SELECT invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje,SUM(oskolicina) as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (1,6) AND OSDATUMDOK &lt;= @datum
GROUP BY INVBROJ
UNION all
SELECT invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje,0 as ulaz,SUM(oskolicina) AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (3,7) AND OSDATUMDOK &lt;= @datum
GROUP BY INVBROJ
) AS p
INNER JOIN os ON p.invbroj = os.INVBROJ INNER JOIN AMSKUPINE ON OS.IDAMSKUPINE = AMSKUPINE.IDAMSKUPINE
WHERE os.IDOSVRSTA = @vrsta
GROUP BY OS.IDOSVRSTA,p.invbroj,OS.NAZIVOS,AMSKUPINE.KTOISPRAVKAIDKONTO,AMSKUPINE.KTOIZVORAIDKONTO,AMSKUPINE.KTONABAVKEIDKONTO
ORDER BY OS.NAZIVOS
END
END
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_OS_POSTOJECI_DOKUMENTI]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_OS_POSTOJECI_DOKUMENTI]
GO


CREATE PROCEDURE [dbo].[S_OS_POSTOJECI_DOKUMENTI]
AS
BEGIN
SELECT IDOSDOKUMENT,OSDATUMDOK,OSBROJDOKUMENTA,OSOPIS FROM OSTEMELJNICA
WHERE OSBROJDOKUMENTA &lt;&gt; 0
GROUP BY IDOSDOKUMENT,OSDATUMDOK,OSBROJDOKUMENTA,OSOPIS
ORDER BY OSBROJDOKUMENTA  DESC
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_OS_STANJE_LOKACIJA_ISPIS_NALJEPNICA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_OS_STANJE_LOKACIJA_ISPIS_NALJEPNICA]
GO

CREATE PROCEDURE [dbo].[S_OS_STANJE_LOKACIJA_ISPIS_NALJEPNICA]
(
	@IDLOKACIJE INT = NULL
	
	)
AS
BEGIN
	SET NOCOUNT ON
	
	
SELECT osrazmjestaj.idlokacije AS idlokacije,osrazmjestaj.invbroj,SUM(kolicinaulaza) AS ulaz,SUM(kolicinarashoda) AS izlaz, SUM(kolicinaulaza) + SUM(kolicinarashoda) AS stanje,
lokacije.opislokacije AS opislokacije,os.nazivos
FROM osrazmjestaj INNER JOIN lokacije ON osrazmjestaj.idlokacije = lokacije.IDLOKACIJE
INNER JOIN os ON osrazmjestaj.invbroj = os.invbroj
GROUP BY osrazmjestaj.idlokacije,osrazmjestaj.invbroj,lokacije.opislokacije,os.nazivos
---WHERE DBO.OSRAZMJESTAJ.IDLOKACIJE = COALESCE(@IDLOKACIJE,DBO.LOKACIJE.IDLOKACIJE)
HAVING SUM(kolicinaulaza) + SUM(kolicinarashoda) &gt; 0 AND DBO.OSRAZMJESTAJ.IDLOKACIJE = COALESCE(@IDLOKACIJE,DBO.OSRAZMJESTAJ.IDLOKACIJE) 
END
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_RAD1M_DIO1]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_RAD1M_DIO1]
GO
CREATE PROCEDURE [dbo].[S_PLACA_RAD1M_DIO1]
(

@MJESECISPLATE varchar(2) = '03',
@GODINAISPLATE varchar(4) = '2011'

)
AS
BEGIN

SELECT SUM(brojradnika) AS brojradnikaUKUPNO,SUM(brojdoslih) AS brojdoslih, SUM(brojotislih) AS brojotislih,SUM(brojdoslihzena) AS brojdoslihzena,SUM(brojotislihzena) AS brojotislihzena,SUM(brojradnikaZENA) AS brojzena
FROM
(
SELECT  COUNT(DISTINCT zena)  + COUNT(DISTINCT muskarac) AS brojradnika,COUNT(DISTINCT zena)  AS brojradnikaZENA,0 AS brojdoslih,0 AS brojdoslihzena, 0 AS brojotislih, 0 as brojotislihzena FROM 
(
SELECT     TOP (100) PERCENT dbo.ELEMENT.IDOSNOVAOSIGURANJA, CASE WHEN RAD1VEZASPOL.IDSPOL = 2 THEN dbo.ObracunElementi.IDRADNIK ELSE NULL END AS zena,CASE WHEN RAD1VEZASPOL.IDSPOL = 1 THEN dbo.ObracunElementi.IDRADNIK ELSE NULL END AS muskarac
FROM         dbo.ObracunElementi INNER JOIN
                      dbo.ELEMENT ON dbo.ObracunElementi.IDELEMENT = dbo.ELEMENT.IDELEMENT INNER JOIN
                      dbo.OBRACUN ON dbo.ObracunElementi.IDOBRACUN = dbo.OBRACUN.IDOBRACUN
                     INNER JOIN radnik ON obracunelementi.idradnik = radnik.IDRADNIK inner JOIN 
                     spol ON radnik.idspol = spol.idspol INNER JOIN RAD1VEZASPOL ON SPOL.IDSPOL = RAD1VEZASPOL.IDSPOL
GROUP BY dbo.ELEMENT.IDOSNOVAOSIGURANJA, dbo.ObracunElementi.IDRADNIK, dbo.OBRACUN.GODINAOBRACUNA, dbo.OBRACUN.MJESECOBRACUNA,
RAD1VEZASPOL.IDSPOL,OBRACUN.MJESECISPLATE,obracun.godinaisplate

HAVING      (dbo.ELEMENT.IDOSNOVAOSIGURANJA &lt;&gt;  N'17') AND 
                      (dbo.OBRACUN.mjesecisplate = @MJESECISPLATE) AND (dbo.OBRACUN.GODINAisplate = @GODINAISPLATE)
                      
ORDER BY dbo.OBRACUN.GODINAISPLATE, dbo.OBRACUN.MJESECISPLATE
) AS p


UNION ALL


SELECT 0 AS brojradnika,0 AS BROJRADNIKAZENA,COUNT(DISTINCT idradnik)  AS brojdoslih,count(CASE WHEN RAD1VEZASPOL.RAD1SPOLID = 2 THEN idradnik ELSE null END) AS brojdoslihzena ,0 AS brojotislih,0 AS brojotislihzena FROM 
dbo.RADNIK inner JOIN 
                     spol ON radnik.idspol = spol.idspol INNER JOIN RAD1VEZASPOL ON SPOL.IDSPOL = RAD1VEZASPOL.IDSPOL
                     

--WHERE MONTH(radnik.DATUMZADNJEGZAPOSLENJAPROMJENEFONDASATI) = CAST(@MJESECISPLATE AS INT) AND year(radnik.DATUMZADNJEGZAPOSLENJAPROMJENEFONDASATI) = CAST(@GODINAISPLATE AS INT)
WHERE radnik.idradnik IN (SELECT IDRADNIK FROM ZAPOSLENI WHERE MONTH(DATUMZAPOSLENJA) = @MJESECISPLATE AND YEAR(DATUMZAPOSLENJA) = @GODINAISPLATE)



UNION ALL


SELECT 0 AS brojradnika,0 AS BROJRADNIKAZENA,0 AS  brojdoslih,0 AS brojdoslihzena,COUNT(DISTINCT idradnik)  AS brojotislih ,count(CASE WHEN RAD1VEZASPOL.RAD1SPOLID = 2 THEN idradnik ELSE null END) AS brojotislihzena FROM 
dbo.RADNIK inner JOIN 
                     spol ON radnik.idspol = spol.idspol INNER JOIN RAD1VEZASPOL ON SPOL.IDSPOL = RAD1VEZASPOL.IDSPOL
                     
--WHERE MONTH(radnik.DATUMPRESTANKARADNOGODNOSA) = CAST(@MJESECISPLATE AS INT) AND year(radnik.DATUMPRESTANKARADNOGODNOSA) = CAST(@GODINAISPLATE AS INT)
WHERE radnik.idradnik  IN (SELECT IDRADNIK FROM OTISLI WHERE MONTH(DATUMODLASKA) = @MJESECISPLATE AND YEAR(DATUMODLASKA) = @GODINAISPLATE)

) AS test
END
GO



IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_RAD1M_DIO2]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_RAD1M_DIO2]
GO
CREATE PROCEDURE [dbo].[S_PLACA_RAD1M_DIO2]
(

@MJESECISPLATE varchar(2) = '03',
@GODINAISPLATE varchar(4) = '2011'
)
AS
BEGIN


SELECT DATISP,VRSTA,SVRHA,ROUND(SUM(brojradnikanetopotpore),0) AS brojradnikanetopotpore,ROUND(SUM(brojradnikaneto),0) AS brojradnikaneto,ROUND(SUM(neto),0) AS neto,ROUND(SUM(bruto),0) AS bruto,SUM(satibruto) AS satibruto,ROUND(SUM(nneto),0) AS nneto,ROUND(SUM(nbruto),0) AS nbruto
FROM
(


SELECT DATISP,'O' AS VRSTA,SVRHA AS SVRHA,0 AS brojradnikanetopotpore ,SUM(brojradnikaneto) AS brojradnikaneto,SUM(NETOPLACAMANJEKRIZNI) AS neto,SUM(ukupnobruto) AS bruto,SUM(p.satibruto) AS satibruto,0 AS nneto,0 AS nbruto
FROM
(
SELECT     OBRACUN.DATUMISPLATE AS DATISP,OBRACUN.SVRHAOBRACUNA AS SVRHA,COUNT(DISTINCT obracunradnici.idradnik) AS brojradnikaneto,dbo.ObracunRadnici.IDOBRACUN, dbo.ObracunRadnici.IDIPIDENT, 
                      Dbo.OBRACUN.MJESECOBRACUNA, dbo.OBRACUN.GODINAOBRACUNA, dbo.OBRACUN.DATUMISPLATE, dbo.ObracunRadnici.IDRADNIK, 
                      ISNULL(SUM(obracun_bruto.iznosbruto), 0) AS UKUPNOBRUTO, ISNULL(dbo.VW_PLACA_OSNOVICE_MIO.OSNOVICADOPRINOS, 0) 
                      AS UKUPNOOSNOVICAZADOPRINOS, ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) AS UKUPNODOPRINOSI, 
                      ISNULL(SUM(dbo.ObracunRadnici.ISKORISTENOOO), 0) AS UKUPNOOO, ISNULL(SUM(obracun_olaksice.iznosolaksice), 0) AS UKUPNOOLAKSICE, 
                      ISNULL(SUM(obracun_olaksice.iznosporeznopriznateolaksice), 0) AS UKUPNOPOREZNOPRIZNATEOLAKSICE, ISNULL(SUM(obracun_bruto.iznosbruto), 
                      0) - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) - ISNULL(SUM(dbo.ObracunRadnici.ISKORISTENOOO), 0) 
                      - ISNULL(SUM(obracun_olaksice.iznosporeznopriznateolaksice), 0) AS POREZNAOSNOVICA, ISNULL(SUM(obracun_porezi.iznosporez), 0) 
                      AS UKUPNOPOREZ, ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) + ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) 
                      AS UKUPNOPRIREZ, ISNULL(SUM(obracun_porezi.iznosporez), 0) + ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) 
                      + ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) AS UKUPNOPOREZIPRIREZ, ISNULL(SUM(obracun_bruto.iznosbruto), 0) 
                      - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) - ISNULL(SUM(obracun_porezi.iznosporez), 0) 
                      - ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) - ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) AS NETOPLACA, 
                      ISNULL(SUM(obracun_bruto.iznosbruto), 0) - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) - ISNULL(SUM(obracun_porezi.iznosporez), 0) 
                      - ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) - ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) 
                      - ISNULL(SUM(obracun_krizni.porezkrizni), 0) AS NETOPLACAMANJEKRIZNI, ISNULL(SUM(obracun_netonaknade.iznosnetonaknade), 0) 
                      AS UKUPNONETONAKNADE, ISNULL(SUM(obracun_bruto.iznosbruto), 0) - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) 
                      - ISNULL(SUM(obracun_porezi.iznosporez), 0) - ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) 
                      - ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) + ISNULL(SUM(obracun_netonaknade.iznosnetonaknade), 0) 
                      - ISNULL(SUM(obracun_krizni.porezkrizni), 0) AS NETOPRIMANJA, ISNULL(SUM(obracun_obustave.iznosobustave), 0) 
                      + ISNULL(SUM(obracun_krediti.iznoskredita), 0) AS UKUPNOOBUSTAVE, ISNULL(SUM(obracun_bruto.iznosbruto), 0) 
                      - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) - ISNULL(SUM(obracun_olaksice.iznosolaksice), 0) - ISNULL(SUM(obracun_porezi.iznosporez), 0) 
                      - ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) - ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) 
                      - ISNULL(SUM(obracun_krizni.porezkrizni), 0) + ISNULL(SUM(obracun_netonaknade.iznosnetonaknade), 0) 
                      - ISNULL(SUM(obracun_obustave.iznosobustave), 0) - ISNULL(SUM(obracun_krediti.iznoskredita), 0) AS UKUPNOZAISPLATU, 
                      ISNULL(SUM(obracun_bruto.satiukupno), 0) AS SATIBRUTO, ISNULL(SUM(obracun_doprinosi_na.iznosdoprinos), 0) AS UKUPNODOPRINOSINA, 
                      ISNULL(SUM(obracun_krizni.porezkrizni), 0) AS porezkrizni, ISNULL(MAX(dbo.ObracunRadnici.faktoo), 0) AS FAKTOR
FROM         dbo.ObracunRadnici INNER JOIN
                      dbo.OBRACUN ON dbo.ObracunRadnici.IDOBRACUN = dbo.OBRACUN.IDOBRACUN LEFT OUTER JOIN
                      dbo.VW_PLACA_OSNOVICE_MIO ON dbo.ObracunRadnici.IDOBRACUN = dbo.VW_PLACA_OSNOVICE_MIO.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = dbo.VW_PLACA_OSNOVICE_MIO.IDRADNIK LEFT OUTER JOIN
                          (SELECT     dbo.ObracunElementi.IDOBRACUN, dbo.ObracunElementi.IDRADNIK, SUM(dbo.ObracunElementi.OBRIZNOS) AS iznosbruto, 
                                                   SUM(CASE WHEN element.zbrajasateufondsati = 1 THEN OBRSATI ELSE 0 END) AS satiukupno
                            FROM          dbo.ObracunElementi INNER JOIN
                                                   dbo.ELEMENT ON dbo.ObracunElementi.IDELEMENT = dbo.ELEMENT.IDELEMENT
                            WHERE      (dbo.ELEMENT.IDVRSTAELEMENTA = 2 AND dbo.ELEMENT.idosnovaosiguranja = 10)
                            GROUP BY dbo.ObracunElementi.IDOBRACUN, dbo.ObracunElementi.IDRADNIK) AS obracun_bruto ON 
                      dbo.ObracunRadnici.IDOBRACUN = obracun_bruto.IDOBRACUN AND dbo.ObracunRadnici.IDRADNIK = obracun_bruto.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, 0 AS osnovicadoprinos, SUM(OBRACUNATIDOPRINOS) AS iznosdoprinos
                            FROM          dbo.ObracunDoprinosi
                            WHERE      (IDVRSTADOPRINOS = 2)
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_doprinosi ON dbo.ObracunRadnici.IDOBRACUN = obracun_doprinosi.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_doprinosi.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, 0 AS osnovicadoprinos, SUM(OBRACUNATIDOPRINOS) AS iznosdoprinos
                            FROM          dbo.ObracunDoprinosi AS ObracunDoprinosi_1
                            WHERE      (IDVRSTADOPRINOS = 1)
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_doprinosi_na ON dbo.ObracunRadnici.IDOBRACUN = obracun_doprinosi_na.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_doprinosi_na.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(OBRACUNATIPOREZ) AS iznosporez
                            FROM          dbo.ObracunPorezi
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_porezi ON dbo.ObracunRadnici.IDOBRACUN = obracun_porezi.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_porezi.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(IZNOSOLAKSICE) AS iznosolaksice, SUM(IZNOSPOREZNOPRIZNATEOLAKSICE) 
                                                   AS iznosporeznopriznateolaksice
                            FROM          dbo.VW_PLACA_OLAKSICE_GRUPE
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_olaksice ON dbo.ObracunRadnici.IDOBRACUN = obracun_olaksice.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_olaksice.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(OBRIZNOS) AS iznosnetonaknade
                            FROM          dbo.ObracunElementi AS ObracunElementi_1
                            WHERE      (IDVRSTAELEMENTA = 1)
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_netonaknade ON dbo.ObracunRadnici.IDOBRACUN = obracun_netonaknade.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_netonaknade.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(OBRACUNATAOBUSTAVAUKUNAMA) AS iznosobustave
                            FROM          dbo.OBRACUNObustave
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_obustave ON dbo.ObracunRadnici.IDOBRACUN = obracun_obustave.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_obustave.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(OBRACUNATIKUNSKIIZNOS) AS iznoskredita
                            FROM          dbo.OBRACUNKrediti
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_krediti ON dbo.ObracunRadnici.IDOBRACUN = obracun_krediti.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_krediti.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(POREZKRIZNI) AS porezkrizni
                            FROM          dbo.OBRACUNOBRACUNLevel1ObracunKrizni
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_krizni ON dbo.ObracunRadnici.IDOBRACUN = obracun_krizni.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_krizni.IDRADNIK
WHERE dbo.OBRACUN.MJESECISPLATE = @MJESECISPLATE AND obracun.GODINAISPLATE = @GODINAISPLATE
GROUP BY dbo.ObracunRadnici.IDRADNIK, dbo.ObracunRadnici.IDOBRACUN, dbo.OBRACUN.MJESECOBRACUNA, dbo.OBRACUN.GODINAOBRACUNA, 
                       dbo.OBRACUN.DATUMISPLATE, dbo.ObracunRadnici.IDIPIDENT, 
                      dbo.VW_PLACA_OSNOVICE_MIO.OSNOVICADOPRINOS,OBRACUN.SVRHAOBRACUNA
                      having ISNULL(SUM(obracun_bruto.iznosbruto), 0) &gt; 0
             )  AS p
        GROUP BY SVRHA,DATISP
                   
			
UNION ALL
					

SELECT DATISP,'P' AS VRSTA,' ' AS SVRHA,ISNULL(SUM(brojradnikanetopotpore),0) AS brojradnikanetopotpore, 0 AS brojradnikaneto,0 AS neto,0 AS bruto,0 AS satibruto,ISNULL(SUM(pa.netoplacamanjekrizni),0) AS nneto,ISNULL(SUM(pa.ukupnobruto),0) AS nbruto


FROM
(
SELECT   OBRACUN.DATUMISPLATE AS DATISP,  ' ' AS SVRHA,COUNT(DISTINCT obracunradnici.idradnik) AS brojradnikanetopotpore,dbo.ObracunRadnici.IDOBRACUN, dbo.ObracunRadnici.IDIPIDENT, 
                      OBRACUN.MJESECOBRACUNA, dbo.OBRACUN.GODINAOBRACUNA, dbo.OBRACUN.DATUMISPLATE, dbo.ObracunRadnici.IDRADNIK, 
                      ISNULL(SUM(obracun_bruto.iznosbruto), 0) AS UKUPNOBRUTO, ISNULL(dbo.VW_PLACA_OSNOVICE_MIO.OSNOVICADOPRINOS, 0) 
                      AS UKUPNOOSNOVICAZADOPRINOS, ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) AS UKUPNODOPRINOSI, 
                      ISNULL(SUM(dbo.ObracunRadnici.ISKORISTENOOO), 0) AS UKUPNOOO, ISNULL(SUM(obracun_olaksice.iznosolaksice), 0) AS UKUPNOOLAKSICE, 
                      ISNULL(SUM(obracun_olaksice.iznosporeznopriznateolaksice), 0) AS UKUPNOPOREZNOPRIZNATEOLAKSICE, ISNULL(SUM(obracun_bruto.iznosbruto), 
                      0) - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) - ISNULL(SUM(dbo.ObracunRadnici.ISKORISTENOOO), 0) 
                      - ISNULL(SUM(obracun_olaksice.iznosporeznopriznateolaksice), 0) AS POREZNAOSNOVICA, ISNULL(SUM(obracun_porezi.iznosporez), 0) 
                      AS UKUPNOPOREZ, ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) + ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) 
                      AS UKUPNOPRIREZ, ISNULL(SUM(obracun_porezi.iznosporez), 0) + ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) 
                      + ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) AS UKUPNOPOREZIPRIREZ, ISNULL(SUM(obracun_bruto.iznosbruto), 0) 
                      - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) - ISNULL(SUM(obracun_porezi.iznosporez), 0) 
                      - ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) - ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) AS NETOPLACA, 
                      ISNULL(SUM(obracun_bruto.iznosbruto), 0) - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) - ISNULL(SUM(obracun_porezi.iznosporez), 0) 
                      - ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) - ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) 
                      - ISNULL(SUM(obracun_krizni.porezkrizni), 0) AS NETOPLACAMANJEKRIZNI, ISNULL(SUM(obracun_netonaknade.iznosnetonaknade), 0) 
                      AS UKUPNONETONAKNADE, ISNULL(SUM(obracun_bruto.iznosbruto), 0) - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) 
                      - ISNULL(SUM(obracun_porezi.iznosporez), 0) - ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) 
                      - ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) + ISNULL(SUM(obracun_netonaknade.iznosnetonaknade), 0) 
                      - ISNULL(SUM(obracun_krizni.porezkrizni), 0) AS NETOPRIMANJA, ISNULL(SUM(obracun_obustave.iznosobustave), 0) 
                      + ISNULL(SUM(obracun_krediti.iznoskredita), 0) AS UKUPNOOBUSTAVE, ISNULL(SUM(obracun_bruto.iznosbruto), 0) 
                      - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) - ISNULL(SUM(obracun_olaksice.iznosolaksice), 0) - ISNULL(SUM(obracun_porezi.iznosporez), 0) 
                      - ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) - ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) 
                      - ISNULL(SUM(obracun_krizni.porezkrizni), 0) + ISNULL(SUM(obracun_netonaknade.iznosnetonaknade), 0) 
                      - ISNULL(SUM(obracun_obustave.iznosobustave), 0) - ISNULL(SUM(obracun_krediti.iznoskredita), 0) AS UKUPNOZAISPLATU, 
                      ISNULL(SUM(obracun_bruto.satiukupno), 0) AS SATIBRUTO, ISNULL(SUM(obracun_doprinosi_na.iznosdoprinos), 0) AS UKUPNODOPRINOSINA, 
                      ISNULL(SUM(obracun_krizni.porezkrizni), 0) AS porezkrizni, ISNULL(MAX(dbo.ObracunRadnici.faktoo), 0) AS FAKTOR
FROM         dbo.ObracunRadnici INNER JOIN
                      dbo.OBRACUN ON dbo.ObracunRadnici.IDOBRACUN = dbo.OBRACUN.IDOBRACUN LEFT OUTER JOIN
                      dbo.VW_PLACA_OSNOVICE_MIO ON dbo.ObracunRadnici.IDOBRACUN = dbo.VW_PLACA_OSNOVICE_MIO.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = dbo.VW_PLACA_OSNOVICE_MIO.IDRADNIK LEFT OUTER JOIN
                          (SELECT     dbo.ObracunElementi.IDOBRACUN, dbo.ObracunElementi.IDRADNIK, SUM(dbo.ObracunElementi.OBRIZNOS) AS iznosbruto, 
                                                   SUM(CASE WHEN element.zbrajasateufondsati = 1 THEN OBRSATI ELSE 0 END) AS satiukupno
                            FROM          dbo.ObracunElementi INNER JOIN
                                                   dbo.ELEMENT ON dbo.ObracunElementi.IDELEMENT = dbo.ELEMENT.IDELEMENT
                            WHERE      (dbo.ELEMENT.IDVRSTAELEMENTA = 2 AND dbo.ELEMENT.idosnovaosiguranja = 17)
                            GROUP BY dbo.ObracunElementi.IDOBRACUN, dbo.ObracunElementi.IDRADNIK) AS obracun_bruto ON 
                      dbo.ObracunRadnici.IDOBRACUN = obracun_bruto.IDOBRACUN AND dbo.ObracunRadnici.IDRADNIK = obracun_bruto.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, 0 AS osnovicadoprinos, SUM(OBRACUNATIDOPRINOS) AS iznosdoprinos
                            FROM          dbo.ObracunDoprinosi
                            WHERE      (IDVRSTADOPRINOS = 2)
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_doprinosi ON dbo.ObracunRadnici.IDOBRACUN = obracun_doprinosi.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_doprinosi.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, 0 AS osnovicadoprinos, SUM(OBRACUNATIDOPRINOS) AS iznosdoprinos
                            FROM          dbo.ObracunDoprinosi AS ObracunDoprinosi_1
                            WHERE      (IDVRSTADOPRINOS = 1)
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_doprinosi_na ON dbo.ObracunRadnici.IDOBRACUN = obracun_doprinosi_na.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_doprinosi_na.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(OBRACUNATIPOREZ) AS iznosporez
                            FROM          dbo.ObracunPorezi
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_porezi ON dbo.ObracunRadnici.IDOBRACUN = obracun_porezi.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_porezi.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(IZNOSOLAKSICE) AS iznosolaksice, SUM(IZNOSPOREZNOPRIZNATEOLAKSICE) 
                                                   AS iznosporeznopriznateolaksice
                            FROM          dbo.VW_PLACA_OLAKSICE_GRUPE
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_olaksice ON dbo.ObracunRadnici.IDOBRACUN = obracun_olaksice.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_olaksice.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(OBRIZNOS) AS iznosnetonaknade
                            FROM          dbo.ObracunElementi AS ObracunElementi_1
                            WHERE      (IDVRSTAELEMENTA = 1)
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_netonaknade ON dbo.ObracunRadnici.IDOBRACUN = obracun_netonaknade.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_netonaknade.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(OBRACUNATAOBUSTAVAUKUNAMA) AS iznosobustave
                            FROM          dbo.OBRACUNObustave
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_obustave ON dbo.ObracunRadnici.IDOBRACUN = obracun_obustave.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_obustave.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(OBRACUNATIKUNSKIIZNOS) AS iznoskredita
                            FROM          dbo.OBRACUNKrediti
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_krediti ON dbo.ObracunRadnici.IDOBRACUN = obracun_krediti.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_krediti.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(POREZKRIZNI) AS porezkrizni
                            FROM          dbo.OBRACUNOBRACUNLevel1ObracunKrizni
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_krizni ON dbo.ObracunRadnici.IDOBRACUN = obracun_krizni.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_krizni.IDRADNIK
WHERE dbo.OBRACUN.MJESECISPLATE = @MJESECISPLATE AND obracun.GODINAISPLATE = @GODINAISPLATE
GROUP BY dbo.ObracunRadnici.IDRADNIK, dbo.ObracunRadnici.IDOBRACUN, dbo.OBRACUN.MJESECOBRACUNA, dbo.OBRACUN.GODINAOBRACUNA, 
                      dbo.OBRACUN.DATUMISPLATE, dbo.ObracunRadnici.IDIPIDENT, 
                      dbo.VW_PLACA_OSNOVICE_MIO.OSNOVICADOPRINOS
                      having ISNULL(SUM(obracun_bruto.iznosbruto), 0) &gt; 0
) AS pa
GROUP BY DATISP
) AS Kraj
GROUP BY KRAJ.SVRHA,KRAJ.VRSTA,DATISP
END
go





IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_RAD1G_SATI]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_RAD1G_SATI]
GO


CREATE PROCEDURE [dbo].[S_PLACA_RAD1G_SATI]
(
@GODINAOBRACUNA varchar(4) = '2011'
)
AS
BEGIN

SELECT ISNULL(SUM(IZV),0) AS IZV,ISNULL(SUM(NEIZV),0) AS NEIZV,
ISNULL(SUM(NEIZVIZVAN),0) AS NEIZVIZVAN,ISNULL(SUM(NEPLACENI),0) AS NEPLACENI,ISNULL(SUM(PREKOVREMENI),0) AS PREKOVREMENI,
ISNULL(SUM(STRAJK),0) AS STRAJK

 FROM
(
SELECT     dbo.ObracunElementi.IDRADNIK, 
SUM(CASE WHEN element.zbrajasateufondsati = 1 AND RAD1GELEMENTIVEZA.RAD1GELEMENTIID = 1 THEN OBRSATI ELSE 0 END) AS IZV,
SUM(CASE WHEN element.zbrajasateufondsati = 1 AND RAD1GELEMENTIVEZA.RAD1GELEMENTIID = 2 THEN OBRSATI ELSE 0 END) AS NEIZV,
SUM(CASE WHEN element.zbrajasateufondsati = 1 AND RAD1GELEMENTIVEZA.RAD1GELEMENTIID = 3 THEN OBRSATI ELSE 0 END) AS NEIZVIZVAN,
SUM(CASE WHEN element.zbrajasateufondsati = 1 AND RAD1GELEMENTIVEZA.RAD1GELEMENTIID = 4 THEN OBRSATI ELSE 0 END) AS NEPLACENI,
SUM(CASE WHEN element.zbrajasateufondsati = 1 AND RAD1GELEMENTIVEZA.RAD1GELEMENTIID = 5 THEN OBRSATI ELSE 0 END) AS PREKOVREMENI,
SUM(CASE WHEN element.zbrajasateufondsati = 1 AND RAD1GELEMENTIVEZA.RAD1GELEMENTIID = 6 THEN OBRSATI ELSE 0 END) AS STRAJK
                        FROM          dbo.ObracunElementi INNER JOIN
                        dbo.ELEMENT ON dbo.ObracunElementi.IDELEMENT = dbo.ELEMENT.IDELEMENT
                             INNER JOIN RAD1GELEMENTIVEZA ON element.idelement = RAD1GELEMENTIVEZA.IDELEMENT 
                             INNER JOIN OBRACUN ON OBRACUNELEMENTI.IDOBRACUN = OBRACUN.IDOBRACUN
                           --WHERE      (dbo.ELEMENT.IDVRSTAELEMENTA = 2 AND dbo.ELEMENT.idosnovaosiguranja = 10) 
                           AND (dbo.OBRACUN.GODINAOBRACUNA = @GODINAOBRACUNA)
                           
                         GROUP BY  dbo.ObracunElementi.IDRADNIK
) AS P
END
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_RAD1G_IV]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_RAD1G_IV]
GO

CREATE PROCEDURE [dbo].[S_PLACA_RAD1G_IV]
(

@GODINAOBRACUNA varchar(4) = '2010'
)
AS
BEGIN
SELECT SUM(UKUPNOBRUTO) AS BRUTOPLACA,SUM(NETOPLACA) AS NETOPLACA,sprema,spol
FROM
(

SELECT 
SUM(NETOPLACAMANJEKRIZNI) AS NETOPLACA ,
SUM(UKUPNOBRUTO) AS UKUPNOBRUTO,
cASE p.IDSPOL 
WHEN 2 THEN 'Z'
WHEN 1 THEN 'M' END AS SPOL,

CASE P.RAD1IDSPREME
	
 WHEN  1 THEN  'VSS'
 WHEN  2 THEN  'VIS'
 WHEN  3 THEN  'SSS'
 WHEN  4 THEN  'NSS'
 WHEN  5 THEN  'VKV'
 WHEN  6 THEN  'KV'
 WHEN  7 THEN 'PKV'
 WHEN  8 THEN 'NKV'
ELSE 'NKV' END AS SPREMA,
idradnik
FROM
(
SELECT     RAD1SPREME.RAD1IDSPREME,RAD1VEZASPOL.IDSPOL, 
                       dbo.ObracunRadnici.IDRADNIK, 
                      ISNULL(SUM(obracun_bruto.iznosbruto), 0) AS UKUPNOBRUTO,  ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) AS UKUPNODOPRINOSI, 
                      ISNULL(SUM(dbo.ObracunRadnici.ISKORISTENOOO), 0) AS UKUPNOOO, ISNULL(SUM(obracun_olaksice.iznosolaksice), 0) AS UKUPNOOLAKSICE, 
                      ISNULL(SUM(obracun_olaksice.iznosporeznopriznateolaksice), 0) AS UKUPNOPOREZNOPRIZNATEOLAKSICE, ISNULL(SUM(obracun_bruto.iznosbruto), 
                      0) - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) - ISNULL(SUM(dbo.ObracunRadnici.ISKORISTENOOO), 0) 
                      - ISNULL(SUM(obracun_olaksice.iznosporeznopriznateolaksice), 0) AS POREZNAOSNOVICA, ISNULL(SUM(obracun_porezi.iznosporez), 0) 
                      AS UKUPNOPOREZ, ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) + ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) 
                      AS UKUPNOPRIREZ, ISNULL(SUM(obracun_porezi.iznosporez), 0) + ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) 
                      + ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) AS UKUPNOPOREZIPRIREZ, ISNULL(SUM(obracun_bruto.iznosbruto), 0) 
                      - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) - ISNULL(SUM(obracun_porezi.iznosporez), 0) 
                      - ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) - ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) AS NETOPLACA, 
                      ISNULL(SUM(obracun_bruto.iznosbruto), 0) - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) - ISNULL(SUM(obracun_porezi.iznosporez), 0) 
                      - ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) - ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) 
                      - ISNULL(SUM(obracun_krizni.porezkrizni), 0) AS NETOPLACAMANJEKRIZNI,  
                       ISNULL(SUM(obracun_doprinosi_na.iznosdoprinos), 0) AS UKUPNODOPRINOSINA, 
                      ISNULL(SUM(obracun_krizni.porezkrizni), 0) AS porezkrizni, ISNULL(MAX(dbo.ObracunRadnici.faktoo), 0) AS FAKTOR
FROM         dbo.ObracunRadnici INNER JOIN
						RADNIK ON dbo.ObracunRadnici.IDRADNIK = dbo.RADNIK.IDRADNIK 
						LEFT OUTER   JOIN  dbo.RAD1SPREMEVEZA ON RADNIK.TRENUTNASTRUCNASPREMAIDSTRUCNASPREMA = RAD1SPREMEVEZA.IDSTRUCNASPREMA
						LEFT OUTER   JOIN RAD1SPREME ON dbo.RAD1SPREMEVEZA.RAD1IDSPREME = RAD1SPREME.RAD1IDSPREME INNER JOIN 
						
                     spol ON radnik.idspol = spol.idspol INNER JOIN RAD1VEZASPOL ON SPOL.IDSPOL = RAD1VEZASPOL.IDSPOL
                     INNER JOIN 
                      dbo.OBRACUN ON dbo.ObracunRadnici.IDOBRACUN = dbo.OBRACUN.IDOBRACUN  INNER join
                          (SELECT     dbo.ObracunElementi.IDOBRACUN, dbo.ObracunElementi.IDRADNIK, SUM(dbo.ObracunElementi.OBRIZNOS) AS iznosbruto
                                                   
                            FROM          dbo.ObracunElementi INNER JOIN
                                                   dbo.ELEMENT ON dbo.ObracunElementi.IDELEMENT = dbo.ELEMENT.IDELEMENT
                            WHERE      (dbo.ELEMENT.IDVRSTAELEMENTA = 2 AND dbo.ELEMENT.idosnovaosiguranja = 10)
                            GROUP BY dbo.ObracunElementi.IDOBRACUN, dbo.ObracunElementi.IDRADNIK) AS obracun_bruto ON 
                      dbo.ObracunRadnici.IDOBRACUN = obracun_bruto.IDOBRACUN AND dbo.ObracunRadnici.IDRADNIK = obracun_bruto.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, 0 AS osnovicadoprinos, SUM(OBRACUNATIDOPRINOS) AS iznosdoprinos
                            FROM          dbo.ObracunDoprinosi
                            WHERE      (IDVRSTADOPRINOS = 2)
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_doprinosi ON dbo.ObracunRadnici.IDOBRACUN = obracun_doprinosi.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_doprinosi.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, 0 AS osnovicadoprinos, SUM(OBRACUNATIDOPRINOS) AS iznosdoprinos
                            FROM          dbo.ObracunDoprinosi AS ObracunDoprinosi_1
                            WHERE      (IDVRSTADOPRINOS = 1)
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_doprinosi_na ON dbo.ObracunRadnici.IDOBRACUN = obracun_doprinosi_na.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_doprinosi_na.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(OBRACUNATIPOREZ) AS iznosporez
                            FROM          dbo.ObracunPorezi
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_porezi ON dbo.ObracunRadnici.IDOBRACUN = obracun_porezi.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_porezi.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(IZNOSOLAKSICE) AS iznosolaksice, SUM(IZNOSPOREZNOPRIZNATEOLAKSICE) 
                                                   AS iznosporeznopriznateolaksice
                            FROM          dbo.VW_PLACA_OLAKSICE_GRUPE
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_olaksice ON dbo.ObracunRadnici.IDOBRACUN = obracun_olaksice.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_olaksice.IDRADNIK 
                      
                      
                       LEFT OUTER JOIN
                      
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(POREZKRIZNI) AS porezkrizni
                            FROM          dbo.OBRACUNOBRACUNLevel1ObracunKrizni
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_krizni ON dbo.ObracunRadnici.IDOBRACUN = obracun_krizni.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_krizni.IDRADNIK

WHERE OBRACUN.GODINAOBRACUNA = @godinaobracuna 


GROUP BY RAD1SPREME.RAD1IDSPREME,dbo.ObracunRadnici.IDRADNIK     --,  dbo.OBRACUN.GODINAOBRACUNA, 
                                 ,RAD1VEZASPOL.IDSPOL
                      ) AS p

                      
GROUP BY p.idspol,p.RAD1IDSPREME,p.idradnik
) AS TEST

WHERE 
test.IDRADNIK IN 
(
SELECT ObracunElementi.IDRADNIK FROM dbo.ObracunElementi 
INNER JOIN OBRACUN ON dbo.ObracunElementi.IDOBRACUN = dbo.OBRACUN.IDOBRACUN 
INNER JOIN dbo.ELEMENT ON dbo.ObracunElementi.IDELEMENT = dbo.ELEMENT.IDELEMENT 
WHERE OBRACUN.GODINAOBRACUNA = @godinaobracuna  AND element.IDVRSTAELEMENTA = 2 ---AND (dbo.ELEMENT.IDOSNOVAOSIGURANJA &lt;&gt; '17')
GROUP BY ObracunElementi.IDRADNIK
HAVING COUNT(DISTINCT MJESECOBRACUNA) &gt;= 12 AND SUM(obracunelementi.OBRIZNOS) &gt; 0
) 
GROUP BY TEST.SPREMA,TEST.SPOL,test.idradnik
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_RAD1G_III]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_RAD1G_III]
GO

CREATE PROCEDURE [dbo].[S_PLACA_RAD1G_III]
(

@MJESECISPLATE varchar(2) = '03',
@GODINAISPLATE varchar(4) = '2011'
)
AS
BEGIN

SELECT idradnik,
SUM(NETOPLACAMANJEKRIZNI) AS NETOPLACA ,
SUM(p.satibruto) AS satibruto
FROM
(
SELECT     OBRACUN.DATUMISPLATE AS DATISP,OBRACUN.SVRHAOBRACUNA AS SVRHA,COUNT(DISTINCT obracunradnici.idradnik) AS brojradnikaneto,dbo.ObracunRadnici.IDOBRACUN, dbo.ObracunRadnici.IDIPIDENT, dbo.OBRACUN.MJESECOBRACUNA, dbo.OBRACUN.GODINAOBRACUNA, 
                      dbo.OBRACUN.MJESECISPLATE, dbo.OBRACUN.GODINAISPLATE, dbo.OBRACUN.DATUMISPLATE, dbo.ObracunRadnici.IDRADNIK, 
                      ISNULL(SUM(obracun_bruto.iznosbruto), 0) AS UKUPNOBRUTO, ISNULL(dbo.VW_PLACA_OSNOVICE_MIO.OSNOVICADOPRINOS, 0) 
                      AS UKUPNOOSNOVICAZADOPRINOS, ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) AS UKUPNODOPRINOSI, 
                      ISNULL(SUM(dbo.ObracunRadnici.ISKORISTENOOO), 0) AS UKUPNOOO, ISNULL(SUM(obracun_olaksice.iznosolaksice), 0) AS UKUPNOOLAKSICE, 
                      ISNULL(SUM(obracun_olaksice.iznosporeznopriznateolaksice), 0) AS UKUPNOPOREZNOPRIZNATEOLAKSICE, ISNULL(SUM(obracun_bruto.iznosbruto), 
                      0) - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) - ISNULL(SUM(dbo.ObracunRadnici.ISKORISTENOOO), 0) 
                      - ISNULL(SUM(obracun_olaksice.iznosporeznopriznateolaksice), 0) AS POREZNAOSNOVICA, ISNULL(SUM(obracun_porezi.iznosporez), 0) 
                      AS UKUPNOPOREZ, ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) + ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) 
                      AS UKUPNOPRIREZ, ISNULL(SUM(obracun_porezi.iznosporez), 0) + ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) 
                      + ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) AS UKUPNOPOREZIPRIREZ, ISNULL(SUM(obracun_bruto.iznosbruto), 0) 
                      - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) - ISNULL(SUM(obracun_porezi.iznosporez), 0) 
                      - ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) - ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) AS NETOPLACA, 
                      ISNULL(SUM(obracun_bruto.iznosbruto), 0) - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) - ISNULL(SUM(obracun_porezi.iznosporez), 0) 
                      - ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) - ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) 
                      - ISNULL(SUM(obracun_krizni.porezkrizni), 0) AS NETOPLACAMANJEKRIZNI, ISNULL(SUM(obracun_netonaknade.iznosnetonaknade), 0) 
                      AS UKUPNONETONAKNADE, ISNULL(SUM(obracun_bruto.iznosbruto), 0) - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) 
                      - ISNULL(SUM(obracun_porezi.iznosporez), 0) - ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) 
                      - ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) + ISNULL(SUM(obracun_netonaknade.iznosnetonaknade), 0) 
                      - ISNULL(SUM(obracun_krizni.porezkrizni), 0) AS NETOPRIMANJA, ISNULL(SUM(obracun_obustave.iznosobustave), 0) 
                      + ISNULL(SUM(obracun_krediti.iznoskredita), 0) AS UKUPNOOBUSTAVE, ISNULL(SUM(obracun_bruto.iznosbruto), 0) 
                      - ISNULL(SUM(obracun_doprinosi.iznosdoprinos), 0) - ISNULL(SUM(obracun_olaksice.iznosolaksice), 0) - ISNULL(SUM(obracun_porezi.iznosporez), 0) 
                      - ISNULL(SUM(dbo.ObracunRadnici.OBRACUNATIPRIREZ), 0) - ISNULL(SUM(dbo.ObracunRadnici.KOREKCIJAPRIREZA), 0) 
                      - ISNULL(SUM(obracun_krizni.porezkrizni), 0) + ISNULL(SUM(obracun_netonaknade.iznosnetonaknade), 0) 
                      - ISNULL(SUM(obracun_obustave.iznosobustave), 0) - ISNULL(SUM(obracun_krediti.iznoskredita), 0) AS UKUPNOZAISPLATU, 
                      ISNULL(SUM(obracun_bruto.satiukupno), 0) AS SATIBRUTO, ISNULL(SUM(obracun_doprinosi_na.iznosdoprinos), 0) AS UKUPNODOPRINOSINA, 
                      ISNULL(SUM(obracun_krizni.porezkrizni), 0) AS porezkrizni, ISNULL(MAX(dbo.ObracunRadnici.faktoo), 0) AS FAKTOR
FROM         dbo.ObracunRadnici INNER JOIN
                      dbo.OBRACUN ON dbo.ObracunRadnici.IDOBRACUN = dbo.OBRACUN.IDOBRACUN LEFT OUTER JOIN
                      dbo.VW_PLACA_OSNOVICE_MIO ON dbo.ObracunRadnici.IDOBRACUN = dbo.VW_PLACA_OSNOVICE_MIO.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = dbo.VW_PLACA_OSNOVICE_MIO.IDRADNIK LEFT OUTER JOIN
                          (SELECT     dbo.ObracunElementi.IDOBRACUN, dbo.ObracunElementi.IDRADNIK, SUM(dbo.ObracunElementi.OBRIZNOS) AS iznosbruto, 
                                                   SUM(CASE WHEN element.zbrajasateufondsati = 1 THEN OBRSATI ELSE 0 END) AS satiukupno
                            FROM          dbo.ObracunElementi INNER JOIN
                                                   dbo.ELEMENT ON dbo.ObracunElementi.IDELEMENT = dbo.ELEMENT.IDELEMENT
                            WHERE      (dbo.ELEMENT.IDVRSTAELEMENTA = 2 AND dbo.ELEMENT.idosnovaosiguranja = 10)
                            GROUP BY dbo.ObracunElementi.IDOBRACUN, dbo.ObracunElementi.IDRADNIK) AS obracun_bruto ON 
                      dbo.ObracunRadnici.IDOBRACUN = obracun_bruto.IDOBRACUN AND dbo.ObracunRadnici.IDRADNIK = obracun_bruto.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, 0 AS osnovicadoprinos, SUM(OBRACUNATIDOPRINOS) AS iznosdoprinos
                            FROM          dbo.ObracunDoprinosi
                            WHERE      (IDVRSTADOPRINOS = 2)
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_doprinosi ON dbo.ObracunRadnici.IDOBRACUN = obracun_doprinosi.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_doprinosi.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, 0 AS osnovicadoprinos, SUM(OBRACUNATIDOPRINOS) AS iznosdoprinos
                            FROM          dbo.ObracunDoprinosi AS ObracunDoprinosi_1
                            WHERE      (IDVRSTADOPRINOS = 1)
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_doprinosi_na ON dbo.ObracunRadnici.IDOBRACUN = obracun_doprinosi_na.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_doprinosi_na.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(OBRACUNATIPOREZ) AS iznosporez
                            FROM          dbo.ObracunPorezi
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_porezi ON dbo.ObracunRadnici.IDOBRACUN = obracun_porezi.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_porezi.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(IZNOSOLAKSICE) AS iznosolaksice, SUM(IZNOSPOREZNOPRIZNATEOLAKSICE) 
                                                   AS iznosporeznopriznateolaksice
                            FROM          dbo.VW_PLACA_OLAKSICE_GRUPE
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_olaksice ON dbo.ObracunRadnici.IDOBRACUN = obracun_olaksice.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_olaksice.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(OBRIZNOS) AS iznosnetonaknade
                            FROM          dbo.ObracunElementi AS ObracunElementi_1
                            WHERE      (IDVRSTAELEMENTA = 1)
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_netonaknade ON dbo.ObracunRadnici.IDOBRACUN = obracun_netonaknade.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_netonaknade.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(OBRACUNATAOBUSTAVAUKUNAMA) AS iznosobustave
                            FROM          dbo.OBRACUNObustave
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_obustave ON dbo.ObracunRadnici.IDOBRACUN = obracun_obustave.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_obustave.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(OBRACUNATIKUNSKIIZNOS) AS iznoskredita
                            FROM          dbo.OBRACUNKrediti
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_krediti ON dbo.ObracunRadnici.IDOBRACUN = obracun_krediti.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_krediti.IDRADNIK LEFT OUTER JOIN
                          (SELECT     IDOBRACUN, IDRADNIK, SUM(POREZKRIZNI) AS porezkrizni
                            FROM          dbo.OBRACUNOBRACUNLevel1ObracunKrizni
                            GROUP BY IDOBRACUN, IDRADNIK) AS obracun_krizni ON dbo.ObracunRadnici.IDOBRACUN = obracun_krizni.IDOBRACUN AND 
                      dbo.ObracunRadnici.IDRADNIK = obracun_krizni.IDRADNIK
WHERE obracun.MJESECISPLATE = @MJESECISPLATE AND obracun.godinaisplate = @GODINAISPLATE
GROUP BY dbo.ObracunRadnici.IDRADNIK, dbo.ObracunRadnici.IDOBRACUN, dbo.OBRACUN.MJESECOBRACUNA, dbo.OBRACUN.GODINAOBRACUNA, 
                      dbo.OBRACUN.MJESECISPLATE, dbo.OBRACUN.GODINAISPLATE, dbo.OBRACUN.DATUMISPLATE, dbo.ObracunRadnici.IDIPIDENT, 
                      dbo.VW_PLACA_OSNOVICE_MIO.OSNOVICADOPRINOS,OBRACUN.SVRHAOBRACUNA
                      
                      having ISNULL(SUM(obracun_bruto.iznosbruto), 0) &gt;= 0 AND ISNULL(SUM(obracun_bruto.satiukupno), 0) &gt; 0) AS p
                      
                      
                      
GROUP BY p.idradnik
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_RAD1G]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_RAD1G]
GO

CREATE PROCEDURE [dbo].[S_PLACA_RAD1G]
(

@GODINAISPLATE varchar(4) = '2011',
@MJESECISPLATE VARCHAR(2) = '04',
@DATUMNAKOJIRACUNAMSTAROST DATETIME,
@MJESECODLASKA VARCHAR(2)
)
AS
BEGIN
SELECT SUM(PAAA.BROJRADNIKA) AS BROJRADNIKA,SUM(PAAA.BROJRADNIKAZENA) AS BROJRADNIKAZENA,PAAA.GODINA AS GODINASTAROSTI,PAAA.RADNOVRIJEME,PAAA.VRSTARADNOGODNOSA,PAAA.SPREMA
FROM
(

SELECT  COUNT(DISTINCT zena)  + COUNT(DISTINCT muskarac) AS brojradnika,COUNT(DISTINCT zena)  AS brojradnikaZENA,P.RADNOVRIJEME,
P.VRSTARADNOGODNOSA ,P.GODINA,P.SPREMA FROM

(
SELECT     TOP (100) PERCENT dbo.ELEMENT.IDOSNOVAOSIGURANJA, 
CASE WHEN RAD1VEZASPOL.IDSPOL = 2 THEN dbo.ObracunElementi.IDRADNIK ELSE NULL END AS zena,
CASE WHEN RAD1VEZASPOL.IDSPOL = 1 THEN dbo.ObracunElementi.IDRADNIK ELSE NULL END AS muskarac,
CASE WHEN radnik.TJEDNIFONDSATI = 40 THEN 'P' ELSE 'N'

			END AS RADNOVRIJEME,
CASE radnik.IDUGOVORORADU 
			WHEN 1 THEN 'NE'
			WHEN 2 THEN 'OD'
			WHEN 3 THEN 'PR'
			ELSE 'NE'
			END AS VRSTARADNOGODNOSA,
DATEDIFF(YEAR,RADNIK.DATUMRODJENJA,@DATUMNAKOJIRACUNAMSTAROST) AS GODINA,
CASE RAD1SPREMEVEZA.RAD1IDSPREME
 WHEN  1 THEN  'VSS'
 WHEN  2 THEN  'VIS'
 WHEN  3 THEN  'SSS'
 WHEN  4 THEN  'NSS'
 WHEN  5 THEN  'VKV'
 WHEN  6 THEN  'KV'
 WHEN  7 THEN 'PKV'
 WHEN  8 THEN 'NKV'
ELSE 'NKV' END AS SPREMA
FROM         dbo.ObracunElementi INNER JOIN
                      dbo.ELEMENT ON dbo.ObracunElementi.IDELEMENT = dbo.ELEMENT.IDELEMENT INNER JOIN
                      dbo.OBRACUN ON dbo.ObracunElementi.IDOBRACUN = dbo.OBRACUN.IDOBRACUN
                     INNER JOIN radnik ON obracunelementi.idradnik = radnik.IDRADNIK inner JOIN 
                     spol ON radnik.idspol = spol.idspol INNER JOIN RAD1VEZASPOL ON SPOL.IDSPOL = RAD1VEZASPOL.IDSPOL
                     LEFT OUTER JOIN  dbo.RAD1SPREMEVEZA ON RADNIK.TRENUTNASTRUCNASPREMAIDSTRUCNASPREMA = RAD1SPREMEVEZA.IDSTRUCNASPREMA
						LEFT OUTER  JOIN RAD1SPREME ON dbo.RAD1SPREMEVEZA.RAD1IDSPREME = RAD1SPREME.RAD1IDSPREME 
WHERE obracunelementi.idradnik NOT IN  
(SELECT IDRADNIK FROM OTISLI WHERE MONTH(DATUMODLASKA) = @MJESECODLASKA AND YEAR(DATUMODLASKA) = @GODINAISPLATE)
AND (dbo.ELEMENT.IDOSNOVAOSIGURANJA &lt;&gt;  N'17' OR dbo.ELEMENT.IDOSNOVAOSIGURANJA is null) AND 
                      (dbo.OBRACUN.MJESECISPLATE = @MJESECISPLATE) AND (dbo.OBRACUN.GODINAISPLATE = @GODINAISPLATE)
				

				
                      
GROUP BY RAD1SPREMEVEZA.RAD1IDSPREME,radnik.DATUMRODJENJA,radnik.TJEDNIFONDSATI,radnik.IDUGOVORORADU,radnik.idradnovrijeme,dbo.ELEMENT.IDOSNOVAOSIGURANJA, dbo.ObracunElementi.IDRADNIK, dbo.OBRACUN.GODINAISPLATE, dbo.OBRACUN.MJESECISPLATE,
RAD1VEZASPOL.IDSPOL

--HAVING      (dbo.ELEMENT.IDOSNOVAOSIGURANJA &lt;&gt;  N'17') AND 
  --                    (dbo.OBRACUN.MJESECISPLATE = @MJESECISPLATE) AND (dbo.OBRACUN.GODINAISPLATE = @GODINAISPLATE) 
                                        

ORDER BY dbo.OBRACUN.GODINAISPLATE, dbo.OBRACUN.MJESECISPLATE
) AS P
GROUP BY P.SPREMA,P.GODINA,P.RADNOVRIJEME,P.VRSTARADNOGODNOSA
) AS PAAA

GROUP BY PAAA.SPREMA,PAAA.GODINA,PAAA.RADNOVRIJEME,PAAA.VRSTARADNOGODNOSA
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_RAD1M_DIO3]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_RAD1M_DIO3]
GO

CREATE PROCEDURE [dbo].[S_PLACA_RAD1M_DIO3]
(
@MJESECISPLATE varchar(2) = '03',
@GODINAISPLATE varchar(4) = '2011'
)
AS
BEGIN

SELECT SUM(PREKOVREMENI) AS PREKOVREMENI,SUM(BOLOVANJEDO42DANA) AS BOLOVANJEDO42DANA,
SUM(GODISNJI) AS GODISNJI,SUM(BLAGDANINERADNI) AS BLAGDANINERADNI,SUM(PLACENIANEIZVRSENI) AS PLACENIANEIZVRSENI

 FROM
(
SELECT     dbo.ObracunElementi.IDRADNIK, 
SUM(CASE WHEN element.zbrajasateufondsati = 1 AND rad1melementiveza.rad1elementiid = 1 THEN OBRSATI ELSE 0 END) AS PREKOVREMENI,
SUM(CASE WHEN element.zbrajasateufondsati = 1 AND rad1melementiveza.rad1elementiid = 2 THEN OBRSATI ELSE 0 END) AS BOLOVANJEDO42DANA,
SUM(CASE WHEN element.zbrajasateufondsati = 1 AND rad1melementiveza.rad1elementiid = 3 THEN OBRSATI ELSE 0 END) AS GODISNJI,
SUM(CASE WHEN element.zbrajasateufondsati = 1 AND rad1melementiveza.rad1elementiid = 4 THEN OBRSATI ELSE 0 END) AS BLAGDANINERADNI,
SUM(CASE WHEN element.zbrajasateufondsati = 1 AND rad1melementiveza.rad1elementiid = 5 THEN OBRSATI ELSE 0 END) AS PLACENIANEIZVRSENI
                        FROM          dbo.ObracunElementi INNER JOIN
                        dbo.ELEMENT ON dbo.ObracunElementi.IDELEMENT = dbo.ELEMENT.IDELEMENT
                             INNER JOIN rad1melementiveza ON element.idelement = rad1melementiveza.idelement 
                             INNER JOIN OBRACUN ON OBRACUNELEMENTI.IDOBRACUN = OBRACUN.IDOBRACUN
                           WHERE      (dbo.ELEMENT.IDVRSTAELEMENTA = 2 AND dbo.ELEMENT.idosnovaosiguranja = 10) 
                           AND (dbo.OBRACUN.MJESECISPLATE = @MJESECISPLATE) AND (dbo.OBRACUN.GODINAISPLATE = @GODINAISPLATE)
                           
                         GROUP BY  dbo.ObracunElementi.IDRADNIK
) AS P
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_OS_BILANCA_STANJA_NA_DAN_PO_LOKACIJI]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_OS_BILANCA_STANJA_NA_DAN_PO_LOKACIJI]
GO

CREATE PROCEDURE [dbo].[S_OS_BILANCA_STANJA_NA_DAN_PO_LOKACIJI]
(
	@DATUM DATETIME,  -- DATUM STANJA ZA KOJE SE TRAĹ˝I ISPIS
	@SORT VARCHAR(1), -- 1 PO NAZIVU --- 0 PO INVENTARNOM BROJU
	@vrsta INT --- 1 osnovna ---- 2 sitni
)
AS
BEGIN

 IF @SORT = '0'
begin

SELECT TEST22.OPISLOKACIJE,TEST22.STANJE,TEST22.IDLOKACIJE,OS.IDOSVRSTA,AMSKUPINE.KTOISPRAVKAIDKONTO,AMSKUPINE.KTOIZVORAIDKONTO,AMSKUPINE.KTONABAVKEIDKONTO,OS.NAZIVOS,p.invbroj AS invbroj,

ROUND(SUM(p.nabavnaduguje - p.nabavnapotrazuje) / TEST22.STANJE,2) AS nabavna,ROUND(SUM(p.ispravakpotrazuje -p.ispravakduguje) /TEST22.STANJE,2)  AS ispravak,
ROUND((SUM(p.nabavnaduguje - p.nabavnapotrazuje) - SUM(p.ispravakpotrazuje -p.ispravakduguje)) / TEST22.STANJE,2) AS sadasnja


FROM
(

SELECT invbroj,SUM(osduguje) AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje ,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (1,4,6) AND OSDATUMDOK &lt;= @datum

GROUP BY INVBROJ
UNION ALL
SELECT invbroj,0 AS nabavnaduguje,SUM(ospotrazuje) AS nabavnapotrazuje,SUM(osduguje) AS ispravakduguje,0 AS ispravakpotrazuje,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (3,5,7) AND OSDATUMDOK &lt;= @datum
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK 
UNION all
SELECT invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,SUM(ospotrazuje) AS ispravakpotrazuje,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (2) AND OSDATUMDOK &lt;= @datum
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK 
UNION all
SELECT invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje,SUM(oskolicina) as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (1,6) AND OSDATUMDOK &lt;= @datum
GROUP BY INVBROJ
UNION all
SELECT invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje,0 as ulaz,SUM(oskolicina) AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (3,7) AND OSDATUMDOK &lt;= @datum
GROUP BY INVBROJ
) AS p
INNER JOIN os ON p.invbroj = os.INVBROJ INNER JOIN AMSKUPINE ON OS.IDAMSKUPINE = AMSKUPINE.IDAMSKUPINE
INNER JOIN (SELECT osrazmjestaj.idlokacije AS idlokacije,invbroj,SUM(kolicinaulaza) AS ulaz,SUM(kolicinarashoda) AS izlaz, SUM(kolicinaulaza) + SUM(kolicinarashoda) AS stanje,
lokacije.opislokacije AS opislokacije
FROM osrazmjestaj INNER JOIN lokacije ON osrazmjestaj.idlokacije = lokacije.IDLOKACIJE
GROUP BY osrazmjestaj.idlokacije,invbroj,lokacije.opislokacije
HAVING SUM(kolicinaulaza) + SUM(kolicinarashoda) &gt; 0 
) AS TEST22 ON P.INVBROJ = TEST22.INVBROJ
WHERE os.IDOSVRSTA = @vrsta
GROUP BY OS.IDOSVRSTA,p.invbroj,OS.NAZIVOS,AMSKUPINE.KTOISPRAVKAIDKONTO,AMSKUPINE.KTOIZVORAIDKONTO,AMSKUPINE.KTONABAVKEIDKONTO,TEST22.idlokacije,TEST22.STANJE,TEST22.opislokacije

ORDER BY p.INVBROJ
END

IF @SORT = '1'
begin

SELECT TEST22.OPISLOKACIJE,TEST22.STANJE,TEST22.IDLOKACIJE,OS.IDOSVRSTA,AMSKUPINE.KTOISPRAVKAIDKONTO,AMSKUPINE.KTOIZVORAIDKONTO,AMSKUPINE.KTONABAVKEIDKONTO,OS.NAZIVOS,p.invbroj AS invbroj,

ROUND(SUM(p.nabavnaduguje - p.nabavnapotrazuje) / TEST22.STANJE,2) AS nabavna,ROUND(SUM(p.ispravakpotrazuje -p.ispravakduguje) /TEST22.STANJE,2)  AS ispravak,
ROUND((SUM(p.nabavnaduguje - p.nabavnapotrazuje) - SUM(p.ispravakpotrazuje -p.ispravakduguje)) / TEST22.STANJE,2) AS sadasnja
FROM
(

SELECT invbroj,SUM(osduguje) AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje ,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (1,4,6) AND OSDATUMDOK &lt;= @datum

GROUP BY INVBROJ
UNION ALL
SELECT invbroj,0 AS nabavnaduguje,SUM(ospotrazuje) AS nabavnapotrazuje,SUM(osduguje) AS ispravakduguje,0 AS ispravakpotrazuje,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (3,5,7) AND OSDATUMDOK &lt;= @datum
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK 
UNION all
SELECT invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,SUM(ospotrazuje) AS ispravakpotrazuje,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (2) AND OSDATUMDOK &lt;= @datum
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK 
UNION all
SELECT invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje,SUM(oskolicina) as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (1,6) AND OSDATUMDOK &lt;= @datum
GROUP BY INVBROJ
UNION all
SELECT invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje,0 as ulaz,SUM(oskolicina) AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (3,7) AND OSDATUMDOK &lt;= @datum
GROUP BY INVBROJ
) AS p
INNER JOIN os ON p.invbroj = os.INVBROJ INNER JOIN AMSKUPINE ON OS.IDAMSKUPINE = AMSKUPINE.IDAMSKUPINE
INNER JOIN (SELECT osrazmjestaj.idlokacije AS idlokacije,invbroj,SUM(kolicinaulaza) AS ulaz,SUM(kolicinarashoda) AS izlaz, SUM(kolicinaulaza) + SUM(kolicinarashoda) AS stanje,
lokacije.opislokacije AS opislokacije
FROM osrazmjestaj INNER JOIN lokacije ON osrazmjestaj.idlokacije = lokacije.IDLOKACIJE
GROUP BY osrazmjestaj.idlokacije,invbroj,lokacije.opislokacije
HAVING SUM(kolicinaulaza) + SUM(kolicinarashoda) &gt; 0 
) AS TEST22 ON P.INVBROJ = TEST22.INVBROJ
WHERE os.IDOSVRSTA = @vrsta
GROUP BY OS.IDOSVRSTA,p.invbroj,OS.NAZIVOS,AMSKUPINE.KTOISPRAVKAIDKONTO,AMSKUPINE.KTOIZVORAIDKONTO,AMSKUPINE.KTONABAVKEIDKONTO,TEST22.idlokacije,TEST22.STANJE,TEST22.opislokacije

ORDER BY OS.NAZIVOS
END
END
go

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_FIN_FINANCIJSKO_UPRAVLJANJE]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_FIN_FINANCIJSKO_UPRAVLJANJE]
GO

CREATE PROCEDURE [dbo].[S_FIN_FINANCIJSKO_UPRAVLJANJE]
(
		@RAZDOBLJEOD DATEtime = NULL,
		@RAZDOBLJEDO DATEtime = NULL
	
					
	)
AS 
BEGIN
SELECT P.IDORGJED,P.NAZIVORGJED,SUM(p.visak_manjak) AS VISAK_ILI_MANJAK_PRETHODNIH,SUM(P.PRIHODI) AS PRIHODI,SUM(P.RASHODI) AS RASHODI,SUM(P.PRIHODI)-SUM(P.RASHODI) AS VISAK_ILI_MANJAK_TEKUCE,SUM(p.visak_manjak) + SUM(P.PRIHODI)-SUM(P.RASHODI) AS VISAK_ILI_MANJAK_UKUPNI
,SUM(P.NENAPLACENO) AS NENAPLACENO,p.IDMJESTOTROSKA,p.NAZIVMJESTOTROSKA

FROM

(
SELECT gkstavka.IDMJESTOTROSKA,dbo.MJESTOTROSKA.NAZIVMJESTOTROSKA,GKSTAVKA.idorgjed,nazivorgjed,SUM(POTRAZUJE)-SUM(DUGUJE) AS visak_manjak,0 AS prihodi,0 AS rashodi,0 tekucagodina,0 AS visak_manjak_ukupni,0 AS nenaplaceno FROM gkstavka INNER JOIN orgjed ON gkstavka.idorgjed = orgjed.IDORGJED INNER JOIN dbo.MJESTOTROSKA ON gkstavka.IDMJESTOTROSKA = dbo.MJESTOTROSKA.IDMJESTOTROSKA WHERE idkonto LIKE '92%' and  (DATUMDOKUMENTA between @RAZDOBLJEOD AND @RAZDOBLJEDO) GROUP BY GKSTAVKA.IDORGJED,ORGJED.NAZIVORGJED,gkstavka.IDMJESTOTROSKA,dbo.MJESTOTROSKA.NAZIVMJESTOTROSKA
UNION ALL
SELECT gkstavka.IDMJESTOTROSKA,dbo.MJESTOTROSKA.NAZIVMJESTOTROSKA,GKSTAVKA.idorgjed,nazivorgjed,0 AS visak_manjak,SUM(potrazuje) AS prihodi ,0 AS rashodi,0 AS tekucagodina,0,0 FROM gkstavka INNER JOIN orgjed ON gkstavka.idorgjed = orgjed.IDORGJED INNER JOIN dbo.MJESTOTROSKA ON gkstavka.IDMJESTOTROSKA = dbo.MJESTOTROSKA.IDMJESTOTROSKA WHERE (idkonto LIKE '6%' or idkonto LIKE '7%') AND (DATUMDOKUMENTA between @RAZDOBLJEOD AND @RAZDOBLJEDO)  GROUP BY GKSTAVKA.IDORGJED,ORGJED.NAZIVORGJED,gkstavka.IDMJESTOTROSKA,dbo.MJESTOTROSKA.NAZIVMJESTOTROSKA
UNION ALL
SELECT gkstavka.IDMJESTOTROSKA,dbo.MJESTOTROSKA.NAZIVMJESTOTROSKA,GKSTAVKA.idorgjed,nazivorgjed,0 AS visak_manjak,0  AS prihodi ,SUM(duguje) AS rashodi ,0 AS tekucagodina,0,0 FROM gkstavka INNER JOIN orgjed ON gkstavka.idorgjed = orgjed.IDORGJED INNER JOIN dbo.MJESTOTROSKA ON gkstavka.IDMJESTOTROSKA = dbo.MJESTOTROSKA.IDMJESTOTROSKA WHERE (idkonto LIKE '3%' or idkonto LIKE '4%') AND (DATUMDOKUMENTA between @RAZDOBLJEOD AND @RAZDOBLJEDO)  GROUP BY GKSTAVKA.IDORGJED,ORGJED.NAZIVORGJED,gkstavka.IDMJESTOTROSKA,dbo.MJESTOTROSKA.NAZIVMJESTOTROSKA
UNION all
SELECT gkstavka.IDMJESTOTROSKA,dbo.MJESTOTROSKA.NAZIVMJESTOTROSKA,GKSTAVKA.idorgjed,nazivorgjed,0 AS visak_manjak,0  AS prihodi ,0  AS rashodi ,SUM(potrazuje - duguje) AS tekucagodina ,0,0 FROM gkstavka INNER JOIN orgjed ON gkstavka.idorgjed = orgjed.IDORGJED INNER JOIN dbo.MJESTOTROSKA ON gkstavka.IDMJESTOTROSKA = dbo.MJESTOTROSKA.IDMJESTOTROSKA WHERE (idkonto LIKE '3%' or idkonto LIKE '4%' OR idkonto LIKE '6%' or idkonto LIKE '7%') AND (DATUMDOKUMENTA between @RAZDOBLJEOD AND @RAZDOBLJEDO)  GROUP BY GKSTAVKA.IDORGJED,ORGJED.NAZIVORGJED,gkstavka.IDMJESTOTROSKA,dbo.MJESTOTROSKA.NAZIVMJESTOTROSKA
UNION ALL
SELECT gkstavka.IDMJESTOTROSKA,dbo.MJESTOTROSKA.NAZIVMJESTOTROSKA,GKSTAVKA.idorgjed,nazivorgjed,0 AS visak_manjak,0  AS prihodi ,0  AS rashodi ,0  AS tekucagodina ,0,SUM(DUGUJE) - SUM(POTRAZUJE) FROM gkstavka INNER JOIN orgjed ON gkstavka.idorgjed = orgjed.IDORGJED  INNER JOIN dbo.MJESTOTROSKA ON gkstavka.IDMJESTOTROSKA = dbo.MJESTOTROSKA.IDMJESTOTROSKA WHERE (idkonto LIKE '16%') AND (DATUMDOKUMENTA between @RAZDOBLJEOD AND @RAZDOBLJEDO)  GROUP BY GKSTAVKA.IDORGJED,ORGJED.NAZIVORGJED,gkstavka.IDMJESTOTROSKA,dbo.MJESTOTROSKA.NAZIVMJESTOTROSKA
)  AS p
GROUP BY P.IDORGJED,P.NAZIVORGJED,p.idmjestotroska,p.nazivmjestotroska
END
go


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_OS_PREGLED_AMORTIZACIJE_REKAPITULACIJA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_OS_PREGLED_AMORTIZACIJE_REKAPITULACIJA]
GO

create PROCEDURE [dbo].[S_OS_PREGLED_AMORTIZACIJE_REKAPITULACIJA]
(

@BROJDOK BIGINT
)

AS
BEGIN

---- Ispis amortizacijske temeljnice join na stanje po inv.broju
---- ispisuje nabavnu,ispravak,ispravakprethodnih i sadasnje stanje, te kolicinu
--- 

DECLARE @datumamort DATETIME
DECLARE @prethodnagodina datetime
SET @datumamort = (SELECT TOP 1 ostemeljnica.OSDATUMDOK FROM ostemeljnica WHERE ostemeljnica.OSBROJDOKUMENTA = @BROJDOK)

---- Ovo sluzi da se izracuna stanje ispravka u prethodnim godinama
----- znaci amortizacija je na 31.12.2011. i prethodne su na dan 31.12.2010.

SET @prethodnagodina =  '12/31/' + CONVERT(VARCHAR(4),YEAR(@datumamort)-1)


SELECT osopis,AMSKUPINE.KTONABAVKEIDKONTO,AMSKUPINE.KTOISPRAVKAIDKONTO,AMSKUPINE.KTOIZVORAIDKONTO,
konto.NAZIVKONTO,idosdokument,osbrojdokumenta,SUM(oskolicina) AS oskolicina,MAX(osstopa) AS osstopa,SUM(ososnovica) AS ososnovica,SUM(ospotrazuje) AS ispravak,SUM(ispravakprethodnih) AS ispravakprethodnih
FROM ostemeljnica
INNER JOIN (
SELECT konacno.invbroj,SUM(AMSKUPINASTOPA) AS stopa,SUM(kolicina) AS kolicina,SUM(nabavna) AS nabavna,
SUM(ispravak) AS ispravak,SUM(ispravakprethodnih) AS ispravakprethodnih,
SUM(ispravak) - SUM(ispravakprethodnih) AS ispravaktekuce,
os.DATUMUPORABE
FROM
(
SELECT 
p.invbroj,dbo.AMSKUPINE.AMSKUPINASTOPA,SUM(p.ulaz + p.izlaz) AS kolicina,
SUM(p.nabavnaduguje - p.nabavnapotrazuje) AS nabavna,SUM(p.ispravakpotrazuje -p.ispravakduguje) AS ispravak,0 AS ispravakprethodnih
FROM 
(
SELECT ostemeljnica.OSDATUMDOK,invbroj,SUM(osduguje) AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje ,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (1,4,6) 
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK
UNION ALL
SELECT ostemeljnica.OSDATUMDOK,invbroj,0 AS nabavnaduguje,SUM(ospotrazuje) AS nabavnapotrazuje,SUM(osduguje) AS ispravakduguje,0 AS ispravakpotrazuje,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (3,5,7) 
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK
UNION all
SELECT ostemeljnica.OSDATUMDOK,invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,SUM(ospotrazuje) AS ispravakpotrazuje,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (2) 
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK
UNION all
SELECT ostemeljnica.OSDATUMDOK,invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje,SUM(oskolicina) as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (1,6) 
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK
UNION all
SELECT ostemeljnica.OSDATUMDOK,invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje,0 as ulaz,SUM(oskolicina) AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (3,7) 
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK
) AS p
INNER JOIN os ON p.invbroj = os.INVBROJ INNER JOIN amskupine ON os.IDAMSKUPINE = amskupine.idamskupine
WHERE p.OSDATUMDOK &lt;= @datumamort 
GROUP BY p.invbroj,dbo.AMSKUPINE.AMSKUPINASTOPA

UNION ALL

SELECT p.invbroj,0 AS AMSKUPINASTOPA,0 AS kolicina,
0 AS nabavna,0 AS ispravak,SUM(p.ispravakpotrazuje -p.ispravakduguje) AS ispravakprethodnih
FROM 
(
SELECT ostemeljnica.OSDATUMDOK,invbroj,SUM(osduguje) AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje ,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (1,4,6) 
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK
UNION ALL
SELECT ostemeljnica.OSDATUMDOK,invbroj,0 AS nabavnaduguje,SUM(ospotrazuje) AS nabavnapotrazuje,SUM(osduguje) AS ispravakduguje,0 AS ispravakpotrazuje,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (3,5,7) 
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK
UNION all
SELECT ostemeljnica.OSDATUMDOK,invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,SUM(ospotrazuje) AS ispravakpotrazuje,0 as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (2) 
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK
UNION all
SELECT ostemeljnica.OSDATUMDOK,invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje,SUM(oskolicina) as ulaz,0 AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (1,6) 
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK
UNION all
SELECT ostemeljnica.OSDATUMDOK,invbroj,0 AS nabavnaduguje,0 AS nabavnapotrazuje,0 AS ispravakduguje,0 AS ispravakpotrazuje,0 as ulaz,SUM(oskolicina) AS izlaz FROM ostemeljnica  
WHERE idosdokument IN (3,7) 
GROUP BY INVBROJ,ostemeljnica.OSDATUMDOK
) AS p
INNER JOIN os ON p.invbroj = os.INVBROJ INNER JOIN amskupine ON os.IDAMSKUPINE = amskupine.idamskupine
WHERE p.OSDATUMDOK &lt;= @prethodnagodina
GROUP BY p.invbroj,dbo.AMSKUPINE.AMSKUPINASTOPA,AMSKUPINE.KTONABAVKEIDKONTO,AMSKUPINE.KTOISPRAVKAIDKONTO,AMSKUPINE.KTOIZVORAIDKONTO
) AS konacno
INNER JOIN os ON os.INVBROJ = konacno.invbroj
GROUP BY konacno.invbroj,os.DATUMUPORABE
--ORDER BY konacno.invbroj
) AS test
ON test.invbroj = ostemeljnica.invbroj INNER JOIN os ON test.invbroj = os.invbroj INNER JOIN dbo.AMSKUPINE ON OS.IDAMSKUPINE = AMSKUPINE.IDAMSKUPINE
INNER JOIN konto ON dbo.AMSKUPINE.KTONABAVKEIDKONTO = dbo.KONTO.IDKONTO 

WHERE ostemeljnica.OSBROJDOKUMENTA =@BROJDOK
GROUP BY osopis,AMSKUPINE.KTONABAVKEIDKONTO,AMSKUPINE.KTOISPRAVKAIDKONTO,AMSKUPINE.KTOIZVORAIDKONTO,
konto.NAZIVKONTO,idosdokument,osbrojdokumenta
END
go


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_SIFREOBRACUNA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_SIFREOBRACUNA]
GO

CREATE PROCEDURE [dbo].[S_PLACA_SIFREOBRACUNA]
(
@ODGODINE VARCHAR(4),
@ODMJESECA VARCHAR(2),
@DOGODINE VARCHAR(4),
@DOMJESECA VARCHAR(2)
)
AS
BEGIN
SELECT idobracun FROM obracun  WHERE OBRACUN.MJESECOBRACUNA BETWEEN @ODMJESECA AND @DOMJESECA AND 
OBRACUN.GODINAOBRACUNA BETWEEN @ODGODINE AND @DOGODINE
END
go


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_UCENIK_RSM_OBRAZAC]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_UCENIK_RSM_OBRAZAC]
GO


CREATE PROCEDURE [dbo].[S_UCENIK_RSM_OBRAZAC]
(
    @DO AS INT OUTPUT,
    @DO1 AS INT OUTPUT,
    @IDOBRACUN AS VARCHAR (11),
    @IDRADNIK AS INT OUTPUT,
    @MAX_REDNIBROJ AS INT OUTPUT,
    @OD AS INT OUTPUT,
    @OD1 AS INT OUTPUT,
    @OO AS VARCHAR (2) OUTPUT,
    @TRENUTNI_IDRADNIK AS INT OUTPUT,
    @TRENUTNI_OO AS VARCHAR (2) OUTPUT,
    @TRENUTNI_REDNIBROJ AS INT OUTPUT,
    @USPOREDBA AS INT OUTPUT
 ) AS
BEGIN
	INSERT INTO #RSMB
		(
		idradnik,
		PREZIMEIIME,
		MBGOSIGURANIKA,
		SIFRAGRADARADA,
		OO,
		B,
		OD,
		DOO,
		IZNOSOBRACUNANEPLACERSMB,
		IZNOSOSNOVICEZADOPRINOSERSMB,
		IDDOPRINOSMIO1,
		STOPAMIO1,
		MIO1RSMB,
		IDDOPRINOSMIO2,
		STOPAMIO2,
		MIO2RSMB,
		POREZIPRIREZ,
		IZNOSISPLACENEPLACERSMB,
		OIB,
		VOLONTER
		)
	SELECT
		UCENIK.IDUCENIK,
		LEFT(UCENIK.PREZIMEUCENIK + ' ' + UCENIK.IMEUCENIK, 50),
		UCENIK.OIBUCENIK,
		1333,
		20,
		0,
		00,
		00,
		0,
		SUM(OBRACUNOSNOVICEPRAKSA),
		1,
		5,
		SUM(ROUND(OBRACUNOSNOVICEPRAKSA*5/100,2)),
		1,
		0,
		0,
		0,
		0,
		UCENIK.oibucenik,
		1
	FROM 	UCENIKOBRACUNUCENIKOBRACUNDETAIL INNER JOIN UCENIK ON dbo.UCENIK.IDUCENIK = dbo.UCENIKOBRACUNUCENIKOBRACUNDETAIL.IDUCENIK
	INNER JOIN UCENIKOBRACUN ON UCENIKOBRACUNUCENIKOBRACUNDETAIL.UCOBRMJESEC = UCENIKOBRACUN.UCOBRMJESEC AND 
	UCENIKOBRACUNUCENIKOBRACUNDETAIL.UCOBRGODINA = UCENIKOBRACUN.UCOBRGODINA
	
	
	
	GROUP BY UCENIKOBRACUN.AKTIVANZARSM,UCENIK.IDUCENIK,UCENIK.PREZIMEUCENIK,UCENIK.IMEUCENIK,UCENIK.OIBUCENIK
	having UCENIKOBRACUN.AKTIVANZARSM = 1 AND  SUM(OBRACUNOSNOVICEPRAKSA) &gt; 0
	SELECT * FROM #RSMB
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[S_PLACA_TABLICA018]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[S_PLACA_TABLICA018]
GO


CREATE PROCEDURE [dbo].[S_PLACA_TABLICA018]
(

@GODINAOBRACUNA varchar(4) = '2011'
)
AS
BEGIN
SELECT P.DATUMISPLATE,P.GODINAOBRACUNA,P.MJESECOBRACUNA,SUM(P.SAMOPRVISTUPOSNOVICA) AS SAMOPRVISTUPOSNOVICA,
SUM(P.SAMOPRVISTUPOBRACUNATI) AS SAMOPRVISTUPOBRACUNATI,SUM(P.STUPOSNOVICA) AS STUPOSNOVICA ,SUM(P.STUPOBRACUNATI) AS STUPOBRACUNATI
FROM
(
SELECT OBRACUN.DATUMISPLATE,OBRACUN.GODINAOBRACUNA,OBRACUN.MJESECOBRACUNA,SUM(OSNOVICADOPRINOS) AS SAMOPRVISTUPOSNOVICA,SUM(OBRACUNATIDOPRINOS) AS SAMOPRVISTUPOBRACUNATI ,0 AS STUPOSNOVICA,0 AS STUPOBRACUNATI
FROM dbo.OBRACUNDOPRINOSI INNER JOIN OBRACUN ON dbo.ObracunDoprinosi.IDOBRACUN = dbo.OBRACUN.IDOBRACUN
WHERE LEFT(PODOPRINOS,5) = '8109-' AND STOPA = 20 AND OBRACUN.GODINAOBRACUNA = @GODINAOBRACUNA
GROUP BY OBRACUN.DATUMISPLATE,OBRACUN.MJESECOBRACUNA,OBRACUN.GODINAOBRACUNA

UNION ALL
SELECT OBRACUN.DATUMISPLATE,OBRACUN.GODINAOBRACUNA,OBRACUN.MJESECOBRACUNA,0 AS SAMOPRVISTUPOSNOVICA,0 AS SAMOPRVISTUPOBRACUNATI ,SUM(OSNOVICADOPRINOS) AS STUPOSNOVICA,SUM(OBRACUNATIDOPRINOS) AS STUPOBRACUNATI
FROM dbo.OBRACUNDOPRINOSI INNER JOIN OBRACUN ON dbo.ObracunDoprinosi.IDOBRACUN = dbo.OBRACUN.IDOBRACUN
WHERE LEFT(PODOPRINOS,5) = '8109-' AND STOPA = 15 AND OBRACUN.GODINAOBRACUNA = @GODINAOBRACUNA
GROUP BY OBRACUN.DATUMISPLATE,OBRACUN.MJESECOBRACUNA,OBRACUN.GODINAOBRACUNA
) AS  P
GROUP BY P.DATUMISPLATE,P.GODINAOBRACUNA,P.MJESECOBRACUNA
ORDER BY 2
END
GO
</value>
  </data>
</root>